{"version":3,"sources":["containers.js"],"names":["define","skylark","langx","isBrowser","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","scrollingElement","oriented","touch","autoscroll","dnd","_index","el","selector","index","nodeName","toUpperCase","cloneEl","matches","_isElInRowColumn","el1","el2","axis","dragEl","el1Rect","boundingRect","el2Rect","el1S1Opp","left","top","el1S2Opp","right","bottom","el1OppLength","width","height","el2S1Opp","el2S2Opp","el2OppLength","_isClientInRowColumn","x","y","options","targetRect","targetS1Opp","targetS2Opp","mouseOnOppAxis"],"mappings":";;;;;;;AAAAA,QACC,wBACA,sBACA,iCACA,gCACA,qBACA,uBACA,qBACA,sBACA,oBACA,sBACA,uBACA,0BACA,wCACA,gCACA,+BACA,eACA,SACC,SACDC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAiDA,OACCC,OAxCS,SAAUC,EAAIC,GACtB,OAAOZ,EAAOa,MAAMF,EAAG,SAASA,GAC/B,QAAmC,aAA9BA,EAAGG,SAASC,eAAiCJ,IAAOF,EAAIO,SAAaJ,IAAYZ,EAAOiB,QAAQN,EAAIC,OAuC3GM,iBAtBmB,SAASC,EAAKC,EAAKC,GACxBZ,EAAIa,OAAjB,IAEIC,EAAUtB,EAAKuB,aAAaL,GAC/BM,EAAUxB,EAAKuB,aAAaJ,GAC5BM,EAAoB,aAATL,EAAsBE,EAAQI,KAAOJ,EAAQK,IACxDC,EAAoB,aAATR,EAAsBE,EAAQO,MAAQP,EAAQQ,OACzDC,EAAwB,aAATX,EAAsBE,EAAQU,MAAQV,EAAQW,OAC7DC,EAAoB,aAATd,EAAsBI,EAAQE,KAAOF,EAAQG,IACxDQ,EAAoB,aAATf,EAAsBI,EAAQK,MAAQL,EAAQM,OACzDM,EAAwB,aAAThB,EAAsBI,EAAQQ,MAAQR,EAAQS,OAE9D,OACCR,IAAaS,GACbN,IAAaO,GACZV,EAAWM,EAAe,IAAQG,EAAWE,EAAe,GAQ/DC,qBAhCuB,SAASC,EAAGC,EAAG7B,EAAIU,EAAMoB,GAC/C,IAAIC,EAAazC,EAAKuB,aAAab,GAClCgC,EAAuB,aAATtB,EAAsBqB,EAAWf,KAAOe,EAAWd,IACjEgB,EAAuB,aAATvB,EAAsBqB,EAAWZ,MAAQY,EAAWX,OAClEc,EAA0B,aAATxB,EAAsBkB,EAAIC,EAE5C,OAAOG,EAAcE,GAAkBA,EAAiBD","file":"../containers.js","sourcesContent":["define([\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./dnd\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll,\r\n\tdnd\r\n){\r\n\tvar\r\n\t\t/**\r\n\t\t * Returns the index of an element within its parent for a selected set of\r\n\t\t * elements\r\n\t\t * @param  {HTMLElement} el\r\n\t\t * @param  {selector} selector\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\t_index = function (el, selector) {\r\n\t\t\treturn finder.index(el,function(el){\r\n\t\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\r\n\t\t\tvar targetRect = geom.boundingRect(el),\r\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\r\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\r\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\r\n\r\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\r\n\t\t},\r\n\r\n\t\t_isElInRowColumn = function(el1, el2, axis) {\r\n\t\t\tvar dragEl = dnd.dragEl;\r\n\r\n\t\t\tvar el1Rect = geom.boundingRect(el1),//el1 === dragEl && realDragElRect || geom.boundingRect(el1),\r\n\t\t\t\tel2Rect = geom.boundingRect(el2),//el2 === dragEl && realDragElRect || geom.boundingRect(el2),\r\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\r\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\r\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\r\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\r\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\r\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\r\n\r\n\t\t\treturn (\r\n\t\t\t\tel1S1Opp === el2S1Opp ||\r\n\t\t\t\tel1S2Opp === el2S2Opp ||\r\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\treturn {\r\n\t\t_index,\r\n\t\t_isElInRowColumn,\r\n\t\t_isClientInRowColumn\r\n\t}\r\n\t\r\n});"]}