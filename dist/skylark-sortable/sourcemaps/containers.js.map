{"version":3,"sources":["containers.js"],"names":["define","skylark","langx","$","browser","noder","finder","geom","styler","eventer","transforms","dnd","_index","el","selector","index","nodeName","toUpperCase","cloneEl","matches","_isElInRowColumn","el1","el2","axis","draggable","dragEl","el1Rect","boundingRect","el2Rect","el1S1Opp","left","top","el1S2Opp","right","bottom","el1OppLength","width","height","el2S1Opp","el2S2Opp","el2OppLength","_isClientInRowColumn","x","y","options","targetRect","targetS1Opp","targetS2Opp","mouseOnOppAxis"],"mappings":";;;;;;;AAAAA,QACC,wBACA,sBACA,qBACA,uBACA,qBACA,sBACA,oBACA,sBACA,uBACA,0BACA,SACC,SACDC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEG,aAiDH,OACCC,OAxCS,SAAUC,EAAIC,GACtB,OAAOR,EAAOS,MAAMF,EAAG,SAASA,GAC/B,QAAmC,aAA9BA,EAAGG,SAASC,eAAiCJ,IAAOF,EAAIO,SAAaJ,IAAYR,EAAOa,QAAQN,EAAIC,OAuC3GM,iBAtBmB,SAASC,EAAKC,EAAKC,GACxBZ,EAAIa,UAAUC,OAA3B,IAEIC,EAAUnB,EAAKoB,aAAaN,GAC/BO,EAAUrB,EAAKoB,aAAaL,GAC5BO,EAAoB,aAATN,EAAsBG,EAAQI,KAAOJ,EAAQK,IACxDC,EAAoB,aAATT,EAAsBG,EAAQO,MAAQP,EAAQQ,OACzDC,EAAwB,aAATZ,EAAsBG,EAAQU,MAAQV,EAAQW,OAC7DC,EAAoB,aAATf,EAAsBK,EAAQE,KAAOF,EAAQG,IACxDQ,EAAoB,aAAThB,EAAsBK,EAAQK,MAAQL,EAAQM,OACzDM,EAAwB,aAATjB,EAAsBK,EAAQQ,MAAQR,EAAQS,OAE9D,OACCR,IAAaS,GACbN,IAAaO,GACZV,EAAWM,EAAe,IAAQG,EAAWE,EAAe,GAQ/DC,qBAhCuB,SAASC,EAAGC,EAAG9B,EAAIU,EAAMqB,GAC/C,IAAIC,EAAatC,EAAKoB,aAAad,GAClCiC,EAAuB,aAATvB,EAAsBsB,EAAWf,KAAOe,EAAWd,IACjEgB,EAAuB,aAATxB,EAAsBsB,EAAWZ,MAAQY,EAAWX,OAClEc,EAA0B,aAATzB,EAAsBmB,EAAIC,EAE5C,OAAOG,EAAcE,GAAkBA,EAAiBD","file":"../containers.js","sourcesContent":["define([\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"./dnd\"\n],function(\n\tskylark,\n\tlangx,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tdnd\n){\n    'use strict';\n\n\tvar\n\t\t/**\n\t\t * Returns the index of an element within its parent for a selected set of\n\t\t * elements\n\t\t * @param  {HTMLElement} el\n\t\t * @param  {selector} selector\n\t\t * @return {number}\n\t\t */\n\t\t_index = function (el, selector) {\n\t\t\treturn finder.index(el,function(el){\n\t\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\t\t\t\n\t\t\t})\n\t\t},\n\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\n\t\t\tvar targetRect = geom.boundingRect(el),\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t\t},\n\n\t\t_isElInRowColumn = function(el1, el2, axis) {\n\t\t\tvar dragEl = dnd.draggable.dragEl;\n\n\t\t\tvar el1Rect = geom.boundingRect(el1),//el1 === dragEl && realDragElRect || geom.boundingRect(el1),\n\t\t\t\tel2Rect = geom.boundingRect(el2),//el2 === dragEl && realDragElRect || geom.boundingRect(el2),\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\t\treturn (\n\t\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t\t);\n\t\t};\n\n\n\treturn {\n\t\t_index,\n\t\t_isElInRowColumn,\n\t\t_isClientInRowColumn\n\t}\n\t\n});"]}