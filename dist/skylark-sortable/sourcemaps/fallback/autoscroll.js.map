{"version":3,"sources":["fallback/autoscroll.js"],"names":["define","langx","isBrowser","geom","styler","finder","scrollingElement","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","autoScrolls","ie","edge","firefox","safari","_throttleTimeout","_autoScroll","_throttle","evt","options","rootEl","isFallback","expando","scroll","window","sens","scrollSensitivity","speed","scrollSpeed","x","clientX","y","clientY","winScroller","layersOut","currentParent","scrollableParent","scrollWidth","scrollHeight","css","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","el","rect","boundingRect","top","bottom","left","right","width","height","scrollLeft","scrollTop","overflowX","overflowY","Math","abs","i","clearInterval","pid","setInterval","scrollOffsetY","this","layer","scrollOffsetX","scrollBy","bind","bubbleScroll","_clearAutoScrolls","forEach","autoScroll","callback","ms","debounce","_getRelativeScrollOffset","offsets","scrollOffset","offsetLeft","offsetTop","_handleAutoScroll","fallback","ogElemScroller","document","elementFromPoint","newElem","_cancelThrottle","stop","_nulling","scrollEl","scrollParentEl","length"],"mappings":"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","file":"../../fallback/autoscroll.js","sourcesContent":["define([\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/is-browser\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-plugins-scrolls/scrolling-element\"\n],function(\n\tlangx,\n\tisBrowser,\n\tgeom,\n\tstyler,\n\tfinder,\n\tscrollingElement\n){\n    'use strict';\n\n\tvar autoScrolls = [],\n\t\tscrolling = false,\n\t\tscrollEl,\n\t\tscrollCustomFn,\n\t\tpointerElemChangedInterval,\n\n\t\tlastPointerElemX,\n\t\tlastPointerElemY,\n\n\n\t\tscrollParentEl = null;\n\n\tvar\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari;\n\n\n\n\t/**\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n\t * The value is returned in real pixels.\n\t * @param  {HTMLElement} el\n\t * @return {Array}             Offsets in the format of [left, top]\n\t */\n\tfunction _getRelativeScrollOffset(el) {\n\t\tvar offsets = geom.scrollOffset(el);\n\t\treturn [offsets.offsetLeft, offsets.offsetTop];\n\t}\n\n\n\tvar _autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback,expando) {\n\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\tif (options.scroll) {\n\t\t\tvar _this = rootEl ? rootEl[expando] : window,\n\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\tx = evt.clientX,\n\t\t\t\ty = evt.clientY,\n\n\t\t\t\twinScroller = scrollingElement(),\n\n\t\t\t\tscrollThisInstance = false;\n\n\t\t\t// Detect scrollEl\n\t\t\t///if (scrollParentEl !== rootEl) {\n\t\t\t///\t_clearAutoScrolls();\n\n\t\t\t///\tscrollEl = options.scroll;\n\t\t\t///\tscrollCustomFn = options.scrollFn;\n\n\t\t\t///\tif (scrollEl === true) {\n\t\t\t\t\tscrollEl = finder.scrollableParent(rootEl, true);\n\t\t\t///\t\tscrollParentEl = scrollEl;\n\t\t\t///\t}\n\t\t\t///}\n\n\n\t\t\tvar layersOut = 0;\n\t\t\tvar currentParent = scrollEl;\n\t\t\tdo {\n\t\t\t\tvar\tel = currentParent,\n\t\t\t\t\trect = geom.boundingRect(el),\n\n\t\t\t\t\ttop = rect.top,\n\t\t\t\t\tbottom = rect.bottom,\n\t\t\t\t\tleft = rect.left,\n\t\t\t\t\tright = rect.right,\n\n\t\t\t\t\twidth = rect.width,\n\t\t\t\t\theight = rect.height,\n\n\t\t\t\t\tscrollWidth,\n\t\t\t\t\tscrollHeight,\n\n\t\t\t\t\tcss,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tcanScrollX,\n\t\t\t\t\tcanScrollY,\n\n\t\t\t\t\tscrollPosX,\n\t\t\t\t\tscrollPosY;\n\n\n\t\t\t\tscrollWidth = el.scrollWidth;\n\t\t\t\tscrollHeight = el.scrollHeight;\n\n\t\t\t\tcss = styler.css(el);\n\n\t\t\t\tscrollPosX = el.scrollLeft;\n\t\t\t\tscrollPosY = el.scrollTop;\n\n\t\t\t\tif (el === winScroller) {\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\n\t\t\t\t} else {\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\n\t\t\t\t}\n\n\t\t\t\tvx = canScrollX && (Math.abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n\n\t\t\t\tvy = canScrollY && (Math.abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n\n\t\t\t\tif (!autoScrolls[layersOut]) {\n\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\n\t\t\t\t\t\tif (!autoScrolls[i]) {\n\t\t\t\t\t\t\tautoScrolls[i] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n\t\t\t\t\tautoScrolls[layersOut].el = el;\n\t\t\t\t\tautoScrolls[layersOut].vx = vx;\n\t\t\t\t\tautoScrolls[layersOut].vy = vy;\n\n\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\n\n\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\n\t\t\t\t\t\tscrollThisInstance = true;\n\t\t\t\t\t\t/* jshint loopfunc:true */\n\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\n\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n\t\t\t\t\t\t\t///if (isFallback && this.layer === 0) {\n\t\t\t\t\t\t\t///\tSortable.active._emulateDragOver(true);\n\t\t\t\t\t\t\t///\tSortable.active._onTouchMove(toudrachEvt, true);\n\t\t\t\t\t\t\t///}\n\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, evt, autoScrolls[this.layer].el) !== 'continue') {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeom.scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlayersOut++;\n\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = finder.scrollableParent(currentParent, false)));\n\t\t\t///scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n\t\t}\n\t}, 30),\n\n\t_clearAutoScrolls = function () {\n\t\tautoScrolls.forEach(function(autoScroll) {\n\t\t\tclearInterval(autoScroll.pid);\n\t\t});\n\t\tautoScrolls = [];\n\t},\n\n\t_handleAutoScroll = function(evt, options,fallback,expando) {\n\t\tvar x = evt.clientX,\n\t\t\ty = evt.clientY,\n\n\t\t\telem = document.elementFromPoint(x, y);\n\n\n\t\t///_throttleTimeout = _autoScroll(evt, options, elem, fallback,expando);\n\n\t\t// Listener for pointer element change\n\t\t////var ogElemScroller = finder.scrollableParent(elem, true);\n\t\tvar ogElemScroller ;\n\t\tif (\n\t\t///\tscrolling &&\n\t\t\t(\n\t\t\t\t!pointerElemChangedInterval ||\n\t\t\t\tx !== lastPointerElemX ||\n\t\t\t\ty !== lastPointerElemY\n\t\t\t)\n\t\t) {\n\n\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\n\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\n\t\t\tpointerElemChangedInterval = setInterval(function() {\n\t\t\t\t//if (!dragEl) return;\n\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\n\t\t\t\tvar newElem = finder.scrollableParent(document.elementFromPoint(x, y), true);\n\t\t\t\tif (newElem !== ogElemScroller) {\n\t\t\t\t\togElemScroller = newElem;\n\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\t_throttleTimeout = _autoScroll(evt, options, ogElemScroller, fallback);\n\t\t\t\t}\n\t\t\t}, 10);\n\t\t\tlastPointerElemX = x;\n\t\t\tlastPointerElemY = y;\n\t\t}\n\t};\n\n\n\tvar _throttleTimeout;\n\tfunction _throttle(callback, ms) {\n\t\treturn langx.debounce(callback,ms);\n\t}\n\n\tfunction _cancelThrottle() {\n\t\t//clearTimeout(_throttleTimeout);\n\t\t//_throttleTimeout = void 0;\n\t\tif (_throttleTimeout && _throttleTimeout.stop) {\n\t\t\t_throttleTimeout.stop();\n\t\t\t_throttleTimeout = void 0;\n\t\t}\n\t}\n\n\t\n\tfunction _nulling() {\n\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\n\t\tpointerElemChangedInterval = null;\n\t\tlastPointerElemX = null;\n\t\tlastPointerElemY = null;\n\n\t\tthis.scrollEl =\n\t\tthis.scrollParentEl =\n\t\tthis.autoScrolls.length = null;\n\n\t}\n\treturn {\n\t\tautoScrolls,\n\t\t\n\t\t_getRelativeScrollOffset,\n\t\t_autoScroll,\n\n\t\t_clearAutoScrolls,\n\t\t_handleAutoScroll,\n\n\t\t_throttle,\n\t\t_cancelThrottle,\n\t\t_nulling\n\t}\n});"]}