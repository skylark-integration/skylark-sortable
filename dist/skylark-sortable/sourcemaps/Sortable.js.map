{"version":3,"sources":["Sortable.js"],"names":["define","skylark","langx","isBrowser","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","scrollingElement","oriented","plugins","touch","dnd","lastDownEl","savedInputChecked","_index","el","selector","index","nodeName","toUpperCase","cloneEl","matches","newIndex","newDraggableIndex","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","pastFirstInvertThresh","isCircumstantialInvert","win","window","document","parseInt","setTimeout","supportDraggable","Polymer","ie","edge","firefox","safari","apple","device","createElement","_silent","support","cssPointerEvents","_alignedSilent","_prepareGroup","options","toFn","value","pull","to","from","dragEl","evt","sameGroup","group","name","otherGroup","join","indexOf","originalGroup","checkPull","checkPut","put","revertClone","Sortable","Plugin","inherit","klassName","pluginName","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","target","ghostEl","this","mixin","excluding","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","fallbackOnBody","forceFallback","fallbackClass","fallbackTolerance","fallbackOffset","x","y","emptyInsertThreshold","_construct","fn","overrided","expando","draggable","test","charAt","bind","nativeDraggable","mousy","on","_onMouseDown","sortables","push","get","startIndex","startDraggableIndex","_this","_elm","type","touches","originalTarget","shadowRoot","path","composedPath","root","length","inputs","getElementsByTagName","idx","checked","_saveInputCheckedState","button","isContentEditable","closest","log","tagName","className","call","_dispatchEvent","undefined","cancelable","preventDefault","split","some","criteria","trim","_prepareDragStart","dragStartFn","rootEl","ownerDocument","oldIndex","parentEl","nextEl","oldDraggableIndex","tapEvt","parentNode","nextSibling","activeGroup","clientX","clientY","_lastX","_lastY","style","transition","transform","_triggerDragStart","toggleClass","forEach","ctx","iterator","list","i","n","_find","_disableDraggable","prepare","_onDragEnd","_onDragStart","selection","defer","empty","getSelection","removeAllRanges","err","fallback","clone","_cloneId","insertBefore","effectAllowed","css","awaitingDragStarted","_dragStartId","start","_nulling","putSortable","clearTimeout","_dragStartTimer","stop","off","end","_onMove","fromEl","toEl","dragRect","targetEl","targetRect","originalEvt","willInsertAfter","retVal","sortable","onMoveFn","onMove","create","dragged","draggedRect","related","relatedRect","boundingRect","originalEvent","dispatchEvent","_computeIsAligned","axis","targetS1Opp","targetS2Opp","mouseOnOppAxis","children","sortableMouseAligned","_getDirection","left","top","right","bottom","_animate","prevRect","ms","currentRect","nodeType","width","height","matrix","scaleX","a","scaleY","d","_repaint","animated","offsetWidth","_offUpEvents","_onDrop","_onDragOver","revert","activeSortable","active","isOwner","canSort","elm","contains","completed","ignoreNextClick","lastPutMode","_hideClone","appendChild","elLastChild","lastChild","ignoreHidden","_lastChild","elRect","mouseOnAxis","targetS2","_ghostIsLast","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_isElInRowColumn","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","_unsilent","Math","abs","insertion","over","nearestEmptyInsertDetectEvent","stopPropagation","remove","save","cloneHidden","hide","show","handleEvent","dropEffect","_globalDragOver","onName","substr","item","pullMode","toArray","order","getAttribute","generateId","items","id","removeChild","set","option","destroy","_onTapStart","Array","prototype","querySelectorAll","removeAttribute","splice","version","attach"],"mappings":"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","file":"../Sortable.js","sourcesContent":["define([\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/isBrowser\",\n\t\"skylark-langx-hoster/isMobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-scrolls/scrollingElement\",\n\t\"skylark-domx-layouts/oriented\",\n    \"skylark-domx-plugins\",\n\t\"skylark-devices-points/touch\",\n\t\"./dnd\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tscrollingElement,\n\toriented,\n\tplugins,\n\ttouch,\n\tdnd\n){\n\n\t'use strict';\n    var \n        lastDownEl,\n        scrolling,\n\n        savedInputChecked = [];\n\n\n    function _find(ctx, tagName, iterator) {\n        if (ctx) {\n            var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n            if (iterator) {\n                for (; i < n; i++) {\n                    iterator(list[i], i);\n                }\n            }\n\n            return list;\n        }\n\n        return [];\n    }\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\treturn finder.index(el,function(el){\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\t\t\t\n\t\t})\n\t}\n\n\n\tfunction _isClientInRowColumn(x, y, el, axis, options) {\n\t\tvar targetRect = geom.boundingRect(el),\n\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t}\n\n\tfunction _isElInRowColumn(el1, el2, axis) {\n\t\t//var dragEl = dnd.active.dragEl;\n\n\t\tvar el1Rect = geom.boundingRect(el1),//el1 === dragEl && realDragElRect || geom.boundingRect(el1),\n\t\t\tel2Rect = geom.boundingRect(el2),//el2 === dragEl && realDragElRect || geom.boundingRect(el2),\n\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\treturn (\n\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t);\n\t}\n\n\n    function _saveInputCheckedState(root) {\n        savedInputChecked.length = 0;\n\n        var inputs = root.getElementsByTagName('input');\n        var idx = inputs.length;\n\n        while (idx--) {\n            var el = inputs[idx];\n            el.checked && savedInputChecked.push(el);\n        }\n    }\n\n\t function _ghostIsLast(evt, axis, el) {\n\t\tvar elRect = geom.boundingRect(finder.lastChild(el,{ignoreHidden : true,excluding : []})),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\n\t\t\tspacer = 10;\n\n\t\treturn (\n\t\t\taxis === 'vertical' ?\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\n\t\t);\n\t}\n\n\n\t/**\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n\t * @param  {HTMLElement} el       Parent element\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\n\t */\n\t function _lastChild(el) {\n\t\t/*\n\t\tvar last = el.lastElementChild;\n\n\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\n\t\t\tlast = last.previousElementSibling;\n\t\t}\n\n\t\treturn last || null;\n\t\t*/\n\t\treturn finder.lastChild(el,{\n\t\t\tignoreHidden : true,\n\t\t\texcluding : []\n\t\t})\n\t}\n\n\tvar \n\t\t//parentEl,\n\t\t//ghostEl,\n\t\t//cloneEl,\n\t\t///rootEl,\n\t\t///nextEl,\n\t\t//lastDownEl,\n\n\t\t//scrollEl,\n\t\t//scrollParentEl,\n\t\t//scrollCustomFn,\n\n\t\t//oldIndex,\n\t\tnewIndex,\n\t\t//oldDraggableIndex,\n\t\tnewDraggableIndex,\n\n\t\t///activeGroup,\n\t\t//putSortable,\n\n\t\t//awaitingDragStarted = false,\n\t\t//ignoreNextClick = false,\n\t\t//sortables = [],\n\n\t\t//pointerElemChangedInterval,\n\n\t\t//tapEvt,\n\t\t//touchEvt,\n\n\t\tmoved,\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\t/*\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\n\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\n\t\t*/\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari,\n\n\t\tIOS = isMobile && isMobile.apple.device,\n\n\t\t//CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\n\n\t\t/*\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\t\t*/\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents,\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\t//savedInputChecked = [],\n\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t};\n\n\n\t\t//_hideGhostForTarget = function() {\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\n\t\t//\t\tstyler.css(ghostEl, 'display', 'none');\n\t\t//\t}\n\t\t//},\n\n\t\t//_unhideGhostForTarget = function() {\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\n\t\t//\t\tstyler.css(ghostEl, 'display', '');\n\t\t//\t}\n\t\t//};\n\n\n\t/*\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\n\t// Fixed #973:\n\teventer.on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\t*/\n\n\n\tvar Sortable =  plugins.Plugin.inherit({\n        klassName: \"Sortable\",\n        \n        pluginName : \"intg.sortable\",\n\n\n\t\toptions : {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\t//draggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\n\t\t\t\treturn oriented(this.el, langx.mixin({\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\n\t\t\t\t\t\t\t\t},this.options));\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\n\n\t\t\tfallbackOnBody: true,  //fix\n\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\t//supportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t},\n\n\n\t\t/**\n\t\t * @class  Sortable\n\t\t * @param  {HTMLElement}  el\n\t\t * @param  {Object}       [options]\n\t\t */\n\t\t_construct : function Sortable(el, options) {\n            this.overrided(el,options);\n\n\t\t\tthis.el = el; // root element\n\n\t\t\t// Export instance\n\t\t\tel[dnd.expando] = this;\n\n\t\t\toptions = this.options;\n\n\t\t\toptions.draggable = options.draggable || /[uo]l/i.test(el.nodeName) ? '>li' : '>*';\n\n\n\t\t\t_prepareGroup(options);\n\n\t\t\t// Bind all private methods\n\t\t\tfor (var fn in this) {\n\t\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Setup drag mode\n\t\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\t\tthis.options.touchStartThreshold = 1;\n\t\t\t}\n\n\n            // Bind events\n            touch.mousy(el);\n            eventer.on(el, 'mousedown', this._onMouseDown);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.on(el, 'dragover', this);\n\t\t\t\teventer.on(el, 'dragenter', this);\n\t\t        eventer.on(el, 'drop', this);\n\t\t\t}\n\n\t\t\tdnd.sortables.push(this.el);\n\n\t\t\t// Restore sorting\n\t\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\n\n\t        eventer.on(el, 'selectstart', this);\n\n\t\t},\n\n\n\t\t//drag start \n        // handle moudedown event\n        _onMouseDown: function (/** Event|TouchEvent */evt) {\n            //if (!evt.cancelable) return;\n            var _this = this,\n                el = this._elm,\n                options = this.options,\n                preventOnFilter = options.preventOnFilter,\n                type = evt.type,\n                touch = evt.touches && evt.touches[0],\n                target = (touch || evt).target,\n                originalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\n                filter = options.filter,\n                startIndex,\n                startDraggableIndex;\n\n            _saveInputCheckedState(el);\n\n            // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n            ///if (dnd.dragEl) {\n            ///    return;\n            ///}\n\n            if (/mousedown/.test(type) && evt.button !== 0 || options.disabled) {\n                return; // only left button and enabled\n            }\n\n            // cancel dnd if original target is content editable\n            if (originalTarget.isContentEditable) {\n                return;\n            }\n\n            target = finder.closest(target, options.draggable, el, false);\n\n\n            if (lastDownEl === target) {\n                // Ignoring duplicate `down`\n                return;\n            }\n\n            dnd.log(\"_onTapStart\",target.tagName+\",\"+target.className);\n\n            // Get the index of the dragged element within its parent\n            startIndex = _index(target);\n            startDraggableIndex = _index(target, options.draggable);\n\n            // Check filter\n            if (typeof filter === 'function') {\n                if (filter.call(this, evt, target, this)) {\n                    _this._dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\n                    return; // cancel dnd\n                }\n            }\n            else if (filter) {\n                filter = filter.split(',').some(function (criteria) {\n                    criteria = finder.closest(originalTarget, criteria.trim(), el, false);\n\n                    if (criteria) {\n                        _this._dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n                        return true;\n                    }\n                });\n\n                if (filter) {\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\n                    return; // cancel dnd\n                }\n            }\n\n            if (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\n                return;\n            }\n\n            // Prepare `dragstart`\n            this._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\n        },\n\n        _prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\n            var _this = this,\n                el = _this._elm,\n                options = _this.options,\n                ownerDocument = el.ownerDocument,\n                dragStartFn,\n                dragEl = dnd.dragEl,\n                rootEl,\n                parentEl = dnd.parentEl,\n                nextEl = dnd.nextEl,\n                oldIndex = dnd.oldIndex,\n                oldDraggableIndex = dnd.oldDraggableIndex,\n                tapEvt = dnd.tapEvt;\n\n            dnd.log(\"_prepareDragStart\",\"start\");\n            if (target && !dragEl && (target.parentNode === el)) {\n                rootEl = el;\n                dragEl = dnd.dragEl = target;\n                parentEl = dnd.parentEl= dragEl.parentNode;\n                nextEl = dnd.nextEl = dragEl.nextSibling;\n                lastDownEl = target;\n                dnd.activeGroup = this.options.group;\n                oldIndex = dnd.oldIndex = startIndex;\n                oldDraggableIndex = dnd.oldDraggableIndex =  startDraggableIndex;\n\n                tapEvt = dnd.tapEvt = {\n                    target: dragEl,\n                    clientX: (touch || evt).clientX,\n                    clientY: (touch || evt).clientY\n                };\n\n                this._lastX = (touch || evt).clientX;\n                this._lastY = (touch || evt).clientY;\n\n                dragEl.style['will-change'] = 'all';\n                // undo animation if needed\n                dragEl.style.transition = '';\n                dragEl.style.transform = '';\n\n                dragStartFn = function () {\n                    if ( _this.nativeDraggable) {\n                        dragEl.draggable = true;\n                    }\n\n                    // Bind the events: dragstart/dragend\n                    _this._triggerDragStart(evt, touch);\n\n                    // Drag start event\n                    _this._dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\n\n                    // Chosen item\n                    styler.toggleClass(dragEl, options.chosenClass, true);\n                };\n\n                // Disable \"draggable\"\n                options.ignore.split(',').forEach(function (criteria) {\n                    _find(dragEl, criteria.trim(), dnd._disableDraggable);\n                });\n\n                //eventer.on(ownerDocument, 'mouseup', _this._onDrop); // TODO : lwf\n                ///eventer.on(ownerDocument, 'touchend', _this._onDrop);\n                ///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\n\n                // Make dragEl draggable (must be before delay for FireFox)\n                ///if (FireFox && this.nativeDraggable) {\n                if (this.nativeDraggable) {\n                   this.options.touchStartThreshold = 4;\n                    dragEl.draggable = true;\n                }\n\n                dragStartFn();\n            }\n        },\n\n        //native dnd mode : register _OnDragStart for dragstart event handler \n        //moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\n        _triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n            dnd.log(\"_triggerDragStart\",\"start\");\n            dnd.log(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\n\n            dnd.prepare(this);\n\n            if (!this.nativeDraggable) {\n                ////eventer.on(document, 'mousemove', this._onTouchMove);\n            } else {\n                eventer.on(dnd.dragEl, 'dragend', this._onDragEnd);\n                eventer.on(dnd.dragEl, 'dragstart', this._onDragStart);\n            }\n\n            try {\n                if (document.selection) {\n                    // Timeout neccessary for IE9\n                    langx.defer(function () {\n                        document.selection.empty();\n                    });\n                } else {\n                    window.getSelection().removeAllRanges();\n                }\n            } catch (err) {\n            }\n        },\n\n        _onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\n            dnd.log(\"_onDragStart\",\"start\");\n            var _this = this,\n                dragEl = dnd.dragEl,\n                rootEl = this._elm;\n\n            var dataTransfer = evt.dataTransfer;\n            var options = _this.options;\n\n            // Setup clone\n            var cloneEl = dnd.cloneEl = noder.clone(dragEl,true);\n\n            cloneEl.draggable = false;\n            cloneEl.style['will-change'] = '';\n\n            //this._hideClone();\n\n            styler.toggleClass(cloneEl, _this.options.chosenClass, false);\n\n\n            // #1143: IFrame support workaround\n            _this._cloneId = langx.defer(function () {\n                if (!_this.options.removeCloneOnHide) {\n                    rootEl.insertBefore(cloneEl, dragEl);\n                }\n                _this._dispatchEvent(_this, rootEl, 'clone', dragEl);\n            });\n\n\n            if (!fallback){\n                styler.toggleClass(dragEl, options.dragClass, true);\n            } \n\n            // Set proper drop events\n            if (fallback) {\n                //dnd.ignoreNextClick = true;\n                //_this._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\n            } else {\n                // Undo what was set in _prepareDragStart before drag started\n                //eventer.off(document, 'mouseup', _this._onDrop); //TODO : lwf\n                ///eventer.off(document, 'touchend', _this._onDrop);\n                ///eventer.off(document, 'touchcancel', _this._onDrop);\n\n                if (dataTransfer) {\n                    dataTransfer.effectAllowed = 'move';\n                    options.setData && options.setData.call(_this, dataTransfer, dragEl);\n                }\n\n                ////eventer.on(document, 'drop', _this);\n\n                // #1276 fix:\n                styler.css(dragEl, 'transform', 'translateZ(0)');\n            }\n\n            dnd.awaitingDragStarted = true;\n\n\n\t        function _dragStarted(fallback, evt) {\n\t            dnd.awaitingDragStarted = false;\n\t            var dragEl = dnd.dragEl,\n\t                rootEl = this._elm,\n\t                oldIndex = dnd.oldIndex,\n\t                oldDraggableIndex = dnd.oldDraggableIndex;\n\n\t            if (rootEl && dragEl) {\n\t                //if (this.nativeDraggable) {\n\t                //    eventer.on(document, 'dragover', this._handleAutoScroll);\n\t                //    eventer.on(document, 'dragover', dnd._checkAlignment);\n\t                //}\n\t                dnd.start(this);\n\t                var options = this.options;\n\n\t                // Apply effect\n\t                !fallback && styler.toggleClass(dragEl, options.dragClass, false);\n\t                styler.toggleClass(dragEl, options.ghostClass, true);\n\n\t                // In case dragging an animated element\n\t                styler.css(dragEl, 'transform', '');\n\n\t                //dnd.active = this;\n\n\t                //fallback && this._appendGhost();\n\n\t                // Drag start event\n\t                this._dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\n\t            } else {\n\t                this._nulling();\n\t            }\n\t        }\n\n            _this._dragStartId = langx.defer(_dragStarted.bind(_this, fallback, evt));\n            ///eventer.on(document, 'selectstart', _this);\n            ///if (Safari) {\n            ///    styler.css(document.body, 'user-select', 'none');\n            ///}\n        },\n\n        //\n        //\n\n        _onDragEnd: function (/**Event*/evt) {\n            var el = this._elm,\n                options = this.options,\n                dragEl = dnd.dragEl,\n                putSortable = dnd.putSortable;\n\n            dnd.awaitingDragStarted = false;\n            scrolling = false;\n            //isCircumstantialInvert = false;\n            //pastFirstInvertThresh = false;\n\n            //clearInterval(this._loopId);\n\n            //clearInterval(pointerElemChangedInterval);\n\n            clearTimeout(this._dragStartTimer);\n\n\n            if (this._cloneId) {\n                this._cloneId.stop();\n                this._cloneId = null;\n            }\n\n            if (this._dragStartId) {\n                this._dragStartId.stop();\n                this._dragStartId = null;\n            }\n\n\n            // Unbind events\n            ///eventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\n            ///if (Safari) {\n            ///    styler.css(document.body, 'user-select', '');\n           /// }\n\n\n\n            if (this.nativeDraggable) {\n                eventer.off(dnd.dragEl, 'dragstart', this._onDragStart);\n                eventer.off(dnd.dragEl, 'dragend', this._onDragEnd);\n            }\n\n            lastDownEl = null;\n\n            savedInputChecked.forEach(function (el) {\n                el.checked = true;\n            });\n\n\n            savedInputChecked.length = 0;\n\n           \t//this.dragEl = null;\n\n            dnd.end();\n\n        },\n\n\n\t\t_onMove : function (fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\t\tvar evt,\n\t\t\t\tsortable = fromEl[dnd.expando],\n\t\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\t\tretVal;\n\n\t\t\tevt = eventer.create(\"move\",{\n\t\t\t\tto : toEl,\n\t\t\t\tfrom : fromEl,\n\t\t\t\tdragged : dragEl,\n\t\t\t\tdraggedRect: dragRect,\n\t\t\t\trelated : targetEl || toEl,\n\t\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\n\t\t\t\twillInsertAfter : willInsertAfter,\n\t\t\t\toriginalEvent : originalEvt\n\t\t\t});\n\n\t\t\tfromEl.dispatchEvent(evt);\n\n\t\t\tif (onMoveFn) {\n\t\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t\t}\n\n\t\t\treturn retVal;\n\t\t},\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target,\n\t\t\t\tdragEl = dnd.dragEl;\n\n\t\t\t//if (ghostEl && !supportCssPointerEvents) {\n\t\t\t//\t_hideGhostForTarget();\n\t\t\t//\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t//\t_unhideGhostForTarget();\n\t\t\t//} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t//}\n\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\tvar  dragEl = dnd.dragEl;\n\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,null) : this.options.direction;\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation,\n\t\t\t\tdragEl = dnd.dragEl;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = geom.boundingRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._repaint(target);\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\tstyler.css(target, 'transition', '');\n\t\t\t\t\tstyler.css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_repaint: function(target) {\n\t\t\treturn target.offsetWidth;\n\t\t},\n\n\t\t//_offMoveEvents: function() {\n\t   //\t\teventer.off(document, 'dragover', dnd.nearestEmptyInsertDetectEvent);\n\t   //\t\teventer.off(document, 'mousemove', dnd.nearestEmptyInsertDetectEvent);\n       //\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\teventer.off(document, 'selectstart', this);\n\t\t},\n\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = dnd.active,\n\t\t\t\tisOwner = (dnd.activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this,\n\t\t\t\tdragEl = dnd.dragEl,\n\t\t\t\trootEl = dnd.active.elm(),\n\t\t\t\tputSortable = dnd.putSortable,\n\t\t\t\tnextEl = dnd.nextEl,\n\t\t\t\toldIndex = dnd.oldIndex,\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex;\n            //dnd.log(\"_onDragOver\",\"start\");\n\n\t\t\tif (_silent) return;\n\n\t\t\t// Return invocation when dragEl is inserted (or completed)\n\t\t\tfunction completed(insertion) {\n\t\t\t\tif (insertion) {\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(_this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (activeSortable) {\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (putSortable !== _this && _this !== dnd.active) {\n\t\t\t\t\t\tputSortable = dnd.putSortable = _this;\n\t\t\t\t\t} else if (_this === dnd.active) {\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Animation\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t//_this._handleAutoScroll(evt);\n\t\t\t\t\tdnd.over(evt);\n\t\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(evt);\n\n\t\t\t\t\t// Do not detect for empty insert if already inserted\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_this._dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl), oldDraggableIndex, _index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\t/**\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\n\t\t\t */\n\t\t\tfunction _getInsertDirection(target) {\n\t\t\t\tvar dragElIndex = _index(dragEl),\n\t\t\t\t\ttargetIndex = _index(target);\n\n\t\t\t\tif (dragElIndex < targetIndex) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\t\t\tvar targetRect = geom.boundingRect(target),\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\n\t\t\t\t\tinvert = false;\n\n\n\t\t\t\tif (!invertSwap) {\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinvert = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Regular\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinvert = invert || invertSwap;\n\n\t\t\t\tif (invert) {\n\t\t\t\t\t// Invert of regular\n\t\t\t\t\tif (\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\n\t\t\t\treturn completed(false);\n\t\t\t}\n\n\t\t\tif (target !== dragEl) {\n\t\t\t\tdnd.ignoreNextClick = false;\n\t\t\t}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = dnd.activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tdnd.parentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed(true);\n\t\t\t\t}\n\n\t\t\t\tvar elLastChild = _lastChild(el);\n\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\n\t\t\t\t\t// assign target only if condition is true\n\t\t\t\t\tif (elLastChild && el === evt.target) {\n\t\t\t\t\t\ttarget = elLastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tdnd.parentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\n\t\t\t\t\t\tscrolledPastTop = false, //autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed(false);\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\n\t\t\t\t\t\tif (scrolledPastTop) {\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdnd.parentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance =  Math.abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\trootEl = dnd.active.elm(),\n\t\t\t\tdragEl = dnd.dragEl,\n\t\t\t\tputSortable = dnd.putSortable,\n\t\t\t\tparentEl = dnd.parentEl,\n\t\t\t\toldIndex = dnd.oldIndex,\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex,\n\t\t\t\tnextEl = dnd.nextEl;\n\n\t\t\t/*\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t\n\t\t\tautoscroll._clearAutoScrolls();\n\t\t\tautoscroll._cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\t\t\t*/\n\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\t\t\t// Unbind events\n\t\t\t//eventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(document, 'drop', this);\n\t\t\t\t///eventer.off(el, 'dragstart', this._onDragStart);\n\t\t\t\t//eventer.off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t//eventer.off(document, 'dragover', dnd._checkAlignment);\n\t\t\t}\n\n\t\t\t///if (Safari) {\n\t\t\t///\tstyler.css(document.body, 'user-select', '');\n\t\t\t///}\n\n\t\t\t//this._offMoveEvents();\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\t//ghoster.remove();\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tnoder.remove(dnd.cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\t///if (this.nativeDraggable) {\n\t\t\t\t\t///\teventer.off(dragEl, 'dragend', this);\n\t\t\t\t\t///}\n\n\t\t\t\t\tdnd._disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class'sd\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\tthis._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\tthis._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}else {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dnd.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\n\n\n\t\t\t/*\n\t\t\tdnd.rootEl =\n\t\t\tdnd.dragEl =\n\t\t\tdnd.parentEl =\n\t\t\tghoster.ghostEl =\n\t\t\tdnd.nextEl =\n\t\t\tdnd.cloneEl =\n\t\t\t///lastDownEl =\n\n\t\t\tautoscroll.scrollEl =\n\t\t\tautoscroll.scrollParentEl =\n\t\t\tautoscroll.autoScrolls.length =\n\t\t\t*/\n\t\t\t//pointerElemChangedInterval =\n\n\t\t\t//tapEvt =\n\t\t\t//dnd.touchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\t//dnd.oldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\trealDragElRect =\n\n\t\t\t//dnd.putSortable =\n\t\t\t//dnd.activeGroup =\n\t\t\t//dnd.active = \n\t\t\tnull;\n\n\t\t},\n\n        _hideClone: function() {\n            if (!dnd.cloneEl.cloneHidden) {\n                styler.hide(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = true;\n                if (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\n                    noder.remove(dnd.cloneEl);\n                }\n            }\n        },\n\n        _showClone: function(putSortable) {\n            var rootEl = dnd.active.el,\n                nextEl = dnd.nextEl;\n\n            if (putSortable.lastPutMode !== 'clone') {\n                this._hideClone();\n                return;\n            }\n\n            if (dnd.cloneEl.cloneHidden) {\n                // show clone at dragEl or original position\n                if (rootEl.contains(dnd.dragEl) && !this.options.group.revertClone) {\n                    rootEl.insertBefore(dnd.cloneEl, dnd.dragEl);\n                } else if (nextEl) {\n                    rootEl.insertBefore(dnd.cloneEl, nextEl);\n                } else {\n                    rootEl.appendChild(dnd.cloneEl);\n                }\n\n                if (this.options.group.revertClone) {\n                    this._animate(dnd.dragEl, dnd.cloneEl);\n                }\n                styler.show(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = false;\n            }\n        },\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dnd.dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t_dispatchEvent : function (\n\t\t\tsortable, \n\t\t\trootEl, \n\t\t\tname,\n\t\t\ttargetEl, \n\t\t\ttoEl, \n\t\t\tfromEl,\n\t\t\tstartIndex, \n\t\t\tnewIndex,\n\t\t\tstartDraggableIndex, \n\t\t\tnewDraggableIndex,\n\t\t\toriginalEvt\n\t\t) {\n\t\t\tsortable = (sortable || rootEl[dnd.expando]);\n\t\t\tvar evt,\n\t\t\t\toptions = sortable.options,\n\t\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\tputSortable = dnd.putSortable;\n\n\t\t\tevt = eventer.create(name,{\n\t\t\t\tto : toEl || rootEl,\n\t\t\t\tfrom : fromEl || rootEl,\n\t\t\t\titem : targetEl || rootEl,\n\t\t\t\tclone : dnd.cloneEl,\n\t\t\t\toldIndex : startIndex,\n\t\t\t\tnewIndex : newIndex,\n\t\t\t\toldDraggableIndex : startDraggableIndex,\n\t\t\t\tnewDraggableIndex : newDraggableIndex,\n\t\t\t\toriginalEvent : originalEvt,\n\t\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\n\t\t\t});\n\t\t\tif (rootEl) {\n\t\t\t\trootEl.dispatchEvent(evt);\n\t\t\t}\n\n\t\t\tif (options[onName]) {\n\t\t\t\toptions[onName].call(sortable, evt);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || noder.generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[dnd.expando] = null;\n\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(el, 'dragover', this);\n\t\t\t\teventer.off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t});\n\n\n    function _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\n});"]}