{"version":3,"sources":["Sortable.js"],"names":["define","skylark","langx","isBrowser","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","scrollingElement","oriented","plugins","touch","dnd","Draggable","_index","el","selector","index","nodeName","toUpperCase","cloneEl","matches","newIndex","newDraggableIndex","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","pastFirstInvertThresh","isCircumstantialInvert","win","window","document","parseInt","setTimeout","supportDraggable","Polymer","ie","edge","firefox","safari","apple","device","createElement","_silent","support","cssPointerEvents","_alignedSilent","_prepareGroup","options","toFn","value","pull","to","from","dragEl","evt","sameGroup","group","name","otherGroup","join","indexOf","originalGroup","checkPull","checkPut","put","revertClone","Sortable","Plugin","inherit","klassName","pluginName","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","target","ghostEl","this","mixin","excluding","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","fallbackOnBody","forceFallback","fallbackClass","fallbackTolerance","fallbackOffset","x","y","emptyInsertThreshold","_construct","fn","overrided","expando","draggable","test","charAt","bind","nativeDraggable","on","sortables","push","get","_onMove","fromEl","toEl","dragRect","targetEl","targetRect","originalEvt","willInsertAfter","retVal","sortable","onMoveFn","onMove","create","dragged","draggedRect","related","relatedRect","boundingRect","originalEvent","dispatchEvent","call","_computeIsAligned","closest","parentNode","axis","targetS1Opp","targetS2Opp","mouseOnOppAxis","children","i","length","sortableMouseAligned","clientX","clientY","_getDirection","left","top","right","bottom","_animate","prevRect","ms","currentRect","nodeType","width","height","matrix","scaleX","a","scaleY","d","css","_repaint","animated","clearTimeout","offsetWidth","_offUpEvents","ownerDocument","off","_onDrop","_onDragOver","revert","activeSortable","active","isOwner","activeGroup","canSort","_this","rootEl","elm","putSortable","nextEl","oldIndex","oldDraggableIndex","preventDefault","cancelable","contains","completed","lastPutMode","_hideClone","parentEl","insertBefore","appendChild","elLastChild","lastChild","ignoreHidden","_lastChild","elRect","mouseOnAxis","targetS2","_ghostIsLast","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_isElInRowColumn","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","_getSwapDirection","nextSibling","nextElementSibling","after","moveVector","_unsilent","undefined","Math","abs","insertion","toggleClass","over","nearestEmptyInsertDetectEvent","stopPropagation","_dispatchEvent","remove","_disableDraggable","style","save","_nulling","cloneHidden","hide","show","handleEvent","type","dropEffect","_globalDragOver","startIndex","startDraggableIndex","onName","substr","item","clone","pullMode","toArray","order","n","getAttribute","generateId","items","forEach","id","removeChild","set","option","destroy","_onTapStart","Array","prototype","querySelectorAll","removeAttribute","splice","version","attach"],"mappings":"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","file":"../Sortable.js","sourcesContent":["define([\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/is-browser\",\n\t\"skylark-langx-hoster/is-mobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-plugins-scrolls/scrolling-element\",\n\t\"skylark-domx-layouts/oriented\",\n    \"skylark-domx-plugins-base\",\n\t\"skylark-devices-points/touch\",\n\t\"./dnd\",\n\t\"./draggable\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tscrollingElement,\n\toriented,\n\tplugins,\n\ttouch,\n\tdnd,\n\tDraggable\n){\n\n\t'use strict';\n\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\treturn finder.index(el,function(el){\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\t\t\t\n\t\t})\n\t}\n\n\n\tfunction _isClientInRowColumn(x, y, el, axis, options) {\n\t\tvar targetRect = geom.boundingRect(el),\n\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t}\n\n\tfunction _isElInRowColumn(el1, el2, axis) {\n\t\t//var dragEl = dnd.active.dragEl;\n\n\t\tvar el1Rect = geom.boundingRect(el1),//el1 === dragEl && realDragElRect || geom.boundingRect(el1),\n\t\t\tel2Rect = geom.boundingRect(el2),//el2 === dragEl && realDragElRect || geom.boundingRect(el2),\n\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\treturn (\n\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t);\n\t}\n\n\n\n\t function _ghostIsLast(evt, axis, el) {\n\t\tvar elRect = geom.boundingRect(finder.lastChild(el,{ignoreHidden : true,excluding : []})),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\n\t\t\tspacer = 10;\n\n\t\treturn (\n\t\t\taxis === 'vertical' ?\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\n\t\t);\n\t}\n\n\n\t/**\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n\t * @param  {HTMLElement} el       Parent element\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\n\t */\n\t function _lastChild(el) {\n\t\t/*\n\t\tvar last = el.lastElementChild;\n\n\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\n\t\t\tlast = last.previousElementSibling;\n\t\t}\n\n\t\treturn last || null;\n\t\t*/\n\t\treturn finder.lastChild(el,{\n\t\t\tignoreHidden : true,\n\t\t\texcluding : []\n\t\t})\n\t}\n\n\tvar \n\t\t//parentEl,\n\t\t//ghostEl,\n\t\t//cloneEl,\n\t\t///rootEl,\n\t\t///nextEl,\n\t\t//lastDownEl,\n\n\t\t//scrollEl,\n\t\t//scrollParentEl,\n\t\t//scrollCustomFn,\n\n\t\t//oldIndex,\n\t\tnewIndex,\n\t\t//oldDraggableIndex,\n\t\tnewDraggableIndex,\n\n\t\t///activeGroup,\n\t\t//putSortable,\n\n\t\t//awaitingDragStarted = false,\n\t\t//ignoreNextClick = false,\n\t\t//sortables = [],\n\n\t\t//pointerElemChangedInterval,\n\n\t\t//tapEvt,\n\t\t//touchEvt,\n\n\t\tmoved,\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\t/*\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\n\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\n\t\t*/\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari,\n\n\t\tIOS = isMobile && isMobile.apple.device,\n\n\t\t//CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\n\n\t\t/*\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\t\t*/\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents,\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\t//savedInputChecked = [],\n\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t};\n\n\n\t\t//_hideGhostForTarget = function() {\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\n\t\t//\t\tstyler.css(ghostEl, 'display', 'none');\n\t\t//\t}\n\t\t//},\n\n\t\t//_unhideGhostForTarget = function() {\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\n\t\t//\t\tstyler.css(ghostEl, 'display', '');\n\t\t//\t}\n\t\t//};\n\n\n\t/*\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\n\t// Fixed #973:\n\teventer.on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\t*/\n\n\n\tvar Sortable =  plugins.Plugin.inherit({\n        klassName: \"Sortable\",\n        \n        pluginName : \"intg.sortable\",\n\n\n\t\toptions : {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\t//draggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\n\t\t\t\treturn oriented(this.el, langx.mixin({\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\n\t\t\t\t\t\t\t\t},this.options));\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\n\n\t\t\tfallbackOnBody: true,  //fix\n\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\t//supportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t},\n\n\n\t\t/**\n\t\t * @class  Sortable\n\t\t * @param  {HTMLElement}  el\n\t\t * @param  {Object}       [options]\n\t\t */\n\t\t_construct : function Sortable(el, options) {\n            this.overrided(el,options);\n\n\t\t\tthis.el = el; // root element\n\n\t\t\t// Export instance\n\t\t\tel[dnd.expando] = this;\n\n\t\t\toptions = this.options;\n\n\t\t\toptions.draggable = options.draggable || /[uo]l/i.test(el.nodeName) ? '>li' : '>*';\n\n\n\t\t\t_prepareGroup(options);\n\n\t\t\t// Bind all private methods\n\t\t\tfor (var fn in this) {\n\t\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Setup drag mode\n\t\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\t\tthis.options.touchStartThreshold = 1;\n\t\t\t}\n\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.on(el, 'dragover', this);\n\t\t\t\teventer.on(el, 'dragenter', this);\n\t\t        eventer.on(el, 'drop', this);\n\t\t\t}\n\n\t\t\tdnd.sortables.push(this.el);\n\n\t\t\t// Restore sorting\n\t\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\n\n\t\t\tthis.draggable = new Draggable(this,this.options);\n\n\t        eventer.on(el, 'selectstart', this);\n\n\t\t},\n\n\n\t\t_onMove : function (fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\t\tvar evt,\n\t\t\t\tsortable = fromEl[dnd.expando],\n\t\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\t\tretVal;\n\n\t\t\tevt = eventer.create(\"move\",{\n\t\t\t\tto : toEl,\n\t\t\t\tfrom : fromEl,\n\t\t\t\tdragged : dragEl,\n\t\t\t\tdraggedRect: dragRect,\n\t\t\t\trelated : targetEl || toEl,\n\t\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\n\t\t\t\twillInsertAfter : willInsertAfter,\n\t\t\t\toriginalEvent : originalEvt\n\t\t\t});\n\n\t\t\tfromEl.dispatchEvent(evt);\n\n\t\t\tif (onMoveFn) {\n\t\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t\t}\n\n\t\t\treturn retVal;\n\t\t},\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target,\n\t\t\t\tdragEl = dnd.dragEl;\n\n\t\t\t//if (ghostEl && !supportCssPointerEvents) {\n\t\t\t//\t_hideGhostForTarget();\n\t\t\t//\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t//\t_unhideGhostForTarget();\n\t\t\t//} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t//}\n\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\tvar  dragEl = dnd.dragEl;\n\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,null) : this.options.direction;\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation,\n\t\t\t\tdragEl = dnd.dragEl;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = geom.boundingRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._repaint(target);\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\tstyler.css(target, 'transition', '');\n\t\t\t\t\tstyler.css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_repaint: function(target) {\n\t\t\treturn target.offsetWidth;\n\t\t},\n\n\t\t//_offMoveEvents: function() {\n\t   //\t\teventer.off(document, 'dragover', dnd.nearestEmptyInsertDetectEvent);\n\t   //\t\teventer.off(document, 'mousemove', dnd.nearestEmptyInsertDetectEvent);\n       //\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\teventer.off(document, 'selectstart', this);\n\t\t},\n\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = dnd.active,\n\t\t\t\tisOwner = (dnd.activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this,\n\t\t\t\tdragEl = dnd.dragEl,\n\t\t\t\trootEl = dnd.active.elm(),\n\t\t\t\tputSortable = dnd.putSortable,\n\t\t\t\tnextEl = dnd.nextEl,\n\t\t\t\toldIndex = dnd.oldIndex,\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex;\n            //dnd.log(\"_onDragOver\",\"start\");\n\n\t\t\tif (_silent) return;\n\n\t\t\t// Return invocation when dragEl is inserted (or completed)\n\t\t\tfunction completed(insertion) {\n\t\t\t\tif (insertion) {\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(_this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (activeSortable) {\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (putSortable !== _this && _this !== dnd.active) {\n\t\t\t\t\t\tputSortable = dnd.putSortable = _this;\n\t\t\t\t\t} else if (_this === dnd.active) {\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Animation\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t//_this._handleAutoScroll(evt);\n\t\t\t\t\tdnd.over(evt);\n\t\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(evt);\n\n\t\t\t\t\t// Do not detect for empty insert if already inserted\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_this._dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl), oldDraggableIndex, _index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\t/**\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\n\t\t\t */\n\t\t\tfunction _getInsertDirection(target) {\n\t\t\t\tvar dragElIndex = _index(dragEl),\n\t\t\t\t\ttargetIndex = _index(target);\n\n\t\t\t\tif (dragElIndex < targetIndex) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\t\t\tvar targetRect = geom.boundingRect(target),\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\n\t\t\t\t\tinvert = false;\n\n\n\t\t\t\tif (!invertSwap) {\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinvert = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Regular\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinvert = invert || invertSwap;\n\n\t\t\t\tif (invert) {\n\t\t\t\t\t// Invert of regular\n\t\t\t\t\tif (\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\n\t\t\t\treturn completed(false);\n\t\t\t}\n\n\t\t\t////if (target !== dragEl) {\n\t\t\t////\tdnd.ignoreNextClick = false;\n\t\t\t////}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = dnd.activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tdnd.parentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed(true);\n\t\t\t\t}\n\n\t\t\t\tvar elLastChild = _lastChild(el);\n\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\n\t\t\t\t\t// assign target only if condition is true\n\t\t\t\t\tif (elLastChild && el === evt.target) {\n\t\t\t\t\t\ttarget = elLastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tdnd.parentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\n\t\t\t\t\t\tscrolledPastTop = false, //autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed(false);\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\n\t\t\t\t\t\tif (scrolledPastTop) {\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdnd.parentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance =  Math.abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\trootEl = dnd.active.elm(),\n\t\t\t\tdragEl = dnd.dragEl,\n\t\t\t\tputSortable = dnd.putSortable,\n\t\t\t\tparentEl = dnd.parentEl,\n\t\t\t\toldIndex = dnd.oldIndex,\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex,\n\t\t\t\tnextEl = dnd.nextEl;\n\n\t\t\t/*\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t\n\t\t\tautoscroll._clearAutoScrolls();\n\t\t\tautoscroll._cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\t\t\t*/\n\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\t\t\t// Unbind events\n\t\t\t//eventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(document, 'drop', this);\n\t\t\t\t///eventer.off(el, 'dragstart', this._onDragStart);\n\t\t\t\t//eventer.off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t//eventer.off(document, 'dragover', dnd._checkAlignment);\n\t\t\t}\n\n\t\t\t///if (Safari) {\n\t\t\t///\tstyler.css(document.body, 'user-select', '');\n\t\t\t///}\n\n\t\t\t//this._offMoveEvents();\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\t//ghoster.remove();\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tnoder.remove(dnd.cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\t///if (this.nativeDraggable) {\n\t\t\t\t\t///\teventer.off(dragEl, 'dragend', this);\n\t\t\t\t\t///}\n\n\t\t\t\t\tdnd._disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class'sd\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\tthis._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\tthis._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}else {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dnd.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\n\n\n\t\t\t/*\n\t\t\tdnd.rootEl =\n\t\t\tdnd.dragEl =\n\t\t\tdnd.parentEl =\n\t\t\tghoster.ghostEl =\n\t\t\tdnd.nextEl =\n\t\t\tdnd.cloneEl =\n\t\t\t///lastDownEl =\n\n\t\t\tautoscroll.scrollEl =\n\t\t\tautoscroll.scrollParentEl =\n\t\t\tautoscroll.autoScrolls.length =\n\t\t\t*/\n\t\t\t//pointerElemChangedInterval =\n\n\t\t\t//tapEvt =\n\t\t\t//dnd.touchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\t//dnd.oldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\trealDragElRect =\n\n\t\t\t//dnd.putSortable =\n\t\t\t//dnd.activeGroup =\n\t\t\t//dnd.active = \n\t\t\tnull;\n\n\t\t},\n\n        _hideClone: function() {\n            if (!dnd.cloneEl.cloneHidden) {\n                styler.hide(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = true;\n                if (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\n                    noder.remove(dnd.cloneEl);\n                }\n            }\n        },\n\n        _showClone: function(putSortable) {\n            var rootEl = dnd.active.el,\n                nextEl = dnd.nextEl;\n\n            if (putSortable.lastPutMode !== 'clone') {\n                this._hideClone();\n                return;\n            }\n\n            if (dnd.cloneEl.cloneHidden) {\n                // show clone at dragEl or original position\n                if (rootEl.contains(dnd.dragEl) && !this.options.group.revertClone) {\n                    rootEl.insertBefore(dnd.cloneEl, dnd.dragEl);\n                } else if (nextEl) {\n                    rootEl.insertBefore(dnd.cloneEl, nextEl);\n                } else {\n                    rootEl.appendChild(dnd.cloneEl);\n                }\n\n                if (this.options.group.revertClone) {\n                    this._animate(dnd.dragEl, dnd.cloneEl);\n                }\n                styler.show(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = false;\n            }\n        },\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dnd.dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t_dispatchEvent : function (\n\t\t\tsortable, \n\t\t\trootEl, \n\t\t\tname,\n\t\t\ttargetEl, \n\t\t\ttoEl, \n\t\t\tfromEl,\n\t\t\tstartIndex, \n\t\t\tnewIndex,\n\t\t\tstartDraggableIndex, \n\t\t\tnewDraggableIndex,\n\t\t\toriginalEvt\n\t\t) {\n\t\t\tsortable = (sortable || rootEl[dnd.expando]);\n\t\t\tvar evt,\n\t\t\t\toptions = sortable.options,\n\t\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\tputSortable = dnd.putSortable;\n\n\t\t\tevt = eventer.create(name,{\n\t\t\t\tto : toEl || rootEl,\n\t\t\t\tfrom : fromEl || rootEl,\n\t\t\t\titem : targetEl || rootEl,\n\t\t\t\tclone : dnd.cloneEl,\n\t\t\t\toldIndex : startIndex,\n\t\t\t\tnewIndex : newIndex,\n\t\t\t\toldDraggableIndex : startDraggableIndex,\n\t\t\t\tnewDraggableIndex : newDraggableIndex,\n\t\t\t\toriginalEvent : originalEvt,\n\t\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\n\t\t\t});\n\t\t\tif (rootEl) {\n\t\t\t\trootEl.dispatchEvent(evt);\n\t\t\t}\n\n\t\t\tif (options[onName]) {\n\t\t\t\toptions[onName].call(sortable, evt);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || noder.generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[dnd.expando] = null;\n\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(el, 'dragover', this);\n\t\t\t\teventer.off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t});\n\n\n    function _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\n});"]}