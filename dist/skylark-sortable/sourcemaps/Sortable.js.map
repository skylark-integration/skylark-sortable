{"version":3,"sources":["Sortable.js"],"names":["define","skylark","langx","isBrowser","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","scrollingElement","oriented","plugins","touch","autoscroll","containers","dnd","ghoster","lastDownEl","savedInputChecked","newIndex","newDraggableIndex","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","pastFirstInvertThresh","isCircumstantialInvert","win","window","document","parseInt","setTimeout","supportDraggable","Polymer","ie","edge","firefox","safari","apple","device","createElement","_silent","support","cssPointerEvents","_alignedSilent","_prepareGroup","options","toFn","value","pull","to","from","dragEl","evt","sameGroup","group","name","otherGroup","join","indexOf","originalGroup","checkPull","checkPut","put","revertClone","Sortable","Plugin","inherit","klassName","pluginName","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","target","ghostEl","this","el","mixin","excluding","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","fallbackOnBody","forceFallback","fallbackClass","fallbackTolerance","fallbackOffset","x","y","emptyInsertThreshold","_construct","fn","overrided","expando","draggable","test","nodeName","charAt","bind","nativeDraggable","mousy","on","_onMouseDown","sortables","push","get","startIndex","startDraggableIndex","_this","_elm","type","touches","originalTarget","shadowRoot","path","composedPath","root","length","inputs","getElementsByTagName","idx","checked","_saveInputCheckedState","button","isContentEditable","closest","log","tagName","className","_index","call","_dispatchEvent","undefined","cancelable","preventDefault","split","some","criteria","trim","_prepareDragStart","dragStartFn","rootEl","ownerDocument","oldIndex","parentEl","nextEl","oldDraggableIndex","tapEvt","parentNode","nextSibling","activeGroup","clientX","clientY","_lastX","_lastY","style","transition","transform","_triggerDragStart","toggleClass","forEach","ctx","iterator","list","i","n","_find","_disableDraggable","prepare","_onDragEnd","_onDragStart","selection","defer","empty","getSelection","removeAllRanges","err","fallback","cloneEl","clone","_cloneId","insertBefore","effectAllowed","css","awaitingDragStarted","_dragStartId","_dragStarted","start","active","_nulling","putSortable","_clearAutoScrolls","_cancelThrottle","clearTimeout","_dragStartTimer","stop","off","end","_onMove","fromEl","toEl","dragRect","targetEl","targetRect","originalEvt","willInsertAfter","retVal","sortable","onMoveFn","onMove","create","dragged","draggedRect","related","relatedRect","boundingRect","originalEvent","dispatchEvent","_computeIsAligned","children","sortableMouseAligned","_isClientInRowColumn","_getDirection","_animate","prevRect","ms","currentRect","nodeType","left","width","top","height","matrix","scaleX","a","scaleY","d","_repaint","animated","offsetWidth","_offUpEvents","_onDrop","_onDragOver","revert","activeSortable","isOwner","canSort","elm","contains","completed","ignoreNextClick","lastPutMode","axis","_hideClone","appendChild","elLastChild","_lastChild","_ghostIsLast","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","_isScrolledPast","scrollBefore","scrollTop","_isElInRowColumn","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","bottom","right","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","_unsilent","scrollBy","Math","abs","insertion","over","nearestEmptyInsertDetectEvent","stopPropagation","remove","save","cloneHidden","hide","show","handleEvent","dropEffect","_globalDragOver","onName","toUpperCase","substr","item","pullMode","toArray","order","getAttribute","generateId","items","id","removeChild","set","selector","option","destroy","_onTapStart","Array","prototype","querySelectorAll","removeAttribute","splice","version","attach"],"mappings":"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","file":"../Sortable.js","sourcesContent":["define([\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/isBrowser\",\n\t\"skylark-langx-hoster/isMobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-scrolls/scrollingElement\",\n\t\"skylark-domx-layouts/oriented\",\n    \"skylark-domx-plugins\",\n\t\"skylark-devices-points/touch\",\n\t\"./fallback/autoscroll\",\n\t\"./containers\",\n\t\"./dnd\",\n\t\"./fallback/ghoster\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tscrollingElement,\n\toriented,\n\tplugins,\n\ttouch,\n\tautoscroll,\n\tcontainers,\n\tdnd,\n\tghoster,\n){\n\n\t'use strict';\n    var \n        lastDownEl,\n        scrolling,\n\n        savedInputChecked = [];\n\n\n    function _find(ctx, tagName, iterator) {\n        if (ctx) {\n            var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n            if (iterator) {\n                for (; i < n; i++) {\n                    iterator(list[i], i);\n                }\n            }\n\n            return list;\n        }\n\n        return [];\n    }\n\n\n    function _saveInputCheckedState(root) {\n        savedInputChecked.length = 0;\n\n        var inputs = root.getElementsByTagName('input');\n        var idx = inputs.length;\n\n        while (idx--) {\n            var el = inputs[idx];\n            el.checked && savedInputChecked.push(el);\n        }\n    }\n\n\n\tvar \n\t\t//parentEl,\n\t\t//ghostEl,\n\t\t//cloneEl,\n\t\t///rootEl,\n\t\t///nextEl,\n\t\t//lastDownEl,\n\n\t\t//scrollEl,\n\t\t//scrollParentEl,\n\t\t//scrollCustomFn,\n\n\t\t//oldIndex,\n\t\tnewIndex,\n\t\t//oldDraggableIndex,\n\t\tnewDraggableIndex,\n\n\t\t///activeGroup,\n\t\t//putSortable,\n\n\t\t//awaitingDragStarted = false,\n\t\t//ignoreNextClick = false,\n\t\t//sortables = [],\n\n\t\t//pointerElemChangedInterval,\n\n\t\t//tapEvt,\n\t\t//touchEvt,\n\n\t\tmoved,\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\t/*\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\n\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\n\t\t*/\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari,\n\n\t\tIOS = isMobile && isMobile.apple.device,\n\n\t\t//CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\n\n\t\t/*\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\t\t*/\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents,\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\t//savedInputChecked = [],\n\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t};\n\n\n\t\t//_hideGhostForTarget = function() {\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\n\t\t//\t\tstyler.css(ghostEl, 'display', 'none');\n\t\t//\t}\n\t\t//},\n\n\t\t//_unhideGhostForTarget = function() {\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\n\t\t//\t\tstyler.css(ghostEl, 'display', '');\n\t\t//\t}\n\t\t//};\n\n\n\t/*\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\n\t// Fixed #973:\n\teventer.on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\t*/\n\n\n\tvar Sortable =  plugins.Plugin.inherit({\n        klassName: \"Sortable\",\n        \n        pluginName : \"intg.sortable\",\n\n\n\t\toptions : {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\t//draggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\n\t\t\t\treturn oriented(this.el, langx.mixin({\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\n\t\t\t\t\t\t\t\t},this.options));\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\n\n\t\t\tfallbackOnBody: true,  //fix\n\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\t//supportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t},\n\n\n\t\t/**\n\t\t * @class  Sortable\n\t\t * @param  {HTMLElement}  el\n\t\t * @param  {Object}       [options]\n\t\t */\n\t\t_construct : function Sortable(el, options) {\n            this.overrided(el,options);\n\n\t\t\tthis.el = el; // root element\n\n\t\t\t// Export instance\n\t\t\tel[dnd.expando] = this;\n\n\t\t\toptions = this.options;\n\n\t\t\toptions.draggable = options.draggable || /[uo]l/i.test(el.nodeName) ? '>li' : '>*';\n\n\n\t\t\t_prepareGroup(options);\n\n\t\t\t// Bind all private methods\n\t\t\tfor (var fn in this) {\n\t\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Setup drag mode\n\t\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\t\tthis.options.touchStartThreshold = 1;\n\t\t\t}\n\n\n            // Bind events\n            touch.mousy(el);\n            eventer.on(el, 'mousedown', this._onMouseDown);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.on(el, 'dragover', this);\n\t\t\t\teventer.on(el, 'dragenter', this);\n\t\t        eventer.on(el, 'drop', this);\n\t\t\t}\n\n\t\t\tdnd.sortables.push(this.el);\n\n\t\t\t// Restore sorting\n\t\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\n\n\t        eventer.on(el, 'selectstart', this);\n\n\t\t},\n\n\n\t\t//drag start \n        // handle moudedown event\n        _onMouseDown: function (/** Event|TouchEvent */evt) {\n            //if (!evt.cancelable) return;\n            var _this = this,\n                el = this._elm,\n                options = this.options,\n                preventOnFilter = options.preventOnFilter,\n                type = evt.type,\n                touch = evt.touches && evt.touches[0],\n                target = (touch || evt).target,\n                originalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\n                filter = options.filter,\n                startIndex,\n                startDraggableIndex;\n\n            _saveInputCheckedState(el);\n\n            // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n            ///if (dnd.dragEl) {\n            ///    return;\n            ///}\n\n            if (/mousedown/.test(type) && evt.button !== 0 || options.disabled) {\n                return; // only left button and enabled\n            }\n\n            // cancel dnd if original target is content editable\n            if (originalTarget.isContentEditable) {\n                return;\n            }\n\n            target = finder.closest(target, options.draggable, el, false);\n\n\n            if (lastDownEl === target) {\n                // Ignoring duplicate `down`\n                return;\n            }\n\n            dnd.log(\"_onTapStart\",target.tagName+\",\"+target.className);\n\n            // Get the index of the dragged element within its parent\n            startIndex = containers._index(target);\n            startDraggableIndex = containers._index(target, options.draggable);\n\n            // Check filter\n            if (typeof filter === 'function') {\n                if (filter.call(this, evt, target, this)) {\n                    _this._dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\n                    return; // cancel dnd\n                }\n            }\n            else if (filter) {\n                filter = filter.split(',').some(function (criteria) {\n                    criteria = finder.closest(originalTarget, criteria.trim(), el, false);\n\n                    if (criteria) {\n                        _this._dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n                        return true;\n                    }\n                });\n\n                if (filter) {\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\n                    return; // cancel dnd\n                }\n            }\n\n            if (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\n                return;\n            }\n\n            // Prepare `dragstart`\n            this._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\n        },\n\n        _prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\n            var _this = this,\n                el = _this._elm,\n                options = _this.options,\n                ownerDocument = el.ownerDocument,\n                dragStartFn,\n                dragEl = this.dragEl,\n                rootEl,\n                parentEl = dnd.parentEl,\n                nextEl = dnd.nextEl,\n                oldIndex = dnd.oldIndex,\n                oldDraggableIndex = dnd.oldDraggableIndex,\n                tapEvt = dnd.tapEvt;\n\n            dnd.log(\"_prepareDragStart\",\"start\");\n            if (target && !dragEl && (target.parentNode === el)) {\n                rootEl = el;\n                dragEl = this.dragEl = target;\n                parentEl = dnd.parentEl= dragEl.parentNode;\n                nextEl = dnd.nextEl = dragEl.nextSibling;\n                lastDownEl = target;\n                dnd.activeGroup = this.options.group;\n                oldIndex = dnd.oldIndex = startIndex;\n                oldDraggableIndex = dnd.oldDraggableIndex =  startDraggableIndex;\n\n                tapEvt = dnd.tapEvt = {\n                    target: dragEl,\n                    clientX: (touch || evt).clientX,\n                    clientY: (touch || evt).clientY\n                };\n\n                this._lastX = (touch || evt).clientX;\n                this._lastY = (touch || evt).clientY;\n\n                dragEl.style['will-change'] = 'all';\n                // undo animation if needed\n                dragEl.style.transition = '';\n                dragEl.style.transform = '';\n\n                dragStartFn = function () {\n                    if ( _this.nativeDraggable) {\n                        dragEl.draggable = true;\n                    }\n\n                    // Bind the events: dragstart/dragend\n                    _this._triggerDragStart(evt, touch);\n\n                    // Drag start event\n                    _this._dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\n\n                    // Chosen item\n                    styler.toggleClass(dragEl, options.chosenClass, true);\n                };\n\n                // Disable \"draggable\"\n                options.ignore.split(',').forEach(function (criteria) {\n                    _find(dragEl, criteria.trim(), dnd._disableDraggable);\n                });\n\n                //eventer.on(ownerDocument, 'mouseup', _this._onDrop); // TODO : lwf\n                ///eventer.on(ownerDocument, 'touchend', _this._onDrop);\n                ///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\n\n                // Make dragEl draggable (must be before delay for FireFox)\n                ///if (FireFox && this.nativeDraggable) {\n                if (this.nativeDraggable) {\n                   this.options.touchStartThreshold = 4;\n                    dragEl.draggable = true;\n                }\n\n                dragStartFn();\n            }\n        },\n\n        //native dnd mode : register _OnDragStart for dragstart event handler \n        //moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\n        _triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n            dnd.log(\"_triggerDragStart\",\"start\");\n            dnd.log(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\n\n            dnd.prepare(this);\n\n            if (!this.nativeDraggable) {\n                ////eventer.on(document, 'mousemove', this._onTouchMove);\n            } else {\n                eventer.on(this.dragEl, 'dragend', this._onDragEnd);\n                eventer.on(this.dragEl, 'dragstart', this._onDragStart);\n            }\n\n            try {\n                if (document.selection) {\n                    // Timeout neccessary for IE9\n                    langx.defer(function () {\n                        document.selection.empty();\n                    });\n                } else {\n                    window.getSelection().removeAllRanges();\n                }\n            } catch (err) {\n            }\n        },\n\n        _onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\n            dnd.log(\"_onDragStart\",\"start\");\n            var _this = this,\n                dragEl = this.dragEl,\n                rootEl = this._elm;\n\n            var dataTransfer = evt.dataTransfer;\n            var options = _this.options;\n\n            // Setup clone\n            var cloneEl = dnd.cloneEl = noder.clone(dragEl,true);\n\n            cloneEl.draggable = false;\n            cloneEl.style['will-change'] = '';\n\n            //this._hideClone();\n\n            styler.toggleClass(cloneEl, _this.options.chosenClass, false);\n\n\n            // #1143: IFrame support workaround\n            _this._cloneId = langx.defer(function () {\n                if (!_this.options.removeCloneOnHide) {\n                    rootEl.insertBefore(cloneEl, dragEl);\n                }\n                _this._dispatchEvent(_this, rootEl, 'clone', dragEl);\n            });\n\n\n            if (!fallback){\n                styler.toggleClass(dragEl, options.dragClass, true);\n            } \n\n            // Set proper drop events\n            if (fallback) {\n                //dnd.ignoreNextClick = true;\n                //_this._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\n            } else {\n                // Undo what was set in _prepareDragStart before drag started\n                //eventer.off(document, 'mouseup', _this._onDrop); //TODO : lwf\n                ///eventer.off(document, 'touchend', _this._onDrop);\n                ///eventer.off(document, 'touchcancel', _this._onDrop);\n\n                if (dataTransfer) {\n                    dataTransfer.effectAllowed = 'move';\n                    options.setData && options.setData.call(_this, dataTransfer, dragEl);\n                }\n\n                ////eventer.on(document, 'drop', _this);\n\n                // #1276 fix:\n                styler.css(dragEl, 'transform', 'translateZ(0)');\n            }\n\n            dnd.awaitingDragStarted = true;\n\n            _this._dragStartId = langx.defer(_this._dragStarted.bind(_this, fallback, evt));\n            ///eventer.on(document, 'selectstart', _this);\n            ///if (Safari) {\n            ///    styler.css(document.body, 'user-select', 'none');\n            ///}\n        },\n\n        //\n        //\n        _dragStarted: function (fallback, evt) {\n            dnd.awaitingDragStarted = false;\n            var dragEl = this.dragEl,\n                rootEl = this._elm,\n                oldIndex = dnd.oldIndex,\n                oldDraggableIndex = dnd.oldDraggableIndex;\n\n            if (rootEl && dragEl) {\n                //if (this.nativeDraggable) {\n                //    eventer.on(document, 'dragover', this._handleAutoScroll);\n                //    eventer.on(document, 'dragover', dnd._checkAlignment);\n                //}\n                dnd.start(this);\n                var options = this.options;\n\n                // Apply effect\n                !fallback && styler.toggleClass(dragEl, options.dragClass, false);\n                styler.toggleClass(dragEl, options.ghostClass, true);\n\n                // In case dragging an animated element\n                styler.css(dragEl, 'transform', '');\n\n                dnd.active = this;\n\n                //fallback && this._appendGhost();\n\n                // Drag start event\n                this._dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\n            } else {\n                this._nulling();\n            }\n        },\n        _onDragEnd: function (/**Event*/evt) {\n            var el = this._elm,\n                options = this.options,\n                dragEl = this.dragEl,\n                putSortable = dnd.putSortable;\n\n            dnd.awaitingDragStarted = false;\n            scrolling = false;\n            //isCircumstantialInvert = false;\n            //pastFirstInvertThresh = false;\n\n            //clearInterval(this._loopId);\n\n            //clearInterval(pointerElemChangedInterval);\n            autoscroll._nulling();\n            \n            autoscroll._clearAutoScrolls();\n            autoscroll._cancelThrottle();\n\n            clearTimeout(this._dragStartTimer);\n\n\n            if (this._cloneId) {\n                this._cloneId.stop();\n                this._cloneId = null;\n            }\n\n            if (this._dragStartId) {\n                this._dragStartId.stop();\n                this._dragStartId = null;\n            }\n\n\n            // Unbind events\n            ///eventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\n            ///if (Safari) {\n            ///    styler.css(document.body, 'user-select', '');\n           /// }\n\n\n\n            if (this.nativeDraggable) {\n                eventer.off(this.dragEl, 'dragstart', this._onDragStart);\n                eventer.off(this.dragEl, 'dragend', this._onDragEnd);\n            }\n\n            lastDownEl = null;\n\n            savedInputChecked.forEach(function (el) {\n                el.checked = true;\n            });\n\n\n            savedInputChecked.length = 0;\n\n           \tthis.dragEl = null;\n\n            dnd.end();\n\n        },\n\n\n\t\t_onMove : function (fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\t\tvar evt,\n\t\t\t\tsortable = fromEl[dnd.expando],\n\t\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\t\tretVal;\n\n\t\t\tevt = eventer.create(\"move\",{\n\t\t\t\tto : toEl,\n\t\t\t\tfrom : fromEl,\n\t\t\t\tdragged : dragEl,\n\t\t\t\tdraggedRect: dragRect,\n\t\t\t\trelated : targetEl || toEl,\n\t\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\n\t\t\t\twillInsertAfter : willInsertAfter,\n\t\t\t\toriginalEvent : originalEvt\n\t\t\t});\n\n\t\t\tfromEl.dispatchEvent(evt);\n\n\t\t\tif (onMoveFn) {\n\t\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t\t}\n\n\t\t\treturn retVal;\n\t\t},\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target,\n\t\t\t\tdragEl = dnd.draggable.dragEl;\n\n\t\t\t//if (ghostEl && !supportCssPointerEvents) {\n\t\t\t//\t_hideGhostForTarget();\n\t\t\t//\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t//\t_unhideGhostForTarget();\n\t\t\t//} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t//}\n\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = containers._isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\tvar  dragEl = dnd.draggable.dragEl;\n\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,ghoster.ghostEl) : this.options.direction;\n\t\t},\n\n\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation,\n\t\t\t\tdragEl = dnd.draggable.dragEl;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = geom.boundingRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._repaint(target);\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\tstyler.css(target, 'transition', '');\n\t\t\t\t\tstyler.css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_repaint: function(target) {\n\t\t\treturn target.offsetWidth;\n\t\t},\n\n\t\t//_offMoveEvents: function() {\n\t   //\t\teventer.off(document, 'dragover', dnd.nearestEmptyInsertDetectEvent);\n\t   //\t\teventer.off(document, 'mousemove', dnd.nearestEmptyInsertDetectEvent);\n       //\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\teventer.off(document, 'selectstart', this);\n\t\t},\n\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = dnd.active,\n\t\t\t\tisOwner = (dnd.activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this,\n\t\t\t\tdragEl = dnd.draggable.dragEl,\n\t\t\t\trootEl = dnd.draggable.elm(),\n\t\t\t\tputSortable = dnd.putSortable,\n\t\t\t\tnextEl = dnd.nextEl,\n\t\t\t\toldIndex = dnd.oldIndex,\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex;\n            //dnd.log(\"_onDragOver\",\"start\");\n\n\t\t\tif (_silent) return;\n\n\t\t\t// Return invocation when dragEl is inserted (or completed)\n\t\t\tfunction completed(insertion) {\n\t\t\t\tif (insertion) {\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(_this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (activeSortable) {\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (putSortable !== _this && _this !== dnd.active) {\n\t\t\t\t\t\tputSortable = dnd.putSortable = _this;\n\t\t\t\t\t} else if (_this === dnd.active) {\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Animation\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t//_this._handleAutoScroll(evt);\n\t\t\t\t\tdnd.over(evt);\n\t\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(evt);\n\n\t\t\t\t\t// Do not detect for empty insert if already inserted\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_this._dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, containers._index(dragEl), oldDraggableIndex, containers._index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\t/**\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\n\t\t\t */\n\t\t\tfunction _getInsertDirection(target) {\n\t\t\t\tvar dragElIndex = containers._index(dragEl),\n\t\t\t\t\ttargetIndex = containers._index(target);\n\n\t\t\t\tif (dragElIndex < targetIndex) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\t\t\tvar targetRect = geom.boundingRect(target),\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\n\t\t\t\t\tinvert = false;\n\n\n\t\t\t\tif (!invertSwap) {\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinvert = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Regular\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinvert = invert || invertSwap;\n\n\t\t\t\tif (invert) {\n\t\t\t\t\t// Invert of regular\n\t\t\t\t\tif (\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\n\t\t\t\treturn completed(false);\n\t\t\t}\n\n\t\t\tif (target !== dragEl) {\n\t\t\t\tdnd.ignoreNextClick = false;\n\t\t\t}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = dnd.activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tdnd.parentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed(true);\n\t\t\t\t}\n\n\t\t\t\tvar elLastChild = ghoster._lastChild(el);\n\n\t\t\t\tif (!elLastChild || ghoster._ghostIsLast(evt, axis, el) && !elLastChild.animated) {\n\t\t\t\t\t// assign target only if condition is true\n\t\t\t\t\tif (elLastChild && el === evt.target) {\n\t\t\t\t\t\ttarget = elLastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tdnd.parentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\n\t\t\t\t\t\tscrolledPastTop = autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\tcontainers._isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed(false);\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\n\t\t\t\t\t\tif (scrolledPastTop) {\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdnd.parentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance =  Math.abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\trootEl = dnd.draggable.elm(),\n\t\t\t\tdragEl = dnd.draggable.dragEl,\n\t\t\t\tputSortable = dnd.putSortable,\n\t\t\t\tparentEl = dnd.parentEl,\n\t\t\t\toldIndex = dnd.oldIndex,\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex,\n\t\t\t\tnextEl = dnd.nextEl;\n\n\t\t\t/*\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t\n\t\t\tautoscroll._clearAutoScrolls();\n\t\t\tautoscroll._cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\t\t\t*/\n\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\t\t\t// Unbind events\n\t\t\t//eventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(document, 'drop', this);\n\t\t\t\t///eventer.off(el, 'dragstart', this._onDragStart);\n\t\t\t\t//eventer.off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t//eventer.off(document, 'dragover', dnd._checkAlignment);\n\t\t\t}\n\n\t\t\t///if (Safari) {\n\t\t\t///\tstyler.css(document.body, 'user-select', '');\n\t\t\t///}\n\n\t\t\t//this._offMoveEvents();\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghoster.remove();\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tnoder.remove(dnd.cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\t///if (this.nativeDraggable) {\n\t\t\t\t\t///\teventer.off(dragEl, 'dragend', this);\n\t\t\t\t\t///}\n\n\t\t\t\t\tdnd._disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class'sd\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = containers._index(dragEl);\n\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\tthis._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\tthis._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}else {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = containers._index(dragEl);\n\t\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dnd.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\n\n\n\t\t\t/*\n\t\t\tdnd.rootEl =\n\t\t\tdnd.dragEl =\n\t\t\tdnd.parentEl =\n\t\t\tghoster.ghostEl =\n\t\t\tdnd.nextEl =\n\t\t\tdnd.cloneEl =\n\t\t\t///lastDownEl =\n\n\t\t\tautoscroll.scrollEl =\n\t\t\tautoscroll.scrollParentEl =\n\t\t\tautoscroll.autoScrolls.length =\n\t\t\t*/\n\t\t\t//pointerElemChangedInterval =\n\n\t\t\t//tapEvt =\n\t\t\t//dnd.touchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\t//dnd.oldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\trealDragElRect =\n\n\t\t\t//dnd.putSortable =\n\t\t\t//dnd.activeGroup =\n\t\t\t//dnd.active = \n\t\t\tnull;\n\n\t\t},\n\n        _hideClone: function() {\n            if (!dnd.cloneEl.cloneHidden) {\n                styler.hide(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = true;\n                if (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\n                    noder.remove(dnd.cloneEl);\n                }\n            }\n        },\n\n        _showClone: function(putSortable) {\n            var rootEl = dnd.active.el,\n                nextEl = dnd.nextEl;\n\n            if (putSortable.lastPutMode !== 'clone') {\n                this._hideClone();\n                return;\n            }\n\n            if (dnd.cloneEl.cloneHidden) {\n                // show clone at dragEl or original position\n                if (rootEl.contains(dnd.draggable.dragEl) && !this.options.group.revertClone) {\n                    rootEl.insertBefore(dnd.cloneEl, dnd.draggable.dragEl);\n                } else if (nextEl) {\n                    rootEl.insertBefore(dnd.cloneEl, nextEl);\n                } else {\n                    rootEl.appendChild(dnd.cloneEl);\n                }\n\n                if (this.options.group.revertClone) {\n                    this._animate(dnd.draggable.dragEl, dnd.cloneEl);\n                }\n                styler.show(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = false;\n            }\n        },\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dnd.draggable.dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t_dispatchEvent : function (\n\t\t\tsortable, rootEl, name,\n\t\t\ttargetEl, toEl, fromEl,\n\t\t\tstartIndex, newIndex,\n\t\t\tstartDraggableIndex, newDraggableIndex,\n\t\t\toriginalEvt\n\t\t) {\n\t\t\tsortable = (sortable || rootEl[dnd.expando]);\n\t\t\tvar evt,\n\t\t\t\toptions = sortable.options,\n\t\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\tputSortable = this.putSortable;\n\n\t\t\tevt = eventer.create(name,{\n\t\t\t\tto : toEl || rootEl,\n\t\t\t\tfrom : fromEl || rootEl,\n\t\t\t\titem : targetEl || rootEl,\n\t\t\t\tclone : this.cloneEl,\n\t\t\t\toldIndex : startIndex,\n\t\t\t\tnewIndex : newIndex,\n\t\t\t\toldDraggableIndex : startDraggableIndex,\n\t\t\t\tnewDraggableIndex : newDraggableIndex,\n\t\t\t\toriginalEvent : originalEvt,\n\t\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\n\t\t\t});\n\t\t\tif (rootEl) {\n\t\t\t\trootEl.dispatchEvent(evt);\n\t\t\t}\n\n\t\t\tif (options[onName]) {\n\t\t\t\toptions[onName].call(sortable, evt);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || noder.generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[dnd.expando] = null;\n\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(el, 'dragover', this);\n\t\t\t\teventer.off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tthis._onDrop();\n\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t});\n\n\n    function _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\n});"]}