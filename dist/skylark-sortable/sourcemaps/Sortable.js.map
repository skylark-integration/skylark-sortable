{"version":3,"sources":["Sortable.js"],"names":["define","skylark","langx","isBrowser","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","scrollingElement","oriented","touch","autoscroll","containers","dnd","ghoster","log","category","message","append","parentEl","rootEl","nextEl","lastDownEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","activeGroup","pointerElemChangedInterval","tapEvt","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","awaitingDragStarted","ignoreNextClick","pastFirstInvertThresh","isCircumstantialInvert","win","window","document","parseInt","setTimeout","IE11OrLess","Polymer","ie","Edge","edge","FireFox","firefox","Safari","safari","supportDraggable","apple","device","createElement","support","cssPointerEvents","_generateId","el","str","tagName","className","src","href","textContent","i","length","sum","charCodeAt","toString","_nextTick","fn","defer","_cancelNextTick","id","stop","Sortable","options","nodeType","call","this","mixin","expando","defaults","group","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","draggable","test","nodeName","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","evt","target","dragEl","ghostEl","excluding","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","x","y","supportPointer","emptyInsertThreshold","name","_prepareGroup","charAt","bind","nativeDraggable","mousy","on","_onTapStart","sortables","push","get","_disableDraggable","_unsilent","_silent","_alignedSilent","abs","Math","min","max","savedInputChecked","toFn","value","pull","to","from","sameGroup","otherGroup","join","indexOf","originalGroup","checkPull","checkPut","put","revertClone","addEventListener","preventDefault","stopPropagation","stopImmediatePropagation","active","cancelable","prototype","constructor","_computeIsAligned","closest","parentNode","children","sortableMouseAligned","_isClientInRowColumn","clientX","clientY","_getDirection","startIndex","startDraggableIndex","_this","type","touches","originalTarget","shadowRoot","path","composedPath","root","inputs","getElementsByTagName","idx","checked","_saveInputCheckedState","button","isContentEditable","_index","_dispatchEvent","undefined","split","some","criteria","trim","_prepareDragStart","_handleAutoScroll","fallback","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","style","transition","transform","_disableDelayedDragEvents","_triggerDragStart","toggleClass","forEach","ctx","iterator","list","n","_find","prepare","_onDrop","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","e","floor","clearTimeout","off","_onDragStart","_onTouchMove","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_checkAlignment","css","_appendGhost","_nulling","forAutoScroll","matrix","scaleX","a","scaleY","d","relativeScrollOffset","getRelativeScrollOffset","dx","ghostRelativeParentInitialScroll","dy","translate3d","touchEvt","container","body","_animate","prevRect","ms","currentRect","boundingRect","left","width","top","height","_repaint","animated","offsetWidth","_offMoveEvents","nearestEmptyInsertDetectEvent","_offUpEvents","cloneEl","clone","_hideClone","_cloneId","insertBefore","_loopId","setInterval","_emulateDragOver","effectAllowed","_dragStartId","_onDragOver","dragRect","targetRect","revert","activeSortable","isOwner","canSort","putSortable","contains","completed","lastPutMode","axis","appendChild","elLastChild","_lastChild","_ghostIsLast","_showClone","_onMove","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","_isScrolledPast","scrollBefore","scrollTop","_isElInRowColumn","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","bottom","right","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","scrollBy","insertion","scrolling","clearInterval","_clearAutoScrolls","_cancelThrottle","removeChild","save","scrollParentEl","autoScrolls","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","items","set","selector","option","destroy","Array","querySelectorAll","removeAttribute","splice","cloneHidden","create","version","attach"],"mappings":"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","file":"../Sortable.js","sourcesContent":["define([\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./containers\",\r\n\t\"./dnd\",\r\n\t\"./ghoster\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll,\r\n\tcontainers,\r\n\tdnd,\r\n\tghoster\r\n){\r\n\tfunction log(category,message) {\r\n\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\r\n\t}\t\r\n\r\n\r\n\tvar \r\n\t\tparentEl,\r\n\t\t//ghostEl,\r\n\t\t//cloneEl,\r\n\t\trootEl,\r\n\t\tnextEl,\r\n\t\tlastDownEl,\r\n\r\n\t\tscrollEl,\r\n\t\t//scrollParentEl,\r\n\t\tscrollCustomFn,\r\n\r\n\t\toldIndex,\r\n\t\tnewIndex,\r\n\t\toldDraggableIndex,\r\n\t\tnewDraggableIndex,\r\n\r\n\t\tactiveGroup,\r\n\t\t//putSortable,\r\n\r\n\t\tawaitingDragStarted = false,\r\n\t\tignoreNextClick = false,\r\n\t\t//sortables = [],\r\n\r\n\t\tpointerElemChangedInterval,\r\n\t\tlastPointerElemX,\r\n\t\tlastPointerElemY,\r\n\r\n\t\ttapEvt,\r\n\t\t//touchEvt,\r\n\r\n\t\tmoved,\r\n\r\n\t\tlastTarget,\r\n\t\tlastDirection,\r\n\t\tpastFirstInvertThresh = false,\r\n\t\tisCircumstantialInvert = false,\r\n\t\tlastMode, // 'swap' or 'insert'\r\n\r\n\t\ttargetMoveDistance,\r\n\r\n\r\n\t\trealDragElRect, // dragEl rect after current animation\r\n\r\n\t\t/** @const */\r\n\t\tR_SPACE = /\\s+/g,\r\n\r\n\t\twin = window,\r\n\t\tdocument = win.document,\r\n\t\tparseInt = win.parseInt,\r\n\t\tsetTimeout = win.setTimeout,\r\n\r\n\t\tPolymer = win.Polymer,\r\n\r\n\t\tcaptureMode = {\r\n\t\t\tcapture: false,\r\n\t\t\tpassive: false\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\r\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\r\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\r\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\r\n\r\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\r\n\t\t*/\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari,\r\n\r\n\t\tIOS = isMobile && isMobile.apple.device,\r\n\r\n\t\t//CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\r\n\r\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\r\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\r\n\r\n\t\t/*\r\n\t\tsupportCssPointerEvents = (function() {\r\n\t\t\t// false when <= IE11\r\n\t\t\tif (IE11OrLess) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar el = document.createElement('x');\r\n\t\t\tel.style.cssText = 'pointer-events:auto';\r\n\t\t\treturn el.style.pointerEvents === 'auto';\r\n\t\t})(),\r\n\t\t*/\r\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents;\r\n\r\n\t\t_silent = false,\r\n\t\t_alignedSilent = false,\r\n\r\n\t\tabs = Math.abs,\r\n\t\tmin = Math.min,\r\n\t\tmax = Math.max,\r\n\r\n\t\tsavedInputChecked = [],\r\n\r\n\r\n\t\t_prepareGroup = function (options) {\r\n\t\t\tfunction toFn(value, pull) {\r\n\t\t\t\treturn function(to, from, dragEl, evt) {\r\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\r\n\r\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\r\n\t\t\t\t\t\t// Default pull value\r\n\t\t\t\t\t\t// Default pull and put value if same group\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (value == null || value === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (pull && value === 'clone') {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t} else if (typeof value === 'function') {\r\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\r\n\r\n\t\t\t\t\t\treturn (value === true ||\r\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\r\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar group = {};\r\n\t\t\tvar originalGroup = options.group;\r\n\r\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\r\n\t\t\t\toriginalGroup = {name: originalGroup};\r\n\t\t\t}\r\n\r\n\t\t\tgroup.name = originalGroup.name;\r\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\r\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\r\n\t\t\tgroup.revertClone = originalGroup.revertClone;\r\n\r\n\t\t\toptions.group = group;\r\n\t\t},\r\n\r\n\r\n\t\t//_hideGhostForTarget = function() {\r\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t//\t\tstyler.css(ghostEl, 'display', 'none');\r\n\t\t//\t}\r\n\t\t//},\r\n\r\n\t\t//_unhideGhostForTarget = function() {\r\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t//\t\tstyler.css(ghostEl, 'display', '');\r\n\t\t//\t}\r\n\t\t//};\r\n\r\n\r\n\r\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\r\n\tdocument.addEventListener('click', function(evt) {\r\n\t\tif (ignoreNextClick) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation && evt.stopPropagation();\r\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\r\n\t\t\tignoreNextClick = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, true);\r\n\r\n\r\n\tfunction _find(ctx, tagName, iterator) {\r\n\t\tif (ctx) {\r\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\r\n\r\n\t\t\tif (iterator) {\r\n\t\t\t\tfor (; i < n; i++) {\r\n\t\t\t\t\titerator(list[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Generate id\r\n\t * @param   {HTMLElement} el\r\n\t * @returns {String}\r\n\t * @private\r\n\t */\r\n\tfunction _generateId(el) {\r\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n\t\t\ti = str.length,\r\n\t\t\tsum = 0;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tsum += str.charCodeAt(i);\r\n\t\t}\r\n\r\n\t\treturn sum.toString(36);\r\n\t}\r\n\r\n\r\n\tfunction _saveInputCheckedState(root) {\r\n\t\tsavedInputChecked.length = 0;\r\n\r\n\t\tvar inputs = root.getElementsByTagName('input');\r\n\t\tvar idx = inputs.length;\r\n\r\n\t\twhile (idx--) {\r\n\t\t\tvar el = inputs[idx];\r\n\t\t\tel.checked && savedInputChecked.push(el);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _nextTick(fn) {\r\n\t\t//return setTimeout(fn, 0);\r\n\t\treturn langx.defer(fn);\r\n\t}\r\n\r\n\tfunction _cancelNextTick(id) {\r\n\t\t//return clearTimeout(id);\r\n\t\treturn id && id.stop();\r\n\t}\r\n\r\n\r\n\r\n\t// Fixed #973:\r\n\teventer.on(document, 'touchmove', function(evt) {\r\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\r\n\t\t\tevt.preventDefault();\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t/**\r\n\t * @class  Sortable\r\n\t * @param  {HTMLElement}  el\r\n\t * @param  {Object}       [options]\r\n\t */\r\n\tfunction Sortable(el, options) {\r\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\r\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\r\n\t\t}\r\n\r\n\t\tthis.el = el; // root element\r\n\t\tthis.options = options = langx.mixin({}, options);\r\n\r\n\r\n\t\t// Export instance\r\n\t\tel[dnd.expando] = this;\r\n\r\n\t\t// Default options\r\n\t\tvar defaults = {\r\n\t\t\tgroup: null,\r\n\t\t\tsort: true,\r\n\t\t\tdisabled: false,\r\n\t\t\tstore: null,\r\n\t\t\thandle: null,\r\n\t\t\tscroll: true,\r\n\t\t\tscrollSensitivity: 30,\r\n\t\t\tscrollSpeed: 10,\r\n\t\t\tbubbleScroll: true,\r\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\r\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\r\n\t\t\tinvertSwap: false, // invert always\r\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\r\n\t\t\tremoveCloneOnHide: true,\r\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\r\n\t\t\t\treturn oriented(el, langx.mixin({\r\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\r\n\t\t\t\t\t\t\t\t},this.options));\r\n\t\t\t},\r\n\t\t\tghostClass: 'sortable-ghost',\r\n\t\t\tchosenClass: 'sortable-chosen',\r\n\t\t\tdragClass: 'sortable-drag',\r\n\t\t\tignore: 'a, img',\r\n\t\t\tfilter: null,\r\n\t\t\tpreventOnFilter: true,\r\n\t\t\tanimation: 0,\r\n\t\t\teasing: null,\r\n\t\t\tsetData: function (dataTransfer, dragEl) {\r\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\r\n\t\t\t},\r\n\t\t\tdropBubble: false,\r\n\t\t\tdragoverBubble: false,\r\n\t\t\tdataIdAttr: 'data-id',\r\n\t\t\tdelay: 0,\r\n\t\t\tdelayOnTouchOnly: false,\r\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\r\n\t\t\tforceFallback: false,\r\n\t\t\tfallbackClass: 'sortable-fallback',\r\n\t\t\tfallbackOnBody: false,\r\n\t\t\tfallbackTolerance: 0,\r\n\t\t\tfallbackOffset: {x: 0, y: 0},\r\n\t\t\tsupportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\r\n\t\t\temptyInsertThreshold: 5\r\n\t\t};\r\n\r\n\r\n\t\t// Set default options\r\n\t\tfor (var name in defaults) {\r\n\t\t\t!(name in options) && (options[name] = defaults[name]);\r\n\t\t}\r\n\r\n\t\t_prepareGroup(options);\r\n\r\n\t\t// Bind all private methods\r\n\t\tfor (var fn in this) {\r\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n\t\t\t\tthis[fn] = this[fn].bind(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Setup drag mode\r\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\r\n\t\t\tthis.options.touchStartThreshold = 1;\r\n\t\t}\r\n\r\n\t\t// Bind events\r\n\t\ttouch.mousy(el);\r\n\r\n\t\teventer.on(el, 'mousedown', this._onTapStart);\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\teventer.on(el, 'dragover', this);\r\n\t\t\teventer.on(el, 'dragenter', this);\r\n\t\t}\r\n\r\n\t\tdnd.sortables.push(this.el);\r\n\r\n\t\t// Restore sorting\r\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\r\n\t}\r\n\r\n\tSortable.prototype = /** @lends Sortable.prototype */ {\r\n\t\tconstructor: Sortable,\r\n\r\n\t\t_computeIsAligned: function(evt) {\r\n\t\t\tvar target,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\t//if (ghostEl && !supportCssPointerEvents) {\r\n\t\t\t//\t_hideGhostForTarget();\r\n\t\t\t//\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\r\n\t\t\t//\t_unhideGhostForTarget();\r\n\t\t\t//} else {\r\n\t\t\t\ttarget = evt.target;\r\n\t\t\t//}\r\n\r\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\r\n\t\t\tif (_alignedSilent) return;\r\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\r\n\r\n\t\t\tvar children = this.el.children;\r\n\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\r\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\r\n\t\t\t\t\tchildren[i].sortableMouseAligned = containers._isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\r\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\r\n\t\t\t\tlastTarget = null;\r\n\t\t\t}\r\n\r\n\t\t\t_alignedSilent = true;\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t_alignedSilent = false;\r\n\t\t\t}, 30);\r\n\r\n\t\t},\r\n\r\n\t\t_getDirection: function(evt, target) {\r\n\t\t\tvar  dragEl = dnd.dragEl;\r\n\r\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,ghoster.ghostEl) : this.options.direction;\r\n\t\t},\r\n\r\n\r\n\t\t// handle moudedown event\r\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\r\n\t\t\t//if (!evt.cancelable) return;\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\r\n\t\t\t\ttype = evt.type,\r\n\t\t\t\ttouch = evt.touches && evt.touches[0],\r\n\t\t\t\ttarget = (touch || evt).target,\r\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\r\n\t\t\t\tfilter = options.filter,\r\n\t\t\t\tstartIndex,\r\n\t\t\t\tstartDraggableIndex;\r\n\r\n\t\t\t_saveInputCheckedState(el);\r\n\r\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\r\n\t\t\tif (dnd.dragEl) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\r\n\t\t\t\treturn; // only left button and enabled\r\n\t\t\t}\r\n\r\n\t\t\t// cancel dnd if original target is content editable\r\n\t\t\tif (originalTarget.isContentEditable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, false);\r\n\r\n\r\n\t\t\tif (lastDownEl === target) {\r\n\t\t\t\t// Ignoring duplicate `down`\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlog(\"_onTapStart\",target.tagName+\",\"+target.className);\r\n\r\n\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\tstartIndex = containers._index(target);\r\n\t\t\tstartDraggableIndex = containers._index(target, options.draggable);\r\n\r\n\t\t\t// Check filter\r\n\t\t\tif (typeof filter === 'function') {\r\n\t\t\t\tif (filter.call(this, evt, target, this)) {\r\n\t\t\t\t\tdnd._dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (filter) {\r\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\r\n\t\t\t\t\tcriteria = finder.closest(originalTarget, criteria.trim(), el, false);\r\n\r\n\t\t\t\t\tif (criteria) {\r\n\t\t\t\t\t\tdnd._dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (filter) {\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Prepare `dragstart`\r\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\r\n\t\t},\r\n\r\n\r\n\t\t_handleAutoScroll: function(evt, fallback) {\r\n\r\n\t\t\tif (!dnd.dragEl || !this.options.scroll) return;\r\n\r\n\t\t\treturn autoscroll._handleAutoScroll(evt,this.options,fallback);\r\n\t\t},\r\n\r\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = _this.el,\r\n\t\t\t\toptions = _this.options,\r\n\t\t\t\townerDocument = el.ownerDocument,\r\n\t\t\t\tdragStartFn,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\t\t\tlog(\"_prepareDragStart\",\"start\");\r\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\r\n\t\t\t\trootEl = el;\r\n\t\t\t\tdragEl = dnd.dragEl = target;\r\n\t\t\t\tparentEl = dragEl.parentNode;\r\n\t\t\t\tnextEl = dragEl.nextSibling;\r\n\t\t\t\tlastDownEl = target;\r\n\t\t\t\tactiveGroup = options.group;\r\n\t\t\t\toldIndex = startIndex;\r\n\t\t\t\toldDraggableIndex = startDraggableIndex;\r\n\r\n\t\t\t\ttapEvt = {\r\n\t\t\t\t\ttarget: dragEl,\r\n\t\t\t\t\tclientX: (touch || evt).clientX,\r\n\t\t\t\t\tclientY: (touch || evt).clientY\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._lastX = (touch || evt).clientX;\r\n\t\t\t\tthis._lastY = (touch || evt).clientY;\r\n\r\n\t\t\t\tdragEl.style['will-change'] = 'all';\r\n\t\t\t\t// undo animation if needed\r\n\t\t\t\tdragEl.style.transition = '';\r\n\t\t\t\tdragEl.style.transform = '';\r\n\r\n\t\t\t\tdragStartFn = function () {\r\n\t\t\t\t\t// Delayed drag has been triggered\r\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\r\n\t\t\t\t\t_this._disableDelayedDragEvents();\r\n\r\n\t\t\t\t\tif (!FireFox && _this.nativeDraggable) {\r\n\t\t\t\t\t\tdragEl.draggable = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Bind the events: dragstart/dragend\r\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\r\n\r\n\t\t\t\t\t// Drag start event\r\n\t\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\r\n\r\n\t\t\t\t\t// Chosen item\r\n\t\t\t\t\tstyler.toggleClass(dragEl, options.chosenClass, true);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Disable \"draggable\"\r\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\r\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdnd.prepare(this);\r\n\r\n\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._onDrop);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchend', _this._onDrop);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\r\n\r\n\t\t\t\t// Make dragEl draggable (must be before delay for FireFox)\r\n\t\t\t\tif (FireFox && this.nativeDraggable) {\r\n\t\t\t\t\tthis.options.touchStartThreshold = 4;\r\n\t\t\t\t\tdragEl.draggable = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Delay is impossible for native DnD in Edge or IE\r\n\t\t\t\tif (options.delay && (options.delayOnTouchOnly ? touch : true) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\r\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\r\n\t\t\t\t\t// before the delay has been reached:\r\n\t\t\t\t\t// disable the delayed drag\r\n\t\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchend', _this._disableDelayedDrag);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\r\n\t\t\t\t\teventer.on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t//options.supportPointer && eventer.on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\r\n\r\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdragStartFn();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\r\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\r\n\t\t\tif (max(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\r\n\t\t\t\t\t>= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))\r\n\t\t\t) {\r\n\t\t\t\tthis._disableDelayedDrag();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_disableDelayedDrag: function () {\r\n\t\t\tdnd.dragEl && _disableDraggable(dnd.dragEl);\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\tthis._disableDelayedDragEvents();\r\n\t\t},\r\n\r\n\t\t_disableDelayedDragEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._disableDelayedDrag);\r\n\t\t\teventer.off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\r\n\t\t},\r\n\r\n\t\t//native dnd mode : register _OnDragStart for dragstart event handler \r\n\t\t//moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\r\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\r\n\t\t\tlog(\"_triggerDragStart\",\"start\");\r\n\t\t\tlog(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\r\n\t\t\tif (!this.nativeDraggable) {\r\n\t\t\t\teventer.on(document, 'mousemove', this._onTouchMove);\r\n\t\t\t} else {\r\n\t\t\t\teventer.on(dnd.dragEl, 'dragend', this);\r\n\t\t\t\teventer.on(rootEl, 'dragstart', this._onDragStart);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (document.selection) {\r\n\t\t\t\t\t// Timeout neccessary for IE9\r\n\t\t\t\t\t_nextTick(function () {\r\n\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//\r\n\t\t//\r\n\t\t_dragStarted: function (fallback, evt) {\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tvar dragEl = dnd.dragEl;\r\n\r\n\t\t\tif (rootEl && dragEl) {\r\n\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\teventer.on(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\t\teventer.on(document, 'dragover', dnd._checkAlignment);\r\n\t\t\t\t}\r\n\t\t\t\tvar options = this.options;\r\n\r\n\t\t\t\t// Apply effect\r\n\t\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, false);\r\n\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\r\n\t\t\t\t// In case dragging an animated element\r\n\t\t\t\tstyler.css(dragEl, 'transform', '');\r\n\r\n\t\t\t\tdnd.active = this;\r\n\r\n\t\t\t\tfallback && this._appendGhost();\r\n\r\n\t\t\t\t// Drag start event\r\n\t\t\t\tdnd._dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\r\n\t\t\t} else {\r\n\t\t\t\tthis._nulling();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t_onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\r\n\t\t\tlog(\"_onTouchMove\",\"start\");\r\n\t\t\tvar ghostEl = ghoster.ghostEl;\r\n\t\t\tif (tapEvt) {\r\n\t\t\t\tvar\toptions = this.options,\r\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\r\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\r\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\r\n\t\t\t\t\tmatrix = ghostEl && transforms.matrix(ghostEl),\r\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\r\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\r\n\t\t\t\t\trelativeScrollOffset = ghoster.getRelativeScrollOffset(),\r\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX)\r\n\t\t\t\t\t\t\t+ fallbackOffset.x) / (scaleX || 1)\r\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\r\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY)\r\n\t\t\t\t\t\t\t+ fallbackOffset.y) / (scaleY || 1)\r\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\r\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\r\n\r\n\t\t\t\t// only set the status to dragging, when we are actually dragging\r\n\t\t\t\tif (!dnd.active && !awaitingDragStarted) {\r\n\t\t\t\t\tif (fallbackTolerance &&\r\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._onDragStart(evt, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!forAutoScroll && this._handleAutoScroll(touch, true);\r\n\r\n\t\t\t\tmoved = true;\r\n\t\t\t\tdnd.touchEvt = touch;\r\n\r\n\t\t\t\tif (ghostEl) {\r\n\t\t\t\t\tstyler.css(ghostEl, 'webkitTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'mozTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'msTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'transform', translate3d);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//evt.cancelable && evt.preventDefault();\r\n\t\t\t\tevt.preventDefault()\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_appendGhost: function () {\r\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\r\n\t\t\t// Not being adjusted for\r\n\t\t\tvar container = this.options.fallbackOnBody ? document.body : rootEl;\r\n\t\t\treturn ghoster._appendGhost(dnd.dragEl,container,this.options);\r\n\t\t},\r\n\r\n\r\n\t\t_animate: function (prevRect, target) {\r\n\t\t\tvar ms = this.options.animation,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\tif (ms) {\r\n\t\t\t\tvar currentRect = geom.boundingRect(target);\r\n\r\n\t\t\t\tif (target === dragEl) {\r\n\t\t\t\t\trealDragElRect = currentRect;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (prevRect.nodeType === 1) {\r\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if actually moving position\r\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\r\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\r\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\r\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\r\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis._repaint(target);\r\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\r\n\t\t\t\ttarget.animated = setTimeout(function () {\r\n\t\t\t\t\tstyler.css(target, 'transition', '');\r\n\t\t\t\t\tstyler.css(target, 'transform', '');\r\n\t\t\t\t\ttarget.animated = false;\r\n\t\t\t\t}, ms);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_repaint: function(target) {\r\n\t\t\treturn target.offsetWidth;\r\n\t\t},\r\n\r\n\t\t_offMoveEvents: function() {\r\n\t\t\teventer.off(document, 'dragover', dnd.nearestEmptyInsertDetectEvent);\r\n\t\t\teventer.off(document, 'mousemove', dnd.nearestEmptyInsertDetectEvent);\r\n\t\t},\r\n\r\n\t\t_offUpEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\r\n\t\t\teventer.off(document, 'selectstart', this);\r\n\t\t},\r\n\r\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\tvar dataTransfer = evt.dataTransfer;\r\n\t\t\tvar options = _this.options;\r\n\r\n\t\t\t// Setup clone\r\n\t\t\tvar cloneEl = dnd.cloneEl = noder.clone(dragEl,true);\r\n\r\n\t\t\tcloneEl.draggable = false;\r\n\t\t\tcloneEl.style['will-change'] = '';\r\n\r\n\t\t\tthis._hideClone();\r\n\r\n\t\t\tstyler.toggleClass(cloneEl, _this.options.chosenClass, false);\r\n\r\n\r\n\t\t\t// #1143: IFrame support workaround\r\n\t\t\t_this._cloneId = _nextTick(function () {\r\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\r\n\t\t\t\t}\r\n\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'clone', dragEl);\r\n\t\t\t});\r\n\r\n\r\n\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, true);\r\n\r\n\t\t\t// Set proper drop events\r\n\t\t\tif (fallback) {\r\n\t\t\t\tignoreNextClick = true;\r\n\t\t\t\t_this._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\r\n\t\t\t} else {\r\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\r\n\t\t\t\teventer.off(document, 'mouseup', _this._onDrop);\r\n\t\t\t\t///eventer.off(document, 'touchend', _this._onDrop);\r\n\t\t\t\t///eventer.off(document, 'touchcancel', _this._onDrop);\r\n\r\n\t\t\t\tif (dataTransfer) {\r\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\r\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\teventer.on(document, 'drop', _this);\r\n\r\n\t\t\t\t// #1276 fix:\r\n\t\t\t\tstyler.css(dragEl, 'transform', 'translateZ(0)');\r\n\t\t\t}\r\n\r\n\t\t\tawaitingDragStarted = true;\r\n\r\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\r\n\t\t\teventer.on(document, 'selectstart', _this);\r\n\t\t\tif (Safari) {\r\n\t\t\t\tstyler.css(document.body, 'user-select', 'none');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\r\n\t\t_onDragOver: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\ttarget = evt.target,\r\n\t\t\t\tdragRect,\r\n\t\t\t\ttargetRect,\r\n\t\t\t\trevert,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tgroup = options.group,\r\n\t\t\t\tactiveSortable = dnd.active,\r\n\t\t\t\tisOwner = (activeGroup === group),\r\n\t\t\t\tcanSort = options.sort,\r\n\t\t\t\t_this = this,\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\tputSortable = dnd.putSortable;\r\n\r\n\t\t\tif (_silent) return;\r\n\r\n\t\t\t// Return invocation when dragEl is inserted (or completed)\r\n\t\t\tfunction completed(insertion) {\r\n\t\t\t\tif (insertion) {\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(_this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (activeSortable) {\r\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (putSortable !== _this && _this !== dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable = _this;\r\n\t\t\t\t\t} else if (_this === dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Animation\r\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\r\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\r\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\r\n\t\t\t\t\tlastTarget = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// no bubbling and not fallback\r\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\r\n\t\t\t\t\t_this._handleAutoScroll(evt);\r\n\t\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(evt);\r\n\r\n\t\t\t\t\t// Do not detect for empty insert if already inserted\r\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Call when dragEl has been inserted\r\n\t\t\tfunction changed() {\r\n\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, containers._index(dragEl), oldDraggableIndex, containers._index(dragEl, options.draggable), evt);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\r\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\r\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\r\n\t\t\t */\r\n\t\t\tfunction _getInsertDirection(target) {\r\n\t\t\t\tvar dragElIndex = containers._index(dragEl),\r\n\t\t\t\t\ttargetIndex = containers._index(target);\r\n\r\n\t\t\t\tif (dragElIndex < targetIndex) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\r\n\t\t\t\tvar targetRect = geom.boundingRect(target),\r\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\r\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\r\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\r\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\r\n\t\t\t\t\tinvert = false;\r\n\r\n\r\n\t\t\t\tif (!invertSwap) {\r\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\r\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\r\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\r\n\t\t\t\t\t\t\t(lastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\r\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\r\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\r\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\r\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinvert = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Regular\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\r\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinvert = invert || invertSwap;\r\n\r\n\t\t\t\tif (invert) {\r\n\t\t\t\t\t// Invert of regular\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\r\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (evt.preventDefault !== void 0) {\r\n\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tmoved = true;\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\r\n\r\n\t\t\t// target is dragEl or target is animated\r\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\r\n\t\t\t\treturn completed(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (target !== dragEl) {\r\n\t\t\t\tignoreNextClick = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (activeSortable && !options.disabled &&\r\n\t\t\t\t(isOwner\r\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\tputSortable === this ||\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\r\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tvar axis = this._getDirection(evt, target);\r\n\r\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\r\n\r\n\t\t\t\tif (revert) {\r\n\t\t\t\t\tthis._hideClone();\r\n\t\t\t\t\tparentEl = rootEl; // actualization\r\n\r\n\t\t\t\t\tif (nextEl) {\r\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trootEl.appendChild(dragEl);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn completed(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar elLastChild = ghoster._lastChild(el);\r\n\r\n\t\t\t\tif (!elLastChild || ghoster._ghostIsLast(evt, axis, el) && !elLastChild.animated) {\r\n\t\t\t\t\t// assign target only if condition is true\r\n\t\t\t\t\tif (elLastChild && el === evt.target) {\r\n\t\t\t\t\t\ttarget = elLastChild;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\r\n\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\tparentEl = el; // actualization\r\n\t\t\t\t\t\trealDragElRect = null;\r\n\r\n\t\t\t\t\t\tchanged();\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\r\n\t\t\t\t\tvar direction = 0,\r\n\t\t\t\t\t\ttargetBeforeFirstSwap,\r\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\r\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\r\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\r\n\t\t\t\t\t\tscrolledPastTop = autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\r\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\r\n\r\n\r\n\t\t\t\t\tif (lastTarget !== target) {\r\n\t\t\t\t\t\tlastMode = null;\r\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\r\n\t\t\t\t\t\tpastFirstInvertThresh = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tcontainers._isElInRowColumn(dragEl, target, axis) && aligned ||\r\n\t\t\t\t\t\tdifferentLevel ||\r\n\t\t\t\t\t\tscrolledPastTop ||\r\n\t\t\t\t\t\toptions.invertSwap ||\r\n\t\t\t\t\t\tlastMode === 'insert' ||\r\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\r\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\r\n\t\t\t\t\t\tlastMode === 'swap'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// New target that we will be inside\r\n\t\t\t\t\t\tif (lastMode !== 'swap') {\r\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\r\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\r\n\t\t\t\t\t\t\tisCircumstantialInvert,\r\n\t\t\t\t\t\t\tlastTarget === target);\r\n\t\t\t\t\t\tlastMode = 'swap';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Insert at position\r\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\r\n\t\t\t\t\t\tlastMode = 'insert';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (direction === 0) return completed(false);\r\n\r\n\t\t\t\t\trealDragElRect = null;\r\n\t\t\t\t\tlastTarget = target;\r\n\r\n\t\t\t\t\tlastDirection = direction;\r\n\r\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\r\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\r\n\t\t\t\t\t\tafter = false;\r\n\r\n\t\t\t\t\tafter = direction === 1;\r\n\r\n\t\t\t\t\tvar moveVector = dnd._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\r\n\r\n\t\t\t\t\tif (moveVector !== false) {\r\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\r\n\t\t\t\t\t\t\tafter = (moveVector === 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_silent = true;\r\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\r\n\r\n\t\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (after && !nextSibling) {\r\n\t\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\r\n\t\t\t\t\t\tif (scrolledPastTop) {\r\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\r\n\r\n\t\t\t\t\t\t// must be done before animation\r\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\r\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchanged();\r\n\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el.contains(dragEl)) {\r\n\t\t\t\t\treturn completed(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onDrop: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\tputSortable = dnd.putSortable;\r\n\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tscrolling = false;\r\n\t\t\tisCircumstantialInvert = false;\r\n\t\t\tpastFirstInvertThresh = false;\r\n\r\n\t\t\tclearInterval(this._loopId);\r\n\r\n\t\t\tclearInterval(pointerElemChangedInterval);\r\n\t\t\t\r\n\t\t\tautoscroll._clearAutoScrolls();\r\n\t\t\tautoscroll._cancelThrottle();\r\n\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\t_cancelNextTick(this._cloneId);\r\n\t\t\t_cancelNextTick(this._dragStartId);\r\n\r\n\t\t\t// Unbind events\r\n\t\t\teventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(document, 'drop', this);\r\n\t\t\t\teventer.off(el, 'dragstart', this._onDragStart);\r\n\t\t\t\teventer.off(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\teventer.off(document, 'dragover', dnd._checkAlignment);\r\n\t\t\t}\r\n\r\n\t\t\tif (Safari) {\r\n\t\t\t\tstyler.css(document.body, 'user-select', '');\r\n\t\t\t}\r\n\r\n\t\t\tthis._offMoveEvents();\r\n\t\t\tthis._offUpEvents();\r\n\r\n\t\t\tif (evt) {\r\n\t\t\t\tif (moved) {\r\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tghoster.ghostEl && ghoster.ghostEl.parentNode && ghoster.ghostEl.parentNode.removeChild(ghoster.ghostEl);\r\n\r\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\r\n\t\t\t\t\t// Remove clone\r\n\t\t\t\t\tdnd.cloneEl && dnd.cloneEl.parentNode && dnd.cloneEl.parentNode.removeChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dragEl) {\r\n\t\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\t\teventer.off(dragEl, 'dragend', this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_disableDraggable(dragEl);\r\n\t\t\t\t\tdragEl.style['will-change'] = '';\r\n\r\n\t\t\t\t\t// Remove class's\r\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\r\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\r\n\r\n\t\t\t\t\t// Drag stop event\r\n\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\r\n\r\n\t\t\t\t\tif (rootEl !== parentEl) {\r\n\t\t\t\t\t\tnewIndex = containers._index(dragEl);\r\n\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t// Add event\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// Remove event\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// drag from one list and drop into another\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tputSortable && putSortable.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\r\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\t\t\t\t\tnewIndex = containers._index(dragEl);\r\n\t\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t\t// drag & drop within the same list\r\n\t\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd.active) {\r\n\t\t\t\t\t\t/* jshint eqnull:true */\r\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\r\n\t\t\t\t\t\t\tnewIndex = oldIndex;\r\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t// Save sorting\r\n\t\t\t\t\t\tthis.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis._nulling();\r\n\t\t},\r\n\r\n\t\t_nulling: function() {\r\n\t\t\trootEl =\r\n\t\t\tdnd.dragEl =\r\n\t\t\tparentEl =\r\n\t\t\tghoster.ghostEl =\r\n\t\t\tnextEl =\r\n\t\t\tdnd.cloneEl =\r\n\t\t\tlastDownEl =\r\n\r\n\t\t\tscrollEl =\r\n\t\t\tautoscroll.scrollParentEl =\r\n\t\t\tautoscroll.autoScrolls.length =\r\n\r\n\t\t\tpointerElemChangedInterval =\r\n\t\t\tlastPointerElemX =\r\n\t\t\tlastPointerElemY =\r\n\r\n\t\t\ttapEvt =\r\n\t\t\tdnd.touchEvt =\r\n\r\n\t\t\tmoved =\r\n\t\t\tnewIndex =\r\n\t\t\toldIndex =\r\n\r\n\t\t\tlastTarget =\r\n\t\t\tlastDirection =\r\n\r\n\t\t\trealDragElRect =\r\n\r\n\t\t\tdnd.putSortable =\r\n\t\t\tactiveGroup =\r\n\t\t\tdnd.active = null;\r\n\r\n\t\t\tsavedInputChecked.forEach(function (el) {\r\n\t\t\t\tel.checked = true;\r\n\t\t\t});\r\n\r\n\t\t\tsavedInputChecked.length = 0;\r\n\t\t},\r\n\r\n\t\thandleEvent: function (/**Event*/evt) {\r\n\t\t\tswitch (evt.type) {\r\n\t\t\t\tcase 'drop':\r\n\t\t\t\tcase 'dragend':\r\n\t\t\t\t\tthis._onDrop(evt);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'dragenter':\r\n\t\t\t\tcase 'dragover':\r\n\t\t\t\t\tif (dnd.dragEl) {\r\n\t\t\t\t\t\tthis._onDragOver(evt);\r\n\t\t\t\t\t\t_globalDragOver(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selectstart':\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Serializes the item into an array of string.\r\n\t\t * @returns {String[]}\r\n\t\t */\r\n\t\ttoArray: function () {\r\n\t\t\tvar order = [],\r\n\t\t\t\tel,\r\n\t\t\t\tchildren = this.el.children,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tn = children.length,\r\n\t\t\t\toptions = this.options;\r\n\r\n\t\t\tfor (; i < n; i++) {\r\n\t\t\t\tel = children[i];\r\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\r\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn order;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Sorts the elements according to the array.\r\n\t\t * @param  {String[]}  order  order of the items\r\n\t\t */\r\n\t\tsort: function (order) {\r\n\t\t\tvar items = {}, rootEl = this.el;\r\n\r\n\t\t\tthis.toArray().forEach(function (id, i) {\r\n\t\t\t\tvar el = rootEl.children[i];\r\n\r\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\r\n\t\t\t\t\titems[id] = el;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\torder.forEach(function (id) {\r\n\t\t\t\tif (items[id]) {\r\n\t\t\t\t\trootEl.removeChild(items[id]);\r\n\t\t\t\t\trootEl.appendChild(items[id]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Save the current sorting\r\n\t\t */\r\n\t\tsave: function () {\r\n\t\t\tvar store = this.options.store;\r\n\t\t\tstore && store.set && store.set(this);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n\t\t * @param   {HTMLElement}  el\r\n\t\t * @param   {String}       [selector]  default: `options.draggable`\r\n\t\t * @returns {HTMLElement|null}\r\n\t\t */\r\n\t\tclosest: function (el, selector) {\r\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set/get option\r\n\t\t * @param   {string} name\r\n\t\t * @param   {*}      [value]\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\toption: function (name, value) {\r\n\t\t\tvar options = this.options;\r\n\r\n\t\t\tif (value === void 0) {\r\n\t\t\t\treturn options[name];\r\n\t\t\t} else {\r\n\t\t\t\toptions[name] = value;\r\n\r\n\t\t\t\tif (name === 'group') {\r\n\t\t\t\t\t_prepareGroup(options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Destroy\r\n\t\t */\r\n\t\tdestroy: function () {\r\n\t\t\tvar el = this.el;\r\n\r\n\t\t\tel[dnd.expando] = null;\r\n\r\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(el, 'dragover', this);\r\n\t\t\t\teventer.off(el, 'dragenter', this);\r\n\t\t\t}\r\n\t\t\t// Remove draggable attributes\r\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\r\n\t\t\t\tel.removeAttribute('draggable');\r\n\t\t\t});\r\n\r\n\t\t\tthis._onDrop();\r\n\r\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\r\n\r\n\t\t\tthis.el = el = null;\r\n\t\t},\r\n\r\n\t\t_hideClone: function() {\r\n\t\t\tif (!dnd.cloneEl.cloneHidden) {\r\n\t\t\t\tstyler.css(dnd.cloneEl, 'display', 'none');\r\n\t\t\t\tdnd.cloneEl.cloneHidden = true;\r\n\t\t\t\tif (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\r\n\t\t\t\t\tdnd.cloneEl.parentNode.removeChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_showClone: function(putSortable) {\r\n\r\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\r\n\t\t\t\tthis._hideClone();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (dnd.cloneEl.cloneHidden) {\r\n\t\t\t\t// show clone at dragEl or original position\r\n\t\t\t\tif (rootEl.contains(dnd.dragEl) && !this.options.group.revertClone) {\r\n\t\t\t\t\trootEl.insertBefore(dnd.cloneEl, dnd.dragEl);\r\n\t\t\t\t} else if (nextEl) {\r\n\t\t\t\t\trootEl.insertBefore(dnd.cloneEl, nextEl);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trootEl.appendChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.options.group.revertClone) {\r\n\t\t\t\t\tthis._animate(dnd.dragEl, dnd.cloneEl);\r\n\t\t\t\t}\r\n\t\t\t\tstyler.css(dnd.cloneEl, 'display', '');\r\n\t\t\t\tdnd.cloneEl.cloneHidden = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n    function _globalDragOver(/**Event*/evt) {\r\n\t\tif (evt.dataTransfer) {\r\n\t\t\tevt.dataTransfer.dropEffect = 'move';\r\n\t\t}\r\n\t\tevt.cancelable && evt.preventDefault();\r\n\t}\r\n\r\n\tfunction _disableDraggable(el) {\r\n\t\tel.draggable = false;\r\n\t}\r\n\r\n\tfunction _unsilent() {\r\n\t\t_silent = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create sortable instance\r\n\t * @param {HTMLElement}  el\r\n\t * @param {Object}      [options]\r\n\t */\r\n\tSortable.create = function (el, options) {\r\n\t\treturn new Sortable(el, options);\r\n\t};\r\n\r\n\r\n\t// Export\r\n\tSortable.version = '1.9.0';\r\n\r\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\r\n});"]}