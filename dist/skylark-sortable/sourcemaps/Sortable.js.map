{"version":3,"sources":["Sortable.js"],"names":["define","skylark","langx","isBrowser","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","scrollingElement","oriented","plugins","touch","dnd","Draggable","Droppable","win","window","document","parseInt","setTimeout","supportDraggable","Polymer","ie","edge","firefox","safari","apple","device","createElement","_prepareGroup","support","cssPointerEvents","options","toFn","value","pull","to","from","dragEl","evt","sameGroup","group","name","otherGroup","join","indexOf","originalGroup","checkPull","checkPut","put","revertClone","Sortable","Plugin","inherit","klassName","pluginName","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","target","ghostEl","this","el","mixin","excluding","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","fallbackOnBody","forceFallback","fallbackClass","fallbackTolerance","fallbackOffset","x","y","emptyInsertThreshold","_construct","fn","overrided","expando","draggable","test","nodeName","charAt","bind","nativeDraggable","sortables","push","get","droppable","_getDirection","call","_animate","prevRect","ms","currentRect","boundingRect","nodeType","left","width","top","height","matrix","scaleX","a","scaleY","d","css","reflow","animated","clearTimeout","_hideClone","_showClone","putSortable","rootEl","active","nextEl","lastPutMode","cloneEl","cloneHidden","contains","insertBefore","appendChild","show","_dispatchEvent","sortable","targetEl","toEl","fromEl","startIndex","newIndex","startDraggableIndex","newDraggableIndex","originalEvt","onName","toUpperCase","substr","create","item","clone","oldIndex","oldDraggableIndex","originalEvent","pullMode","undefined","dispatchEvent","toArray","order","children","i","n","length","closest","getAttribute","generateId","items","forEach","id","removeChild","save","set","selector","option","destroy","off","_onTapStart","Array","prototype","querySelectorAll","removeAttribute","splice","version","attach"],"mappings":"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","file":"../Sortable.js","sourcesContent":["define([\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/is-browser\",\n\t\"skylark-langx-hoster/is-mobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-plugins-scrolls/scrolling-element\",\n\t\"skylark-domx-layouts/oriented\",\n    \"skylark-domx-plugins-base\",\n\t\"skylark-devices-points/touch\",\n\t\"./dnd\",\n\t\"./draggable\",\n\t\"./droppable\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tscrollingElement,\n\toriented,\n\tplugins,\n\ttouch,\n\tdnd,\n\tDraggable,\n\tDroppable\n){\n\n\t'use strict';\n\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\treturn finder.index(el,function(el){\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\t\t\t\n\t\t})\n\t}\n\n\n\n\n\n\tvar \n\n\t\t///realDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari,\n\n\t\tIOS = isMobile && isMobile.apple.device,\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\n\n\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents,\n\n\t\t_alignedSilent = false,\n\n\t\t//savedInputChecked = [],\n\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t};\n\n\n\tvar Sortable =  plugins.Plugin.inherit({\n        klassName: \"Sortable\",\n        \n        pluginName : \"intg.sortable\",\n\n\n\t\toptions : {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\t//draggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\n\t\t\t\treturn oriented(this.el, langx.mixin({\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\n\t\t\t\t\t\t\t\t},this.options));\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\n\n\t\t\tfallbackOnBody: true,  //fix\n\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\t//supportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t},\n\n\n\t\t/**\n\t\t * @class  Sortable\n\t\t * @param  {HTMLElement}  el\n\t\t * @param  {Object}       [options]\n\t\t */\n\t\t_construct : function Sortable(el, options) {\n            this.overrided(el,options);\n\n\t\t\tthis.el = el; // root element\n\n\t\t\t// Export instance\n\t\t\tel[dnd.expando] = this;\n\n\t\t\toptions = this.options;\n\n\t\t\toptions.draggable = options.draggable || /[uo]l/i.test(el.nodeName) ? '>li' : '>*';\n\n\n\t\t\t_prepareGroup(options);\n\n\t\t\t// Bind all private methods\n\t\t\tfor (var fn in this) {\n\t\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Setup drag mode\n\t\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\t\tthis.options.touchStartThreshold = 1;\n\t\t\t}\n\n\n\n\t\t\tdnd.sortables.push(this.el);\n\n\t\t\t// Restore sorting\n\t\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\n\n\t\t\tthis.draggable = new Draggable(this,this.options);\n\n\t\t\tthis.droppable = new Droppable(this,this.options);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\tvar  dragEl = dnd.dragEl;\n\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,null) : this.options.direction;\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation,\n\t\t\t\tdragEl = dnd.dragEl;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = geom.boundingRect(target);\n\n\t\t\t\t////if (target === dragEl) {\n\t\t\t\t///\trealDragElRect = currentRect;\n\t\t\t\t///}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tnoder.reflow(target);\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\tstyler.css(target, 'transition', '');\n\t\t\t\t\tstyler.css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n        _hideClone: function() {\n        \treturn;\n            if (!dnd.cloneEl.cloneHidden) {\n                styler.hide(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = true;\n                if (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\n                    noder.remove(dnd.cloneEl);\n                }\n            }\n        },\n\n        _showClone: function(putSortable) {\n            var rootEl = dnd.active.el,\n                nextEl = dnd.nextEl;\n\n            if (putSortable.lastPutMode !== 'clone') {\n                this._hideClone();\n                return;\n            }\n\n            if (dnd.cloneEl.cloneHidden) {\n                // show clone at dragEl or original position\n                if (rootEl.contains(dnd.dragEl) && !this.options.group.revertClone) {\n                    rootEl.insertBefore(dnd.cloneEl, dnd.dragEl);\n                } else if (nextEl) {\n                    rootEl.insertBefore(dnd.cloneEl, nextEl);\n                } else {\n                    rootEl.appendChild(dnd.cloneEl);\n                }\n\n                if (this.options.group.revertClone) {\n                    this._animate(dnd.dragEl, dnd.cloneEl);\n                }\n                styler.show(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = false;\n            }\n        },\n\n\t\t_dispatchEvent : function (\n\t\t\tsortable, \n\t\t\trootEl, \n\t\t\tname,\n\t\t\ttargetEl, \n\t\t\ttoEl, \n\t\t\tfromEl,\n\t\t\tstartIndex, \n\t\t\tnewIndex,\n\t\t\tstartDraggableIndex, \n\t\t\tnewDraggableIndex,\n\t\t\toriginalEvt\n\t\t) {\n\t\t\tsortable = (sortable || rootEl[dnd.expando]);\n\t\t\tvar evt,\n\t\t\t\toptions = sortable.options,\n\t\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\tputSortable = dnd.putSortable;\n\n\t\t\tevt = eventer.create(name,{\n\t\t\t\tto : toEl || rootEl,\n\t\t\t\tfrom : fromEl || rootEl,\n\t\t\t\titem : targetEl || rootEl,\n\t\t\t\tclone : dnd.cloneEl,\n\t\t\t\toldIndex : startIndex,\n\t\t\t\tnewIndex : newIndex,\n\t\t\t\toldDraggableIndex : startDraggableIndex,\n\t\t\t\tnewDraggableIndex : newDraggableIndex,\n\t\t\t\toriginalEvent : originalEvt,\n\t\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\n\t\t\t});\n\t\t\tif (rootEl) {\n\t\t\t\trootEl.dispatchEvent(evt);\n\t\t\t}\n\n\t\t\tif (options[onName]) {\n\t\t\t\toptions[onName].call(sortable, evt);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || noder.generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[dnd.expando] = null;\n\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(el, 'dragover', this);\n\t\t\t\teventer.off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t});\n\n\n\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\n});"]}