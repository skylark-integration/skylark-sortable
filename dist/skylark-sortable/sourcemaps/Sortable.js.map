{"version":3,"sources":["Sortable.js"],"names":["define","skylark","langx","isBrowser","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","scrollingElement","oriented","touch","autoscroll","containers","dnd","log","category","message","append","parentEl","rootEl","nextEl","lastDownEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","activeGroup","pointerElemChangedInterval","tapEvt","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","win","window","document","parseInt","setTimeout","IE11OrLess","Polymer","ie","Edge","edge","FireFox","firefox","Safari","safari","PositionGhostAbsolutely","apple","device","supportDraggable","createElement","support","cssPointerEvents","_find","ctx","tagName","iterator","list","getElementsByTagName","i","n","length","_lastChild","el","lastChild","ignoreHidden","excluding","ghostEl","_generateId","str","className","src","href","textContent","sum","charCodeAt","toString","_nextTick","fn","defer","_cancelNextTick","id","stop","_getRect","adjustForTransform","container","adjustForFixed","getBoundingClientRect","top","left","bottom","right","width","height","boundingRect","matrix","scaleX","a","scaleY","d","Sortable","options","nodeType","call","this","mixin","expando","defaults","group","sort","disabled","store","handle","scroll","scrollSensitivity","scrollSpeed","bubbleScroll","draggable","test","nodeName","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","evt","target","dragEl","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","x","y","supportPointer","emptyInsertThreshold","name","_prepareGroup","charAt","bind","nativeDraggable","mousy","on","_onTapStart","sortables","push","get","_disableDraggable","_unsilent","_silent","_alignedSilent","abs","Math","min","max","savedInputChecked","toFn","value","pull","to","from","sameGroup","otherGroup","join","indexOf","originalGroup","checkPull","checkPut","put","revertClone","addEventListener","preventDefault","stopPropagation","stopImmediatePropagation","active","cancelable","prototype","constructor","_computeIsAligned","closest","parentNode","children","sortableMouseAligned","_isClientInRowColumn","clientX","clientY","_getDirection","startIndex","startDraggableIndex","_this","type","touches","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","_index","_dispatchEvent","undefined","split","some","criteria","trim","_prepareDragStart","_handleAutoScroll","fallback","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","style","transition","transform","_disableDelayedDragEvents","_triggerDragStart","toggleClass","forEach","prepare","_onDrop","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","e","floor","clearTimeout","off","_onDragStart","_onTouchMove","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_checkAlignment","css","_appendGhost","_nulling","forAutoScroll","relativeScrollOffset","_getRelativeScrollOffset","dx","dy","translate3d","touchEvt","body","rect","ghostRelativeParentRect","documentElement","scrollTop","scrollLeft","cloneNode","appendChild","_animate","prevRect","ms","currentRect","_repaint","animated","offsetWidth","_offMoveEvents","nearestEmptyInsertDetectEvent","_offUpEvents","cloneEl","clone","_hideClone","_cloneId","insertBefore","_loopId","setInterval","_emulateDragOver","effectAllowed","_dragStartId","_onDragOver","dragRect","targetRect","revert","activeSortable","isOwner","canSort","putSortable","contains","completed","lastPutMode","axis","elLastChild","elRect","mouseOnAxis","mouseOnOppAxis","targetS2","targetS1Opp","targetS2Opp","_ghostIsLast","_showClone","_onMove","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","_isScrolledPast","scrollBefore","_isElInRowColumn","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","scrollBy","insertion","scrolling","clearInterval","_clearAutoScrolls","_cancelThrottle","removeChild","save","scrollParentEl","autoScrolls","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","items","set","selector","option","destroy","Array","querySelectorAll","removeAttribute","splice","cloneHidden","utils","find","is","extend","throttle","_throttle","index","nextTick","cancelNextTick","getChild","childNum","closesting","childAt","create","version","attach"],"mappings":"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","file":"../Sortable.js","sourcesContent":["define([\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./containers\",\r\n\t\"./dnd\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll,\r\n\tcontainers,\r\n\tdnd\r\n){\r\n\tfunction log(category,message) {\r\n\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\r\n\t}\t\r\n\r\n\r\n\tvar \r\n\t\tparentEl,\r\n\t\t//ghostEl,\r\n\t\t//cloneEl,\r\n\t\trootEl,\r\n\t\tnextEl,\r\n\t\tlastDownEl,\r\n\r\n\t\tscrollEl,\r\n\t\t//scrollParentEl,\r\n\t\tscrollCustomFn,\r\n\r\n\t\toldIndex,\r\n\t\tnewIndex,\r\n\t\toldDraggableIndex,\r\n\t\tnewDraggableIndex,\r\n\r\n\t\tactiveGroup,\r\n\t\t//putSortable,\r\n\r\n\t\tawaitingDragStarted = false,\r\n\t\tignoreNextClick = false,\r\n\t\t//sortables = [],\r\n\r\n\t\tpointerElemChangedInterval,\r\n\t\tlastPointerElemX,\r\n\t\tlastPointerElemY,\r\n\r\n\t\ttapEvt,\r\n\t\t//touchEvt,\r\n\r\n\t\tmoved,\r\n\r\n\r\n\t\tlastTarget,\r\n\t\tlastDirection,\r\n\t\tpastFirstInvertThresh = false,\r\n\t\tisCircumstantialInvert = false,\r\n\t\tlastMode, // 'swap' or 'insert'\r\n\r\n\t\ttargetMoveDistance,\r\n\r\n\t\t// For positioning ghost absolutely\r\n\t\tghostRelativeParent,\r\n\t\tghostRelativeParentInitialScroll = [], // (left, top)\r\n\r\n\t\trealDragElRect, // dragEl rect after current animation\r\n\r\n\t\t/** @const */\r\n\t\tR_SPACE = /\\s+/g,\r\n\r\n\t\twin = window,\r\n\t\tdocument = win.document,\r\n\t\tparseInt = win.parseInt,\r\n\t\tsetTimeout = win.setTimeout,\r\n\r\n\t\tPolymer = win.Polymer,\r\n\r\n\t\tcaptureMode = {\r\n\t\t\tcapture: false,\r\n\t\t\tpassive: false\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\r\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\r\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\r\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\r\n\r\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\r\n\t\t*/\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari,\r\n\r\n\t\tIOS = isMobile && isMobile.apple.device,\r\n\t\tPositionGhostAbsolutely = isMobile.apple.device, //IOS\r\n\r\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\r\n\r\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\r\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\r\n\r\n\t\t/*\r\n\t\tsupportCssPointerEvents = (function() {\r\n\t\t\t// false when <= IE11\r\n\t\t\tif (IE11OrLess) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar el = document.createElement('x');\r\n\t\t\tel.style.cssText = 'pointer-events:auto';\r\n\t\t\treturn el.style.pointerEvents === 'auto';\r\n\t\t})(),\r\n\t\t*/\r\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents;\r\n\r\n\t\t_silent = false,\r\n\t\t_alignedSilent = false,\r\n\r\n\t\tabs = Math.abs,\r\n\t\tmin = Math.min,\r\n\t\tmax = Math.max,\r\n\r\n\t\tsavedInputChecked = [],\r\n\r\n\r\n\t\t_prepareGroup = function (options) {\r\n\t\t\tfunction toFn(value, pull) {\r\n\t\t\t\treturn function(to, from, dragEl, evt) {\r\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\r\n\r\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\r\n\t\t\t\t\t\t// Default pull value\r\n\t\t\t\t\t\t// Default pull and put value if same group\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (value == null || value === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (pull && value === 'clone') {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t} else if (typeof value === 'function') {\r\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\r\n\r\n\t\t\t\t\t\treturn (value === true ||\r\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\r\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar group = {};\r\n\t\t\tvar originalGroup = options.group;\r\n\r\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\r\n\t\t\t\toriginalGroup = {name: originalGroup};\r\n\t\t\t}\r\n\r\n\t\t\tgroup.name = originalGroup.name;\r\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\r\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\r\n\t\t\tgroup.revertClone = originalGroup.revertClone;\r\n\r\n\t\t\toptions.group = group;\r\n\t\t},\r\n\r\n\r\n\t\t//_hideGhostForTarget = function() {\r\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t//\t\tstyler.css(ghostEl, 'display', 'none');\r\n\t\t//\t}\r\n\t\t//},\r\n\r\n\t\t//_unhideGhostForTarget = function() {\r\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t//\t\tstyler.css(ghostEl, 'display', '');\r\n\t\t//\t}\r\n\t\t//};\r\n\r\n\r\n\r\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\r\n\tdocument.addEventListener('click', function(evt) {\r\n\t\tif (ignoreNextClick) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation && evt.stopPropagation();\r\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\r\n\t\t\tignoreNextClick = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, true);\r\n\r\n\r\n\tfunction _find(ctx, tagName, iterator) {\r\n\t\tif (ctx) {\r\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\r\n\r\n\t\t\tif (iterator) {\r\n\t\t\t\tfor (; i < n; i++) {\r\n\t\t\t\t\titerator(list[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n\t * @param  {HTMLElement} el       Parent element\r\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\r\n\t */\r\n\tfunction _lastChild(el) {\r\n\t\t/*\r\n\t\tvar last = el.lastElementChild;\r\n\r\n\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\r\n\t\t\tlast = last.previousElementSibling;\r\n\t\t}\r\n\r\n\t\treturn last || null;\r\n\t\t*/\r\n\t\treturn finder.lastChild(el,{\r\n\t\t\tignoreHidden : true,\r\n\t\t\texcluding : [dnd.ghostEl]\r\n\t\t})\r\n\t}\r\n\r\n\tfunction _ghostIsLast(evt, axis, el) {\r\n\t\tvar elRect = geom.boundingRect(_lastChild(el)),\r\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\r\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\r\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\r\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\r\n\t\t\tspacer = 10;\r\n\r\n\t\treturn (\r\n\t\t\taxis === 'vertical' ?\r\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\r\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Generate id\r\n\t * @param   {HTMLElement} el\r\n\t * @returns {String}\r\n\t * @private\r\n\t */\r\n\tfunction _generateId(el) {\r\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n\t\t\ti = str.length,\r\n\t\t\tsum = 0;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tsum += str.charCodeAt(i);\r\n\t\t}\r\n\r\n\t\treturn sum.toString(36);\r\n\t}\r\n\r\n\r\n\tfunction _saveInputCheckedState(root) {\r\n\t\tsavedInputChecked.length = 0;\r\n\r\n\t\tvar inputs = root.getElementsByTagName('input');\r\n\t\tvar idx = inputs.length;\r\n\r\n\t\twhile (idx--) {\r\n\t\t\tvar el = inputs[idx];\r\n\t\t\tel.checked && savedInputChecked.push(el);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _nextTick(fn) {\r\n\t\t//return setTimeout(fn, 0);\r\n\t\treturn langx.defer(fn);\r\n\t}\r\n\r\n\tfunction _cancelNextTick(id) {\r\n\t\t//return clearTimeout(id);\r\n\t\treturn id && id.stop();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the \"bounding client rect\" of given element\r\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\r\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\r\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\r\n\t * @return {Object}                        The boundingClientRect of el\r\n\t */\r\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\r\n\t\tif (!el.getBoundingClientRect && el !== win) return;\r\n\t\tvar {\r\n\t\t\ttop,\r\n\t\t\tleft,\r\n\t\t\tbottom,\r\n\t\t\tright,\r\n\t\t\twidth,\r\n\t\t\theight\r\n\t\t} = geom.boundingRect(el);\r\n\t\t\r\n\t\tif (adjustForTransform && el !== win) {\r\n\t\t\t// Adjust for scale()\r\n\t\t\tvar matrix = transforms.matrix(container || el),\r\n\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\tif (matrix) {\r\n\t\t\t\ttop /= scaleY;\r\n\t\t\t\tleft /= scaleX;\r\n\r\n\t\t\t\twidth /= scaleX;\r\n\t\t\t\theight /= scaleY;\r\n\r\n\t\t\t\tbottom = top + height;\r\n\t\t\t\tright = left + width;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: top,\r\n\t\t\tleft: left,\r\n\t\t\tbottom: bottom,\r\n\t\t\tright: right,\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\t// Fixed #973:\r\n\teventer.on(document, 'touchmove', function(evt) {\r\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\r\n\t\t\tevt.preventDefault();\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t/**\r\n\t * @class  Sortable\r\n\t * @param  {HTMLElement}  el\r\n\t * @param  {Object}       [options]\r\n\t */\r\n\tfunction Sortable(el, options) {\r\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\r\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\r\n\t\t}\r\n\r\n\t\tthis.el = el; // root element\r\n\t\tthis.options = options = langx.mixin({}, options);\r\n\r\n\r\n\t\t// Export instance\r\n\t\tel[dnd.expando] = this;\r\n\r\n\t\t// Default options\r\n\t\tvar defaults = {\r\n\t\t\tgroup: null,\r\n\t\t\tsort: true,\r\n\t\t\tdisabled: false,\r\n\t\t\tstore: null,\r\n\t\t\thandle: null,\r\n\t\t\tscroll: true,\r\n\t\t\tscrollSensitivity: 30,\r\n\t\t\tscrollSpeed: 10,\r\n\t\t\tbubbleScroll: true,\r\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\r\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\r\n\t\t\tinvertSwap: false, // invert always\r\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\r\n\t\t\tremoveCloneOnHide: true,\r\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\r\n\t\t\t\treturn oriented(el, langx.mixin({\r\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\r\n\t\t\t\t\t\t\t\t},this.options));\r\n\t\t\t},\r\n\t\t\tghostClass: 'sortable-ghost',\r\n\t\t\tchosenClass: 'sortable-chosen',\r\n\t\t\tdragClass: 'sortable-drag',\r\n\t\t\tignore: 'a, img',\r\n\t\t\tfilter: null,\r\n\t\t\tpreventOnFilter: true,\r\n\t\t\tanimation: 0,\r\n\t\t\teasing: null,\r\n\t\t\tsetData: function (dataTransfer, dragEl) {\r\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\r\n\t\t\t},\r\n\t\t\tdropBubble: false,\r\n\t\t\tdragoverBubble: false,\r\n\t\t\tdataIdAttr: 'data-id',\r\n\t\t\tdelay: 0,\r\n\t\t\tdelayOnTouchOnly: false,\r\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\r\n\t\t\tforceFallback: false,\r\n\t\t\tfallbackClass: 'sortable-fallback',\r\n\t\t\tfallbackOnBody: false,\r\n\t\t\tfallbackTolerance: 0,\r\n\t\t\tfallbackOffset: {x: 0, y: 0},\r\n\t\t\tsupportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\r\n\t\t\temptyInsertThreshold: 5\r\n\t\t};\r\n\r\n\r\n\t\t// Set default options\r\n\t\tfor (var name in defaults) {\r\n\t\t\t!(name in options) && (options[name] = defaults[name]);\r\n\t\t}\r\n\r\n\t\t_prepareGroup(options);\r\n\r\n\t\t// Bind all private methods\r\n\t\tfor (var fn in this) {\r\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n\t\t\t\tthis[fn] = this[fn].bind(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Setup drag mode\r\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\r\n\t\t\tthis.options.touchStartThreshold = 1;\r\n\t\t}\r\n\r\n\t\t// Bind events\r\n\t\ttouch.mousy(el);\r\n\r\n\t\teventer.on(el, 'mousedown', this._onTapStart);\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\teventer.on(el, 'dragover', this);\r\n\t\t\teventer.on(el, 'dragenter', this);\r\n\t\t}\r\n\r\n\t\tdnd.sortables.push(this.el);\r\n\r\n\t\t// Restore sorting\r\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\r\n\t}\r\n\r\n\tSortable.prototype = /** @lends Sortable.prototype */ {\r\n\t\tconstructor: Sortable,\r\n\r\n\t\t_computeIsAligned: function(evt) {\r\n\t\t\tvar target,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\t//if (ghostEl && !supportCssPointerEvents) {\r\n\t\t\t//\t_hideGhostForTarget();\r\n\t\t\t//\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\r\n\t\t\t//\t_unhideGhostForTarget();\r\n\t\t\t//} else {\r\n\t\t\t\ttarget = evt.target;\r\n\t\t\t//}\r\n\r\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\r\n\t\t\tif (_alignedSilent) return;\r\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\r\n\r\n\t\t\tvar children = this.el.children;\r\n\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\r\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\r\n\t\t\t\t\tchildren[i].sortableMouseAligned = containers._isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\r\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\r\n\t\t\t\tlastTarget = null;\r\n\t\t\t}\r\n\r\n\t\t\t_alignedSilent = true;\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t_alignedSilent = false;\r\n\t\t\t}, 30);\r\n\r\n\t\t},\r\n\r\n\t\t_getDirection: function(evt, target) {\r\n\t\t\tvar  dragEl = dnd.dragEl;\r\n\r\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,dnd.ghostEl) : this.options.direction;\r\n\t\t},\r\n\r\n\r\n\t\t// handle moudedown event\r\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\r\n\t\t\t//if (!evt.cancelable) return;\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\r\n\t\t\t\ttype = evt.type,\r\n\t\t\t\ttouch = evt.touches && evt.touches[0],\r\n\t\t\t\ttarget = (touch || evt).target,\r\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\r\n\t\t\t\tfilter = options.filter,\r\n\t\t\t\tstartIndex,\r\n\t\t\t\tstartDraggableIndex;\r\n\r\n\t\t\t_saveInputCheckedState(el);\r\n\r\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\r\n\t\t\tif (dnd.dragEl) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\r\n\t\t\t\treturn; // only left button and enabled\r\n\t\t\t}\r\n\r\n\t\t\t// cancel dnd if original target is content editable\r\n\t\t\tif (originalTarget.isContentEditable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, false);\r\n\r\n\r\n\t\t\tif (lastDownEl === target) {\r\n\t\t\t\t// Ignoring duplicate `down`\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlog(\"_onTapStart\",target.tagName+\",\"+target.className);\r\n\r\n\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\tstartIndex = containers._index(target);\r\n\t\t\tstartDraggableIndex = containers._index(target, options.draggable);\r\n\r\n\t\t\t// Check filter\r\n\t\t\tif (typeof filter === 'function') {\r\n\t\t\t\tif (filter.call(this, evt, target, this)) {\r\n\t\t\t\t\tdnd._dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (filter) {\r\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\r\n\t\t\t\t\tcriteria = finder.closest(originalTarget, criteria.trim(), el, false);\r\n\r\n\t\t\t\t\tif (criteria) {\r\n\t\t\t\t\t\tdnd._dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (filter) {\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Prepare `dragstart`\r\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\r\n\t\t},\r\n\r\n\r\n\t\t_handleAutoScroll: function(evt, fallback) {\r\n\r\n\t\t\tif (!dnd.dragEl || !this.options.scroll) return;\r\n\r\n\t\t\treturn autoscroll._handleAutoScroll(evt,this.options,fallback);\r\n\t\t},\r\n\r\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = _this.el,\r\n\t\t\t\toptions = _this.options,\r\n\t\t\t\townerDocument = el.ownerDocument,\r\n\t\t\t\tdragStartFn,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\t\t\tlog(\"_prepareDragStart\",\"start\");\r\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\r\n\t\t\t\trootEl = el;\r\n\t\t\t\tdragEl = dnd.dragEl = target;\r\n\t\t\t\tparentEl = dragEl.parentNode;\r\n\t\t\t\tnextEl = dragEl.nextSibling;\r\n\t\t\t\tlastDownEl = target;\r\n\t\t\t\tactiveGroup = options.group;\r\n\t\t\t\toldIndex = startIndex;\r\n\t\t\t\toldDraggableIndex = startDraggableIndex;\r\n\r\n\t\t\t\ttapEvt = {\r\n\t\t\t\t\ttarget: dragEl,\r\n\t\t\t\t\tclientX: (touch || evt).clientX,\r\n\t\t\t\t\tclientY: (touch || evt).clientY\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._lastX = (touch || evt).clientX;\r\n\t\t\t\tthis._lastY = (touch || evt).clientY;\r\n\r\n\t\t\t\tdragEl.style['will-change'] = 'all';\r\n\t\t\t\t// undo animation if needed\r\n\t\t\t\tdragEl.style.transition = '';\r\n\t\t\t\tdragEl.style.transform = '';\r\n\r\n\t\t\t\tdragStartFn = function () {\r\n\t\t\t\t\t// Delayed drag has been triggered\r\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\r\n\t\t\t\t\t_this._disableDelayedDragEvents();\r\n\r\n\t\t\t\t\tif (!FireFox && _this.nativeDraggable) {\r\n\t\t\t\t\t\tdragEl.draggable = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Bind the events: dragstart/dragend\r\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\r\n\r\n\t\t\t\t\t// Drag start event\r\n\t\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\r\n\r\n\t\t\t\t\t// Chosen item\r\n\t\t\t\t\tstyler.toggleClass(dragEl, options.chosenClass, true);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Disable \"draggable\"\r\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\r\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdnd.prepare(this);\r\n\r\n\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._onDrop);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchend', _this._onDrop);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\r\n\r\n\t\t\t\t// Make dragEl draggable (must be before delay for FireFox)\r\n\t\t\t\tif (FireFox && this.nativeDraggable) {\r\n\t\t\t\t\tthis.options.touchStartThreshold = 4;\r\n\t\t\t\t\tdragEl.draggable = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Delay is impossible for native DnD in Edge or IE\r\n\t\t\t\tif (options.delay && (options.delayOnTouchOnly ? touch : true) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\r\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\r\n\t\t\t\t\t// before the delay has been reached:\r\n\t\t\t\t\t// disable the delayed drag\r\n\t\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchend', _this._disableDelayedDrag);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\r\n\t\t\t\t\teventer.on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t//options.supportPointer && eventer.on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\r\n\r\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdragStartFn();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\r\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\r\n\t\t\tif (max(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\r\n\t\t\t\t\t>= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))\r\n\t\t\t) {\r\n\t\t\t\tthis._disableDelayedDrag();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_disableDelayedDrag: function () {\r\n\t\t\tdnd.dragEl && _disableDraggable(dnd.dragEl);\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\tthis._disableDelayedDragEvents();\r\n\t\t},\r\n\r\n\t\t_disableDelayedDragEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._disableDelayedDrag);\r\n\t\t\teventer.off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\r\n\t\t},\r\n\r\n\t\t//native dnd mode : register _OnDragStart for dragstart event handler \r\n\t\t//moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\r\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\r\n\t\t\tlog(\"_triggerDragStart\",\"start\");\r\n\t\t\tlog(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\r\n\t\t\tif (!this.nativeDraggable) {\r\n\t\t\t\teventer.on(document, 'mousemove', this._onTouchMove);\r\n\t\t\t} else {\r\n\t\t\t\teventer.on(dnd.dragEl, 'dragend', this);\r\n\t\t\t\teventer.on(rootEl, 'dragstart', this._onDragStart);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (document.selection) {\r\n\t\t\t\t\t// Timeout neccessary for IE9\r\n\t\t\t\t\t_nextTick(function () {\r\n\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//\r\n\t\t//\r\n\t\t_dragStarted: function (fallback, evt) {\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tvar dragEl = dnd.dragEl;\r\n\r\n\t\t\tif (rootEl && dragEl) {\r\n\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\teventer.on(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\t\teventer.on(document, 'dragover', dnd._checkAlignment);\r\n\t\t\t\t}\r\n\t\t\t\tvar options = this.options;\r\n\r\n\t\t\t\t// Apply effect\r\n\t\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, false);\r\n\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\r\n\t\t\t\t// In case dragging an animated element\r\n\t\t\t\tstyler.css(dragEl, 'transform', '');\r\n\r\n\t\t\t\tdnd.active = this;\r\n\r\n\t\t\t\tfallback && this._appendGhost();\r\n\r\n\t\t\t\t// Drag start event\r\n\t\t\t\tdnd._dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\r\n\t\t\t} else {\r\n\t\t\t\tthis._nulling();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t_onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\r\n\t\t\tlog(\"_onTouchMove\",\"start\");\r\n\t\t\tvar ghostEl = dnd.ghostEl;\r\n\t\t\tif (tapEvt) {\r\n\t\t\t\tvar\toptions = this.options,\r\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\r\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\r\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\r\n\t\t\t\t\tmatrix = ghostEl && transforms.matrix(ghostEl),\r\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\r\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\r\n\t\t\t\t\trelativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && autoscroll._getRelativeScrollOffset(ghostRelativeParent),\r\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX)\r\n\t\t\t\t\t\t\t+ fallbackOffset.x) / (scaleX || 1)\r\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\r\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY)\r\n\t\t\t\t\t\t\t+ fallbackOffset.y) / (scaleY || 1)\r\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\r\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\r\n\r\n\t\t\t\t// only set the status to dragging, when we are actually dragging\r\n\t\t\t\tif (!dnd.active && !awaitingDragStarted) {\r\n\t\t\t\t\tif (fallbackTolerance &&\r\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._onDragStart(evt, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!forAutoScroll && this._handleAutoScroll(touch, true);\r\n\r\n\t\t\t\tmoved = true;\r\n\t\t\t\tdnd.touchEvt = touch;\r\n\r\n\t\t\t\tif (ghostEl) {\r\n\t\t\t\t\tstyler.css(ghostEl, 'webkitTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'mozTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'msTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'transform', translate3d);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//evt.cancelable && evt.preventDefault();\r\n\t\t\t\tevt.preventDefault()\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_appendGhost: function () {\r\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\r\n\t\t\t// Not being adjusted for\r\n\t\t\tvar  dragEl = dnd.dragEl,\r\n\t\t\t\tghostEl = dnd.ghostEl;\r\n\r\n\t\t\tif (!ghostEl) {\r\n\t\t\t\tvar container = this.options.fallbackOnBody ? document.body : rootEl,\r\n\t\t\t\t\trect = _getRect(dragEl, true, container, !PositionGhostAbsolutely),\r\n\t\t\t\t\tcss = styler.css(dragEl),\r\n\t\t\t\t\toptions = this.options;\r\n\r\n\t\t\t\t// Position absolutely\r\n\t\t\t\tif (PositionGhostAbsolutely) {\r\n\t\t\t\t\t// Get relatively positioned parent\r\n\t\t\t\t\tghostRelativeParent = container;\r\n\r\n\t\t\t\t\twhile (\r\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'position') === 'static' &&\r\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'transform') === 'none' &&\r\n\t\t\t\t\t\tghostRelativeParent !== document\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ghostRelativeParent !== document) {\r\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\r\n\r\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\r\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\r\n\t\t\t\t\t\tif (ghostRelativeParent === document) ghostRelativeParent = scrollingElement();\r\n\r\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\r\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tghostRelativeParent = scrollingElement();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tghostRelativeParentInitialScroll = autoscroll._getRelativeScrollOffset(ghostRelativeParent);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tghostEl =dnd.ghostEl = dragEl.cloneNode(true);\r\n\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.ghostClass, false);\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.fallbackClass, true);\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.dragClass, true);\r\n\r\n\t\t\t\tstyler.css(ghostEl, 'box-sizing', 'border-box');\r\n\t\t\t\tstyler.css(ghostEl, 'margin', 0);\r\n\t\t\t\tstyler.css(ghostEl, 'top', rect.top);\r\n\t\t\t\tstyler.css(ghostEl, 'left', rect.left);\r\n\t\t\t\tstyler.css(ghostEl, 'width', rect.width);\r\n\t\t\t\tstyler.css(ghostEl, 'height', rect.height);\r\n\t\t\t\tstyler.css(ghostEl, 'opacity', '0.8');\r\n\t\t\t\tstyler.css(ghostEl, 'position', (PositionGhostAbsolutely ? 'absolute' : 'fixed'));\r\n\t\t\t\tstyler.css(ghostEl, 'zIndex', '100000');\r\n\t\t\t\tstyler.css(ghostEl, 'pointerEvents', 'none');\r\n\r\n\t\t\t\tcontainer.appendChild(ghostEl);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t_animate: function (prevRect, target) {\r\n\t\t\tvar ms = this.options.animation,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\tif (ms) {\r\n\t\t\t\tvar currentRect = geom.boundingRect(target);\r\n\r\n\t\t\t\tif (target === dragEl) {\r\n\t\t\t\t\trealDragElRect = currentRect;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (prevRect.nodeType === 1) {\r\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if actually moving position\r\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\r\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\r\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\r\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\r\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis._repaint(target);\r\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\r\n\t\t\t\ttarget.animated = setTimeout(function () {\r\n\t\t\t\t\tstyler.css(target, 'transition', '');\r\n\t\t\t\t\tstyler.css(target, 'transform', '');\r\n\t\t\t\t\ttarget.animated = false;\r\n\t\t\t\t}, ms);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_repaint: function(target) {\r\n\t\t\treturn target.offsetWidth;\r\n\t\t},\r\n\r\n\t\t_offMoveEvents: function() {\r\n\t\t\teventer.off(document, 'dragover', dnd.nearestEmptyInsertDetectEvent);\r\n\t\t\teventer.off(document, 'mousemove', dnd.nearestEmptyInsertDetectEvent);\r\n\t\t},\r\n\r\n\t\t_offUpEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\r\n\t\t\teventer.off(document, 'selectstart', this);\r\n\t\t},\r\n\r\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\tvar dataTransfer = evt.dataTransfer;\r\n\t\t\tvar options = _this.options;\r\n\r\n\t\t\t// Setup clone\r\n\t\t\tvar cloneEl = dnd.cloneEl = noder.clone(dragEl,true);\r\n\r\n\t\t\tcloneEl.draggable = false;\r\n\t\t\tcloneEl.style['will-change'] = '';\r\n\r\n\t\t\tthis._hideClone();\r\n\r\n\t\t\tstyler.toggleClass(cloneEl, _this.options.chosenClass, false);\r\n\r\n\r\n\t\t\t// #1143: IFrame support workaround\r\n\t\t\t_this._cloneId = _nextTick(function () {\r\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\r\n\t\t\t\t}\r\n\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'clone', dragEl);\r\n\t\t\t});\r\n\r\n\r\n\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, true);\r\n\r\n\t\t\t// Set proper drop events\r\n\t\t\tif (fallback) {\r\n\t\t\t\tignoreNextClick = true;\r\n\t\t\t\t_this._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\r\n\t\t\t} else {\r\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\r\n\t\t\t\teventer.off(document, 'mouseup', _this._onDrop);\r\n\t\t\t\t///eventer.off(document, 'touchend', _this._onDrop);\r\n\t\t\t\t///eventer.off(document, 'touchcancel', _this._onDrop);\r\n\r\n\t\t\t\tif (dataTransfer) {\r\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\r\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\teventer.on(document, 'drop', _this);\r\n\r\n\t\t\t\t// #1276 fix:\r\n\t\t\t\tstyler.css(dragEl, 'transform', 'translateZ(0)');\r\n\t\t\t}\r\n\r\n\t\t\tawaitingDragStarted = true;\r\n\r\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\r\n\t\t\teventer.on(document, 'selectstart', _this);\r\n\t\t\tif (Safari) {\r\n\t\t\t\tstyler.css(document.body, 'user-select', 'none');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\r\n\t\t_onDragOver: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\ttarget = evt.target,\r\n\t\t\t\tdragRect,\r\n\t\t\t\ttargetRect,\r\n\t\t\t\trevert,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tgroup = options.group,\r\n\t\t\t\tactiveSortable = dnd.active,\r\n\t\t\t\tisOwner = (activeGroup === group),\r\n\t\t\t\tcanSort = options.sort,\r\n\t\t\t\t_this = this,\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\tputSortable = dnd.putSortable;\r\n\r\n\t\t\tif (_silent) return;\r\n\r\n\t\t\t// Return invocation when dragEl is inserted (or completed)\r\n\t\t\tfunction completed(insertion) {\r\n\t\t\t\tif (insertion) {\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(_this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (activeSortable) {\r\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (putSortable !== _this && _this !== dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable = _this;\r\n\t\t\t\t\t} else if (_this === dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Animation\r\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\r\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\r\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\r\n\t\t\t\t\tlastTarget = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// no bubbling and not fallback\r\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\r\n\t\t\t\t\t_this._handleAutoScroll(evt);\r\n\t\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(evt);\r\n\r\n\t\t\t\t\t// Do not detect for empty insert if already inserted\r\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Call when dragEl has been inserted\r\n\t\t\tfunction changed() {\r\n\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, containers._index(dragEl), oldDraggableIndex, containers._index(dragEl, options.draggable), evt);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\r\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\r\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\r\n\t\t\t */\r\n\t\t\tfunction _getInsertDirection(target) {\r\n\t\t\t\tvar dragElIndex = containers._index(dragEl),\r\n\t\t\t\t\ttargetIndex = containers._index(target);\r\n\r\n\t\t\t\tif (dragElIndex < targetIndex) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\r\n\t\t\t\tvar targetRect = geom.boundingRect(target),\r\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\r\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\r\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\r\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\r\n\t\t\t\t\tinvert = false;\r\n\r\n\r\n\t\t\t\tif (!invertSwap) {\r\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\r\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\r\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\r\n\t\t\t\t\t\t\t(lastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\r\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\r\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\r\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\r\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinvert = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Regular\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\r\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinvert = invert || invertSwap;\r\n\r\n\t\t\t\tif (invert) {\r\n\t\t\t\t\t// Invert of regular\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\r\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (evt.preventDefault !== void 0) {\r\n\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tmoved = true;\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\r\n\r\n\t\t\t// target is dragEl or target is animated\r\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\r\n\t\t\t\treturn completed(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (target !== dragEl) {\r\n\t\t\t\tignoreNextClick = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (activeSortable && !options.disabled &&\r\n\t\t\t\t(isOwner\r\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\tputSortable === this ||\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\r\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tvar axis = this._getDirection(evt, target);\r\n\r\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\r\n\r\n\t\t\t\tif (revert) {\r\n\t\t\t\t\tthis._hideClone();\r\n\t\t\t\t\tparentEl = rootEl; // actualization\r\n\r\n\t\t\t\t\tif (nextEl) {\r\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trootEl.appendChild(dragEl);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn completed(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar elLastChild = _lastChild(el);\r\n\r\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\r\n\t\t\t\t\t// assign target only if condition is true\r\n\t\t\t\t\tif (elLastChild && el === evt.target) {\r\n\t\t\t\t\t\ttarget = elLastChild;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\r\n\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\tparentEl = el; // actualization\r\n\t\t\t\t\t\trealDragElRect = null;\r\n\r\n\t\t\t\t\t\tchanged();\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\r\n\t\t\t\t\tvar direction = 0,\r\n\t\t\t\t\t\ttargetBeforeFirstSwap,\r\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\r\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\r\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\r\n\t\t\t\t\t\tscrolledPastTop = autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\r\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\r\n\r\n\r\n\t\t\t\t\tif (lastTarget !== target) {\r\n\t\t\t\t\t\tlastMode = null;\r\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\r\n\t\t\t\t\t\tpastFirstInvertThresh = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tcontainers._isElInRowColumn(dragEl, target, axis) && aligned ||\r\n\t\t\t\t\t\tdifferentLevel ||\r\n\t\t\t\t\t\tscrolledPastTop ||\r\n\t\t\t\t\t\toptions.invertSwap ||\r\n\t\t\t\t\t\tlastMode === 'insert' ||\r\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\r\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\r\n\t\t\t\t\t\tlastMode === 'swap'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// New target that we will be inside\r\n\t\t\t\t\t\tif (lastMode !== 'swap') {\r\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\r\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\r\n\t\t\t\t\t\t\tisCircumstantialInvert,\r\n\t\t\t\t\t\t\tlastTarget === target);\r\n\t\t\t\t\t\tlastMode = 'swap';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Insert at position\r\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\r\n\t\t\t\t\t\tlastMode = 'insert';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (direction === 0) return completed(false);\r\n\r\n\t\t\t\t\trealDragElRect = null;\r\n\t\t\t\t\tlastTarget = target;\r\n\r\n\t\t\t\t\tlastDirection = direction;\r\n\r\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\r\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\r\n\t\t\t\t\t\tafter = false;\r\n\r\n\t\t\t\t\tafter = direction === 1;\r\n\r\n\t\t\t\t\tvar moveVector = dnd._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\r\n\r\n\t\t\t\t\tif (moveVector !== false) {\r\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\r\n\t\t\t\t\t\t\tafter = (moveVector === 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_silent = true;\r\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\r\n\r\n\t\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (after && !nextSibling) {\r\n\t\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\r\n\t\t\t\t\t\tif (scrolledPastTop) {\r\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\r\n\r\n\t\t\t\t\t\t// must be done before animation\r\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\r\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchanged();\r\n\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el.contains(dragEl)) {\r\n\t\t\t\t\treturn completed(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onDrop: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\tputSortable = dnd.putSortable;\r\n\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tscrolling = false;\r\n\t\t\tisCircumstantialInvert = false;\r\n\t\t\tpastFirstInvertThresh = false;\r\n\r\n\t\t\tclearInterval(this._loopId);\r\n\r\n\t\t\tclearInterval(pointerElemChangedInterval);\r\n\t\t\t\r\n\t\t\tautoscroll._clearAutoScrolls();\r\n\t\t\tautoscroll._cancelThrottle();\r\n\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\t_cancelNextTick(this._cloneId);\r\n\t\t\t_cancelNextTick(this._dragStartId);\r\n\r\n\t\t\t// Unbind events\r\n\t\t\teventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(document, 'drop', this);\r\n\t\t\t\teventer.off(el, 'dragstart', this._onDragStart);\r\n\t\t\t\teventer.off(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\teventer.off(document, 'dragover', dnd._checkAlignment);\r\n\t\t\t}\r\n\r\n\t\t\tif (Safari) {\r\n\t\t\t\tstyler.css(document.body, 'user-select', '');\r\n\t\t\t}\r\n\r\n\t\t\tthis._offMoveEvents();\r\n\t\t\tthis._offUpEvents();\r\n\r\n\t\t\tif (evt) {\r\n\t\t\t\tif (moved) {\r\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdnd.ghostEl && dnd.ghostEl.parentNode && dnd.ghostEl.parentNode.removeChild(dnd.ghostEl);\r\n\r\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\r\n\t\t\t\t\t// Remove clone\r\n\t\t\t\t\tdnd.cloneEl && dnd.cloneEl.parentNode && dnd.cloneEl.parentNode.removeChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dragEl) {\r\n\t\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\t\teventer.off(dragEl, 'dragend', this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_disableDraggable(dragEl);\r\n\t\t\t\t\tdragEl.style['will-change'] = '';\r\n\r\n\t\t\t\t\t// Remove class's\r\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\r\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\r\n\r\n\t\t\t\t\t// Drag stop event\r\n\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\r\n\r\n\t\t\t\t\tif (rootEl !== parentEl) {\r\n\t\t\t\t\t\tnewIndex = containers._index(dragEl);\r\n\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t// Add event\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// Remove event\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// drag from one list and drop into another\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tputSortable && putSortable.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\r\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\t\t\t\t\tnewIndex = containers._index(dragEl);\r\n\t\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t\t// drag & drop within the same list\r\n\t\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd.active) {\r\n\t\t\t\t\t\t/* jshint eqnull:true */\r\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\r\n\t\t\t\t\t\t\tnewIndex = oldIndex;\r\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t// Save sorting\r\n\t\t\t\t\t\tthis.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis._nulling();\r\n\t\t},\r\n\r\n\t\t_nulling: function() {\r\n\t\t\trootEl =\r\n\t\t\tdnd.dragEl =\r\n\t\t\tparentEl =\r\n\t\t\tdnd.ghostEl =\r\n\t\t\tnextEl =\r\n\t\t\tdnd.cloneEl =\r\n\t\t\tlastDownEl =\r\n\r\n\t\t\tscrollEl =\r\n\t\t\tautoscroll.scrollParentEl =\r\n\t\t\tautoscroll.autoScrolls.length =\r\n\r\n\t\t\tpointerElemChangedInterval =\r\n\t\t\tlastPointerElemX =\r\n\t\t\tlastPointerElemY =\r\n\r\n\t\t\ttapEvt =\r\n\t\t\tdnd.touchEvt =\r\n\r\n\t\t\tmoved =\r\n\t\t\tnewIndex =\r\n\t\t\toldIndex =\r\n\r\n\t\t\tlastTarget =\r\n\t\t\tlastDirection =\r\n\r\n\t\t\trealDragElRect =\r\n\r\n\t\t\tdnd.putSortable =\r\n\t\t\tactiveGroup =\r\n\t\t\tdnd.active = null;\r\n\r\n\t\t\tsavedInputChecked.forEach(function (el) {\r\n\t\t\t\tel.checked = true;\r\n\t\t\t});\r\n\r\n\t\t\tsavedInputChecked.length = 0;\r\n\t\t},\r\n\r\n\t\thandleEvent: function (/**Event*/evt) {\r\n\t\t\tswitch (evt.type) {\r\n\t\t\t\tcase 'drop':\r\n\t\t\t\tcase 'dragend':\r\n\t\t\t\t\tthis._onDrop(evt);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'dragenter':\r\n\t\t\t\tcase 'dragover':\r\n\t\t\t\t\tif (dnd.dragEl) {\r\n\t\t\t\t\t\tthis._onDragOver(evt);\r\n\t\t\t\t\t\t_globalDragOver(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selectstart':\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Serializes the item into an array of string.\r\n\t\t * @returns {String[]}\r\n\t\t */\r\n\t\ttoArray: function () {\r\n\t\t\tvar order = [],\r\n\t\t\t\tel,\r\n\t\t\t\tchildren = this.el.children,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tn = children.length,\r\n\t\t\t\toptions = this.options;\r\n\r\n\t\t\tfor (; i < n; i++) {\r\n\t\t\t\tel = children[i];\r\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\r\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn order;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Sorts the elements according to the array.\r\n\t\t * @param  {String[]}  order  order of the items\r\n\t\t */\r\n\t\tsort: function (order) {\r\n\t\t\tvar items = {}, rootEl = this.el;\r\n\r\n\t\t\tthis.toArray().forEach(function (id, i) {\r\n\t\t\t\tvar el = rootEl.children[i];\r\n\r\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\r\n\t\t\t\t\titems[id] = el;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\torder.forEach(function (id) {\r\n\t\t\t\tif (items[id]) {\r\n\t\t\t\t\trootEl.removeChild(items[id]);\r\n\t\t\t\t\trootEl.appendChild(items[id]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Save the current sorting\r\n\t\t */\r\n\t\tsave: function () {\r\n\t\t\tvar store = this.options.store;\r\n\t\t\tstore && store.set && store.set(this);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n\t\t * @param   {HTMLElement}  el\r\n\t\t * @param   {String}       [selector]  default: `options.draggable`\r\n\t\t * @returns {HTMLElement|null}\r\n\t\t */\r\n\t\tclosest: function (el, selector) {\r\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set/get option\r\n\t\t * @param   {string} name\r\n\t\t * @param   {*}      [value]\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\toption: function (name, value) {\r\n\t\t\tvar options = this.options;\r\n\r\n\t\t\tif (value === void 0) {\r\n\t\t\t\treturn options[name];\r\n\t\t\t} else {\r\n\t\t\t\toptions[name] = value;\r\n\r\n\t\t\t\tif (name === 'group') {\r\n\t\t\t\t\t_prepareGroup(options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Destroy\r\n\t\t */\r\n\t\tdestroy: function () {\r\n\t\t\tvar el = this.el;\r\n\r\n\t\t\tel[dnd.expando] = null;\r\n\r\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(el, 'dragover', this);\r\n\t\t\t\teventer.off(el, 'dragenter', this);\r\n\t\t\t}\r\n\t\t\t// Remove draggable attributes\r\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\r\n\t\t\t\tel.removeAttribute('draggable');\r\n\t\t\t});\r\n\r\n\t\t\tthis._onDrop();\r\n\r\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\r\n\r\n\t\t\tthis.el = el = null;\r\n\t\t},\r\n\r\n\t\t_hideClone: function() {\r\n\t\t\tif (!dnd.cloneEl.cloneHidden) {\r\n\t\t\t\tstyler.css(dnd.cloneEl, 'display', 'none');\r\n\t\t\t\tdnd.cloneEl.cloneHidden = true;\r\n\t\t\t\tif (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\r\n\t\t\t\t\tdnd.cloneEl.parentNode.removeChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_showClone: function(putSortable) {\r\n\r\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\r\n\t\t\t\tthis._hideClone();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (dnd.cloneEl.cloneHidden) {\r\n\t\t\t\t// show clone at dragEl or original position\r\n\t\t\t\tif (rootEl.contains(dnd.dragEl) && !this.options.group.revertClone) {\r\n\t\t\t\t\trootEl.insertBefore(dnd.cloneEl, dnd.dragEl);\r\n\t\t\t\t} else if (nextEl) {\r\n\t\t\t\t\trootEl.insertBefore(dnd.cloneEl, nextEl);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trootEl.appendChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.options.group.revertClone) {\r\n\t\t\t\t\tthis._animate(dnd.dragEl, dnd.cloneEl);\r\n\t\t\t\t}\r\n\t\t\t\tstyler.css(dnd.cloneEl, 'display', '');\r\n\t\t\t\tdnd.cloneEl.cloneHidden = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n    function _globalDragOver(/**Event*/evt) {\r\n\t\tif (evt.dataTransfer) {\r\n\t\t\tevt.dataTransfer.dropEffect = 'move';\r\n\t\t}\r\n\t\tevt.cancelable && evt.preventDefault();\r\n\t}\r\n\r\n\tfunction _disableDraggable(el) {\r\n\t\tel.draggable = false;\r\n\t}\r\n\r\n\tfunction _unsilent() {\r\n\t\t_silent = false;\r\n\t}\r\n\r\n\r\n\t// Export utils\r\n\tSortable.utils = {\r\n\t\ton: eventer.on,\r\n\t\toff: eventer.off,\r\n\t\tcss: styler.css,\r\n\t\tfind: _find,\r\n\t\tis: function (el, selector) {\r\n\t\t\treturn !!finder.closest(el, selector, el, false);\r\n\t\t},\r\n\t\textend: langx.mixin,\r\n\t\tthrottle: autoscroll._throttle,\r\n\t\tclosest: finder.closest,\r\n\t\ttoggleClass: styler.toggleClass,\r\n\t\tclone: \tfunction (el) {\r\n\t\t\t\t\treturn noder.clone(el,true);\r\n\t\t\t\t},\r\n\t\tindex: containers._index,\r\n\t\tnextTick: _nextTick,\r\n\t\tcancelNextTick: _cancelNextTick,\r\n\t\t//detectDirection: _detectDirection,\r\n\t\tgetChild: function(el, childNum, options) {\r\n\t\t\toptions.excluding = [];\r\n\t\t\toptions.closesting = options.draggable;\r\n\t\t\treturn finder.childAt(el,childNum,options);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Create sortable instance\r\n\t * @param {HTMLElement}  el\r\n\t * @param {Object}      [options]\r\n\t */\r\n\tSortable.create = function (el, options) {\r\n\t\treturn new Sortable(el, options);\r\n\t};\r\n\r\n\r\n\t// Export\r\n\tSortable.version = '1.9.0';\r\n\r\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\r\n});"]}