{"version":3,"sources":["dnd.js"],"names":["define","skylark","langx","isBrowser","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","scrollingElement","oriented","touch","autoscroll","MousedDragDrop","expando","Date","getTime","dnd","log","category","message","append","activeGroup","active","putSortable","sortables","cloneEl","ignoreNextClick","awaitingDragStarted","touchEvt","prepare","draggable","this","nativeDraggable","_fallbacker","start","event","ownerDocument","elm","on","nearestEmptyInsertDetectEvent","document","_handleAutoScroll","_checkAlignment","over","evt","end","dropped","off","_onTouchMove","_nulling","dragEl","nearest","_detectNearestEmptySortable","clientX","clientY","i","target","rootEl","preventDefault","stopPropagation","_onDragOver","x","y","length","lastChild","ignoreHidden","excluding","ghostEl","rect","boundingRect","threshold","options","emptyInsertThreshold","insideHorizontally","left","right","insideVertically","top","bottom","parentNode","_computeIsAligned","_disableDraggable","el","fallback","scroll","parentEl","nextEl","tapEvt","oldIndex"],"mappings":"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","file":"../dnd.js","sourcesContent":["define([\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./fallback/MousedDragDrop\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll,\r\n\tMousedDragDrop\r\n){\r\n    'use strict';\r\n\r\n\r\n\tvar expando = 'Sortable' + (new Date).getTime();\r\n\r\n\r\n\tvar dnd = {\r\n\t\tlog : function log(category,message) {\r\n\t\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\r\n\t\t},\r\n\r\n\t\texpando,\r\n\r\n\t\tactiveGroup : null,\r\n\t\tactive : null,\r\n\t\tputSortable : null,\r\n\t\tsortables : [],\r\n\r\n\r\n\t\tcloneEl : null,\r\n\r\n\t\tignoreNextClick : false,\r\n        awaitingDragStarted : false,\r\n\r\n\r\n\t\ttouchEvt : null,\r\n\r\n        prepare: function(draggable) {\r\n        \tthis.draggable = draggable;\r\n            if (!draggable.nativeDraggable) {\r\n            \tthis._fallbacker = new MousedDragDrop(this);\r\n            }\r\n\r\n\t\t},\r\n\r\n        start: function(draggable, event) {\r\n        \tthis.draggable = draggable;\r\n\r\n\r\n\t\t\tvar el = draggable.elm(),\r\n\t\t\t\townerDocument = el.ownerDocument;\r\n\r\n\r\n\t\t\teventer.on(ownerDocument, 'dragover', this.nearestEmptyInsertDetectEvent);\r\n\t\t\t///eventer.on(ownerDocument, 'mousemove', this.nearestEmptyInsertDetectEvent);\r\n\t\t\t///eventer.on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\r\n\r\n\t\t\tif (this.draggable.nativeDraggable) {\r\n                eventer.on(document, 'dragover', this._handleAutoScroll);\r\n                eventer.on(document, 'dragover', this._checkAlignment);\r\n            } else {\r\n                eventer.on(document, 'mousemove', this._handleAutoScroll);\r\n            }\r\n        },\r\n\r\n        over : function(evt) {\r\n\t\t\tthis._handleAutoScroll(evt);\r\n        },\r\n\r\n        end: function(dropped) {\r\n\t  \t\teventer.off(document, 'dragover', this.nearestEmptyInsertDetectEvent);\r\n\t  \t\t///eventer.off(document, 'mousemove', this.nearestEmptyInsertDetectEvent);\r\n\t\r\n\t\t\tif (this.draggable.nativeDraggable) {\r\n\t\t\t\teventer.off(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\teventer.off(document, 'dragover', this._checkAlignment);\r\n\t\t\t} else {\r\n\t\t        // Unbind events\r\n\t            eventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\t\t\t}\r\n\r\n        \tthis._nulling();\r\n \t\t},\r\n\r\n\t\tnearestEmptyInsertDetectEvent :function (evt) {\r\n\t\t\tif (dnd.draggable.dragEl) {\r\n\t\t\t\t///evt = evt.touches ? evt.touches[0] : evt;\r\n\t\t\t\tvar nearest = dnd._detectNearestEmptySortable(evt.clientX, evt.clientY);\r\n\r\n\t\t\t\tif (nearest) {\r\n\t\t\t\t\t// Create imitation event\r\n\t\t\t\t\tvar event = {};\r\n\t\t\t\t\tfor (var i in evt) {\r\n\t\t\t\t\t\tevent[i] = evt[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.target = event.rootEl = nearest;\r\n\t\t\t\t\tevent.preventDefault = void 0;\r\n\t\t\t\t\tevent.stopPropagation = void 0;\r\n\t\t\t\t\tnearest[expando]._onDragOver(event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\t/**\r\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n\t\t * @param  {Number} x      X position\r\n\t\t * @param  {Number} y      Y position\r\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\r\n\t\t */\r\n\t\t_detectNearestEmptySortable : function(x, y) {\r\n\t\t\tvar sortables = this.sortables;\r\n\r\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\r\n\t\t\t\tif (finder.lastChild(sortables[i],{ignoreHidden : true,excluding : [this.ghostEl]})) continue;\r\n\r\n\t\t\t\tvar rect = geom.boundingRect(sortables[i]),\r\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\r\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\r\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\r\n\r\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\r\n\t\t\t\t\treturn sortables[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_checkAlignment : function(evt) {\r\n\t\t\tif (!dnd.draggable.dragEl || !dnd.draggable.dragEl.parentNode) return;\r\n\t\t\tdnd.draggable._computeIsAligned(evt);\r\n\t\t},\r\n\r\n\r\n\t\t_disableDraggable : function (el) {\r\n\t\t\tel.draggable = false;\r\n\t\t},\r\n\r\n\t\t_handleAutoScroll: function(evt, fallback) {\r\n\r\n\t\t\tif (!dnd.draggable.dragEl || !dnd.draggable.options.scroll) return;\r\n\r\n\t\t\treturn autoscroll._handleAutoScroll(evt,dnd.draggable.options,fallback,expando);\r\n\t\t},\r\n\r\n\r\n\t\t_nulling: function() {\r\n\r\n\t\t\tdnd.rootEl =\r\n\t\t\tdnd.parentEl =\r\n\t\t\t//ghoster.ghostEl =\r\n\t\t\tdnd.nextEl =\r\n\t\t\tdnd.cloneEl =\r\n\t\t\t///lastDownEl =\r\n\r\n\r\n\t\t\tdnd.tapEvt =\r\n\t\t\tdnd.touchEvt =\r\n\r\n\t\t\tdnd.oldIndex =\r\n\r\n\t\t\tdnd.putSortable =\r\n\t\t\tdnd.activeGroup =\r\n\t\t\tdnd.active = null;\r\n\r\n\t\t}\r\n\r\n\r\n\t};\r\n\r\n\r\n\treturn dnd;\r\n\t\r\n});"]}