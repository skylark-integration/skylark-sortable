{"version":3,"sources":["skylark-sortable.js"],"names":["define","hoster","detects","browser","window","document","ua","toLowerCase","match","exec","indexOf","platform_match","matched","version","versionNumber","platform","parseInt","android","bb","blackberry","ipad","iphone","ipod","kindle","playbook","silk","mobile","cros","mac","linux","win","desktop","chrome","opr","safari","webkit","rv","iemobile","edge","name","uaMatch","navigator","userAgent","detectBrowser","undefined","isBrowser","geom","styler","finder","Orientation","el","options","elCSS","css","elWidth","contentRect","width","child1","childAt","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginSize","secondChildWidth","display","flexDirection","Vertical","Horizontal","gridTemplateColumns","split","length","float","touchingSideChild2","clear","langx","eventer","noder","$","plugins","scrolls","AutoScroll","Plugin","inherit","klassName","pluginName","scrollSensitivity","scrollSpeed","bubbleScroll","_construct","rootEl","this","overrided","autoScrolls","_autoScroll","debounce","x","y","sens","speed","winScroller","scrollingElement","scrollEl","scrollableParent","layersOut","currentParent","scrollWidth","scrollHeight","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","rect","boundingRect","top","bottom","left","right","height","scrollLeft","scrollTop","overflowX","overflowY","Math","abs","i","clearInterval","pid","scrollThisInstance","setInterval","scrollOffsetY","layer","scrollOffsetX","scrollBy","bind","destroy","_clearAutoScrolls","_cancelThrottle","_nulling","handle","_throttleTimeout","forEach","autoScroll","cancel","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","scrollParentEl","register","skylark","isMobile","transforms","oriented","touch","_getRect","adjustForTransform","container","adjustForFixed","getBoundingClientRect","matrix","scaleX","a","scaleY","d","ghoster","ghostEl","PositionGhostAbsolutely","apple","device","ghostRelativeParent","ghostRelativeParentInitialScroll","_appendGhost","dragEl","parentNode","ghostRelativeParentRect","body","documentElement","offsets","scrollOffset","offsetLeft","offsetTop","cloneNode","toggleClass","ghostClass","fallbackClass","dragClass","box-sizing","margin","opacity","position","zIndex","pointerEvents","appendChild","getRelativeScrollOffset","autoscroll","_getRelativeScrollOffset","remove","MousedDragDrop","Emitter","dnd","$doc","listenTo","_onMouseMove","_onMouseUp","evt","putSortable","droppable","_onDrop","dragging","_onDragEnd","draggable","tapEvt","fallbackTolerance","fallbackOffset","relativeScrollOffset","dx","clientX","dy","clientY","translate3d","touches","_dragStarted","awaitingDragStarted","min","_lastX","_lastY","_onDragStart","_loopId","_emulateDragOver","_handleAutoScroll","touchEvt","preventDefault","forAutoScroll","target","elementFromPoint","parent","shadowRoot","expando","_onDragOver","fallback","active","scroll","ogElemScroller","newElem","autoscroller","unlistenTo","Date","getTime","log","category","message","append","activeGroup","sortables","cloneEl","nextEl","parentEl","oldIndex","prepare","sortable","nativeDraggable","on","e","_fallbacker","selection","defer","empty","getSelection","removeAllRanges","err","start","event","over","end","dropped","nearestEmptyInsertDetectEvent","nearest","_detectNearestEmptySortable","stopPropagation","lastChild","ignoreHidden","excluding","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_disableDraggable","lastDownEl","savedInputChecked","_index","selector","index","nodeName","toUpperCase","matches","[object Object]","_elm","elm","mousy","_onMouseDown","startIndex","startDraggableIndex","preventOnFilter","type","originalTarget","path","composedPath","filter","root","inputs","getElementsByTagName","idx","checked","push","_saveInputCheckedState","test","button","disabled","isContentEditable","closest","tagName","className","call","_dispatchEvent","cancelable","some","criteria","trim","ownerDocument","oldDraggableIndex","nextSibling","group","style","transition","transform","ignore","ctx","iterator","list","n","_find","chosenClass","_this","dataTransfer","clone","_cloneId","removeCloneOnHide","insertBefore","effectAllowed","setData","_dragStartId","clearTimeout","_dragStartTimer","off","moved","pastFirstInvertThresh","isCircumstantialInvert","_silent","_isScrolledPast","side","elSide","parentSide","_unsilent","fromEl","toEl","dragRect","targetEl","targetRect","originalEvt","willInsertAfter","retVal","onMoveFn","onMove","create","to","from","dragged","draggedRect","related","relatedRect","originalEvent","dispatchEvent","revert","lastMode","lastTarget","lastDirection","targetMoveDistance","activeSortable","isOwner","canSort","sort","contains","animated","completed","lastPutMode","checkPull","checkPut","axis","_getDirection","_hideClone","elLastChild","_lastChild","elRect","mouseOnAxis","mouseOnOppAxis","targetS2","targetS1Opp","targetS2Opp","_ghostIsLast","_showClone","_onMove","changed","targetBeforeFirstSwap","direction","aligned","sortableMouseAligned","differentLevel","side1","scrolledPastTop","scrollBefore","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_isElInRowColumn","invertSwap","swapThreshold","invertedSwapThreshold","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","setTimeout","insertion","_animate","dragoverBubble","dragElIndex","targetIndex","newIndex","newDraggableIndex","_offUpEvents","dropBubble","save","dropEffect","_globalDragOver","Draggable","Droppable","supportDraggable","Polymer","ie","firefox","createElement","_prepareGroup","support","cssPointerEvents","toFn","value","pull","sameGroup","otherGroup","join","originalGroup","put","revertClone","Sortable","store","mixin","animation","easing","textContent","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","fallbackOnBody","forceFallback","fn","charAt","get","prevRect","ms","currentRect","nodeType","reflow","cloneHidden","show","onName","substr","item","pullMode","toArray","order","children","getAttribute","generateId","items","id","removeChild","set","option","_onTapStart","Array","prototype","querySelectorAll","removeAttribute","splice","attach","utils","is","extend","throttle","nextTick","cancelNextTick","stop","getChild","childNum","closesting","main"],"mappings":"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","file":"../skylark-sortable.js","sourcesContent":["define('skylark-langx-hoster/detects/browser',[\r\n    \"../hoster\"\r\n],function(hoster){\r\n\t//refer : https://github.com/gabceb/jquery-browser-plugin\r\n\r\n\tfunction detectBrowser() {\r\n\r\n\t\tfunction uaMatch( ua ) {\r\n\t\t\tua = ua.toLowerCase();\r\n\r\n\t\t\tvar match = /(edge)\\/([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opr)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(iemobile)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"trident\") >= 0 && /(rv)(?::| )([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar platform_match = /(ipad)/.exec( ua ) ||\r\n\t\t\t    /(ipod)/.exec( ua ) ||\r\n\t\t\t    /(windows phone)/.exec( ua ) ||\r\n\t\t\t    /(iphone)/.exec( ua ) ||\r\n\t\t\t    /(kindle)/.exec( ua ) ||\r\n\t\t\t    /(silk)/.exec( ua ) ||\r\n\t\t\t    /(android)/.exec( ua ) ||\r\n\t\t\t    /(win)/.exec( ua ) ||\r\n\t\t\t    /(mac)/.exec( ua ) ||\r\n\t\t\t    /(linux)/.exec( ua ) ||\r\n\t\t\t    /(cros)/.exec( ua ) ||\r\n\t\t\t    /(playbook)/.exec( ua ) ||\r\n\t\t\t    /(bb)/.exec( ua ) ||\r\n\t\t\t    /(blackberry)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar browser = {},\r\n\t\t\t    matched = {\r\n\t\t\t      browser: match[ 5 ] || match[ 3 ] || match[ 1 ] || \"\",\r\n\t\t\t      version: match[ 2 ] || match[ 4 ] || \"0\",\r\n\t\t\t      versionNumber: match[ 4 ] || match[ 2 ] || \"0\",\r\n\t\t\t      platform: platform_match[ 0 ] || \"\"\r\n\t\t\t    };\r\n\r\n\t\t\tif ( matched.browser ) {\r\n\t\t\t\tbrowser[ matched.browser ] = true;\r\n\t\t\t  \tbrowser.version = matched.version;\r\n\t\t\t  \tbrowser.versionNumber = parseInt(matched.versionNumber, 10);\r\n\t\t\t}\r\n\r\n\t\t\tif ( matched.platform ) {\r\n\t\t\t \tbrowser[ matched.platform ] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered mobile platforms, meaning they run a mobile browser\r\n\t\t\tif ( browser.android || browser.bb || browser.blackberry || browser.ipad || browser.iphone ||\r\n\t\t\t\tbrowser.ipod || browser.kindle || browser.playbook || browser.silk || browser[ \"windows phone\" ]) {\r\n\t\t\t\tbrowser.mobile = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered desktop platforms, meaning they run a desktop browser\r\n\t\t\tif ( browser.cros || browser.mac || browser.linux || browser.win ) {\r\n\t\t\t\tbrowser.desktop = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Chrome, Opera 15+ and Safari are webkit based browsers\r\n\t\t\tif ( browser.chrome || browser.opr || browser.safari ) {\r\n\t\t\t\tbrowser.webkit = true;\r\n\t\t\t}\r\n\r\n\t\t\t// IE11 has a new token so we will assign it msie to avoid breaking changes\r\n\t\t\tif ( browser.rv || browser.iemobile) {\r\n\t\t\t  var ie = \"ie\";\r\n\r\n\t\t\t  matched.browser = ie;\r\n\t\t\t  browser[ie] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Edge is officially known as Microsoft Edge, so rewrite the key to match\r\n\t\t\tif ( browser.edge ) {\r\n\t\t\t  delete browser.edge;\r\n\t\t\t  var msedge = \"edge\";\r\n\r\n\t\t\t  matched.browser = msedge;\r\n\t\t\t  browser[msedge] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Blackberry browsers are marked as Safari on BlackBerry\r\n\t\t\tif ( browser.safari && browser.blackberry ) {\r\n\t\t\t  var blackberry = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = blackberry;\r\n\t\t\t  browser[blackberry] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Playbook browsers are marked as Safari on Playbook\r\n\t\t\tif ( browser.safari && browser.playbook ) {\r\n\t\t\t  var playbook = \"playbook\";\r\n\r\n\t\t\t  matched.browser = playbook;\r\n\t\t\t  browser[playbook] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// BB10 is a newer OS version of BlackBerry\r\n\t\t\tif ( browser.bb ) {\r\n\t\t\t  var bb = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = bb;\r\n\t\t\t  browser[bb] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 15+ are identified as opr\r\n\t\t\tif ( browser.opr ) {\r\n\t\t\t  var opera = \"opera\";\r\n\r\n\t\t\t  matched.browser = opera;\r\n\t\t\t  browser[opera] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Stock Android browsers are marked as Safari on Android.\r\n\t\t\tif ( browser.safari && browser.android ) {\r\n\t\t\t  var android = \"android\";\r\n\r\n\t\t\t  matched.browser = android;\r\n\t\t\t  browser[android] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Kindle browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.kindle ) {\r\n\t\t\t  var kindle = \"kindle\";\r\n\r\n\t\t\t  matched.browser = kindle;\r\n\t\t\t  browser[kindle] = true;\r\n\t\t\t}\r\n\r\n\t\t\t // Kindle Silk browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.silk ) {\r\n\t\t\t  var silk = \"silk\";\r\n\r\n\t\t\t  matched.browser = silk;\r\n\t\t\t  browser[silk] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Assign the name and platform variable\r\n\t\t\tbrowser.name = matched.browser;\r\n\t\t\tbrowser.platform = matched.platform;\r\n\t\t\treturn browser;\r\n\t\t}\r\n\r\n\r\n\t    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\n\r\n\t    if (isBrowser) {\r\n\t\t    return uaMatch( navigator.userAgent );\r\n\t    } else {\r\n\t    \treturn null;\r\n\t    }\r\n\t}\r\n\r\n\r\n\treturn hoster.detects.browser = detectBrowser;\r\n});\ndefine('skylark-langx-hoster/is-browser',[\r\n    \"./hoster\",\r\n    \"./detects/browser\"\r\n],function(hoster,detectBrowser){\r\n\tif (hoster.isBrowser == undefined) {\r\n\t\thoster.isBrowser = detectBrowser();\r\n\t}\r\n\r\n    return hoster.isBrowser;\r\n});\r\n\ndefine('skylark-domx-layouts/oriented',[\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-finder\",\n\t\"./Orientation\"\n],function(\n\tgeom,\n\tstyler,\n\tfinder,\n\tOrientation\n){\n\n\t/**\n\t * Detects children orientation.\n\t */\n\tfunction oriented(el, options) {\n\t\tvar elCSS = styler.css(el),\n\n\t\t\telWidth = geom.contentRect(el).width,\n\n\t\t\tchild1 = finder.childAt(el, 0, options),\n\t\t\tchild2 = finder.childAt(el, 1, options),\n\t\t\tfirstChildCSS = child1 && styler.css(child1),\n\t\t\tsecondChildCSS = child2 && styler.css(child2),\n\n\t\t\tfirstChildWidth = child1 && geom.marginSize(child1).width,\n\t\t\tsecondChildWidth = child2 && geom.marginSize(child2).width;\n\n\t\tif (elCSS.display === 'flex') {\n\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\n\t\t\t? Orientation.Vertical : Orientation.Horizontal;\n\t\t}\n\n\t\tif (elCSS.display === 'grid') {\n\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? Orientation.Vertical : Orientation.Horizontal;\n\t\t}\n\n\t\tif (child1 && firstChildCSS.float !== 'none') {\n\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\n\n\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\n\t\t\t\tOrientation.Vertical : Orientation.Horizontal;\n\t\t}\n\n\t\treturn (child1 &&\n\t\t\t(\n\t\t\t\tfirstChildCSS.display === 'block' ||\n\t\t\t\tfirstChildCSS.display === 'flex' ||\n\t\t\t\tfirstChildCSS.display === 'table' ||\n\t\t\t\tfirstChildCSS.display === 'grid' ||\n\t\t\t\tfirstChildWidth >= elWidth &&\n\t\t\t\telCSS.float === 'none' ||\n\t\t\t\tchild2 &&\n\t\t\t\telCSS.float === 'none' &&\n\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\n\t\t\t) ?\n\t\t\tOrientation.Vertical : Orientation.Horizontal\n\t\t);\n\t}\n\n\treturn oriented;\n});\ndefine('skylark-domx-plugins-scrolls/auto-scroll',[\r\n  \"skylark-langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-finder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-styler\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./scrolls\"\r\n],function(langx,browser,eventer,noder,finder,geom,styler,$,plugins,scrolls){\r\n\r\n  'use strict';\r\n\r\n\t// INFINITE SCROLL CONSTRUCTOR AND PROTOTYPE\r\n\r\n  var AutoScroll = plugins.Plugin.inherit({\r\n        klassName: \"AutoScroll\",\r\n\r\n        pluginName : \"lark.scrolls.autoscroll\",\r\n\r\n        options : {\r\n\t\t\tscrollSensitivity: 30,\r\n\t\t\tscrollSpeed: 10,\r\n\t\t\tbubbleScroll: true\r\n        },\r\n\r\n        _construct : function(rootEl,options) {\r\n\t        this.overrided(rootEl,options);\r\n    \t\tthis.autoScrolls = [];\r\n\r\n\r\n\t\t\tthis._autoScroll = langx.debounce( (x,y) => {\r\n\t\t\t\t///var _this = rootEl ? rootEl[expando] : window,\r\n\t\t\t\tvar\tsens = options.scrollSensitivity,\r\n\t\t\t\t\tspeed = options.scrollSpeed,\r\n\r\n\t\t\t\t\twinScroller = noder.scrollingElement();\r\n\r\n\t\t\t\tthis.scrollEl = finder.scrollableParent(rootEl, true);\r\n\r\n\r\n\t\t\t\tvar layersOut = 0;\r\n\t\t\t\tvar currentParent = this.scrollEl;\r\n\t\t\t\tvar autoScrolls = this.autoScrolls;\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar\tel = currentParent,\r\n\t\t\t\t\t\trect = geom.boundingRect(el),\r\n\r\n\t\t\t\t\t\ttop = rect.top,\r\n\t\t\t\t\t\tbottom = rect.bottom,\r\n\t\t\t\t\t\tleft = rect.left,\r\n\t\t\t\t\t\tright = rect.right,\r\n\r\n\t\t\t\t\t\twidth = rect.width,\r\n\t\t\t\t\t\theight = rect.height,\r\n\r\n\t\t\t\t\t\tscrollWidth,\r\n\t\t\t\t\t\tscrollHeight,\r\n\r\n\t\t\t\t\t\tcss,\r\n\r\n\t\t\t\t\t\tvx,\r\n\t\t\t\t\t\tvy,\r\n\r\n\t\t\t\t\t\tcanScrollX,\r\n\t\t\t\t\t\tcanScrollY,\r\n\r\n\t\t\t\t\t\tscrollPosX,\r\n\t\t\t\t\t\tscrollPosY;\r\n\r\n\r\n\t\t\t\t\tscrollWidth = el.scrollWidth;\r\n\t\t\t\t\tscrollHeight = el.scrollHeight;\r\n\r\n\t\t\t\t\tcss = styler.css(el);\r\n\r\n\t\t\t\t\tscrollPosX = el.scrollLeft;\r\n\t\t\t\t\tscrollPosY = el.scrollTop;\r\n\r\n\t\t\t\t\tif (el === winScroller) {\r\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\r\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\r\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvx = canScrollX && (Math.abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\r\n\r\n\t\t\t\t\tvy = canScrollY && (Math.abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\r\n\r\n\r\n\t\t\t\t\tif (!autoScrolls[layersOut]) {\r\n\t\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\r\n\t\t\t\t\t\t\tif (!autoScrolls[i]) {\r\n\t\t\t\t\t\t\t\tautoScrolls[i] = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\r\n\t\t\t\t\t\tautoScrolls[layersOut].el = el;\r\n\t\t\t\t\t\tautoScrolls[layersOut].vx = vx;\r\n\t\t\t\t\t\tautoScrolls[layersOut].vy = vy;\r\n\r\n\t\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\r\n\r\n\t\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\r\n\t\t\t\t\t\t\tthis.scrollThisInstance = true;\r\n\t\t\t\t\t\t\t/* jshint loopfunc:true */\r\n\t\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\r\n\t\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\r\n\t\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\r\n\t\t\t\t\t\t\t\tgeom.scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\r\n\t\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlayersOut++;\r\n\t\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = finder.scrollableParent(currentParent, false)));\r\n\t\t\t}, 30);\r\n\t\t},\r\n\r\n\t\tdestroy: function () {\r\n\t\t\tthis._clearAutoScrolls();\r\n            this._cancelThrottle();\r\n\t\t\tthis._nulling();\r\n\t\t},\r\n\r\n\r\n\t\thandle : function(x,y) {\r\n\t\t\tthis._throttleTimeout = this._autoScroll(x,y);\r\n\t\t},\r\n\r\n\t\t_clearAutoScrolls : function () {\r\n\t\t\tthis.autoScrolls.forEach(function(autoScroll) {\r\n\t\t\t\tclearInterval(autoScroll.pid);\r\n\t\t\t});\r\n\t\t\tthis.autoScrolls = [];\r\n\t\t},\r\n\r\n\t\t_cancelThrottle : function () {\r\n\t\t\t//clearTimeout(_throttleTimeout);\r\n\t\t\t//_throttleTimeout = void 0;\r\n\t\t\tif (this._throttleTimeout && this._throttleTimeout.cancel) {\r\n\t\t\t\tthis._throttleTimeout.cancel();\r\n\t\t\t\tthis._throttleTimeout = void 0;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\r\n\t\t_nulling : function () {\r\n\r\n\t\t\t\r\n\t\t\tthis.pointerElemChangedInterval = null;\r\n\t\t\tthis.lastPointerElemX = null;\r\n\t\t\tthis.lastPointerElemY = null;\r\n\r\n\t\t\tthis.scrollEl =\r\n\t\t\tthis.scrollParentEl =\r\n\t\t\tthis.autoScrolls.length = null;\r\n\r\n\t\t}\r\n\r\n  });\r\n\r\n\r\n  plugins.register(AutoScroll);\r\n\r\n  return scrolls.AutoScroll = AutoScroll;\t\r\n});\r\n\ndefine('skylark-sortable/fallback/ghoster',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/is-browser\",\n\t\"skylark-langx-hoster/is-mobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-layouts/oriented\",\n\t\"skylark-devices-points/touch\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\toriented,\n\ttouch\n){\n    'use strict';\n\n\t/**\n\t * Returns the \"bounding client rect\" of given element\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\n\t * @return {Object}                        The boundingClientRect of el\n\t */\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\n\t\tif (!el.getBoundingClientRect && el !== window) return;\n\t\tvar {\n\t\t\ttop,\n\t\t\tleft,\n\t\t\tbottom,\n\t\t\tright,\n\t\t\twidth,\n\t\t\theight\n\t\t} = geom.boundingRect(el);\n\t\t\n\t\tif (adjustForTransform && el !== window) {\n\t\t\t// Adjust for scale()\n\t\t\tvar matrix = transforms.matrix(container || el),\n\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\tif (matrix) {\n\t\t\t\ttop /= scaleY;\n\t\t\t\tleft /= scaleX;\n\n\t\t\t\twidth /= scaleX;\n\t\t\t\theight /= scaleY;\n\n\t\t\t\tbottom = top + height;\n\t\t\t\tright = left + width;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\tbottom: bottom,\n\t\t\tright: right,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\n\tvar ghoster = {\n\t\tghostEl : null,\n\n\t\tPositionGhostAbsolutely : isMobile.apple.device, //IOS\n\t\t// For positioning ghost absolutely\n\t\tghostRelativeParent : null,\n\t\tghostRelativeParentInitialScroll : [], // (left, top)\n\n\t\t_appendGhost: function (dragEl,container,options) {\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\n\t\t\t// Not being adjusted for\n\t\t\tvar /// dragEl = dnd.dragEl,\n\t\t\t\tghostEl = this.ghostEl;\n\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar ///container = this.options.fallbackOnBody ? document.body : rootEl,\n\t\t\t\t\trect = _getRect(dragEl, true, container, !this.PositionGhostAbsolutely),\n\t\t\t\t\tcss = styler.css(dragEl);\n\t\t\t\t\t///options = this.options;\n\n\t\t\t\t// Position absolutely\n\t\t\t\tif (this.PositionGhostAbsolutely) {\n\t\t\t\t\t// Get relatively positioned parent\n\t\t\t\t\tvar ghostRelativeParent = this.ghostRelativeParent = container;\n\n\t\t\t\t\twhile (\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'position') === 'static' &&\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'transform') === 'none' &&\n\t\t\t\t\t\tghostRelativeParent !== document\n\t\t\t\t\t) {\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document) {\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\n\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n\t\t\t\t\t\tif (ghostRelativeParent === document) {\n\t\t\t\t\t\t\tghostRelativeParent = this.ghostRelativeParent = noder.scrollingElement();\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tghostRelativeParent = this.ghostRelativeParent = noder.scrollingElement();\n\t\t\t\t\t}\n\t\t\t\t\tvar offsets = geom.scrollOffset(ghostRelativeParent);\n\t\t\t\t\tghostRelativeParentInitialScroll = [offsets.offsetLeft,offsets.offsetTop]\n\t\t\t\t}\n\n\n\t\t\t\tghostEl =this.ghostEl = dragEl.cloneNode(true);\n\n\t\t\t\tstyler.toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\tstyler.toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\tstyler.toggleClass(ghostEl, options.dragClass, true);\n\n\n\t\t\t\tstyler.css(ghostEl, {\n\t\t\t\t\t'box-sizing': 'border-box',\n\t\t\t\t\t'margin': 0,\n\t\t\t\t\t'top': rect.top,\n\t\t\t\t\t'left': rect.left,\n\t\t\t\t\t'width': rect.width,\n\t\t\t\t\t'height': rect.height,\n\t\t\t\t\t'opacity': '0.8',\n\t\t\t\t\t'position': (this.PositionGhostAbsolutely ? 'absolute' : 'fixed'),\n\t\t\t\t\t'zIndex': '100000',\n\t\t\t\t\t'pointerEvents': 'none'\t\n\t\t\t\t});\n\t\t\t\tcontainer.appendChild(ghostEl);\n\t\t\t}\n\t\t},\n\n\t\tgetRelativeScrollOffset : function(){\n\t\t\treturn this.PositionGhostAbsolutely && this.ghostRelativeParent && autoscroll._getRelativeScrollOffset(this.ghostRelativeParent);\n\t\t},\n\n\t\tremove : function() {\n\t\t\tif (this.ghostEl) {\n\t\t\t\tnoder.remove(this.ghostEl);\n\t\t\t} \n\t\t\tthis.ghostEl = null;\n\n\t\t}\n\n\n\t};\n\n\treturn ghoster;\n\t\n});\ndefine('skylark-sortable/fallback/MousedDragDrop',[\n\t\"skylark-langx/langx\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-plugins-scrolls/auto-scroll\",\n\t\"./ghoster\"\n],function(\n\tlangx,\n\t$,\n\teventer,\n\tstyler,\n\tfinder,\n\ttransforms,\n\tAutoScroll,\n\tghoster\n){\n  'use strict';\n\n\n\tvar MousedDragDrop = langx.Emitter.inherit({\n\t\t_construct : function(dnd) {\n\t\t\tthis.dnd = dnd;\n\n\t\t\tvar $doc = $(document);\n\n\t\t\tthis.listenTo($doc,\"mousemove\",this._onMouseMove);\n\t\t\tthis.listenTo($doc,\"mouseup\",this._onMouseUp);\n\n\t\t},\n\n\t\t_onMouseUp : function(evt) {\n\t\t\tvar dnd = this.dnd;\n        \tif (dnd.putSortable) {\n        \t\tdnd.putSortable.droppable._onDrop(evt)\n        \t}\n        \tif (dnd.dragging) {\n        \t\tdnd.dragging._onDragEnd(evt);\n        \t}\n        \tghoster.remove();\n        \tthis.destroy();\n\t\t},\n\n        _onMouseMove: function (/**TouchEvent*/evt) {\n            //dnd.log(\"_onMouseMove\",\"start\");\n            var dnd = this.dnd,\n            \tghostEl = ghoster.ghostEl,\n            \tdraggable = dnd.dragging,\n            \tdragEl = dnd.dragEl,\n            \ttapEvt = dnd.tapEvt;\n            if (tapEvt) {\n                var options =  draggable.options,\n                    fallbackTolerance = options.fallbackTolerance,\n                    fallbackOffset = options.fallbackOffset,\n                    matrix = ghostEl && transforms.matrix(ghostEl),\n                    scaleX = ghostEl && matrix && matrix.a,\n                    scaleY = ghostEl && matrix && matrix.d,\n                    relativeScrollOffset = ghoster.getRelativeScrollOffset(),\n                    dx = ((evt.clientX - tapEvt.clientX)\n                            + fallbackOffset.x) / (scaleX || 1)\n                            + (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\n                    dy = ((evt.clientY - tapEvt.clientY)\n                            + fallbackOffset.y) / (scaleY || 1)\n                            + (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\n                    translate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n                // only set the status to dragging, when we are actually dragging\n                if (!this._dragStarted && !dnd.awaitingDragStarted) {\n                    if (fallbackTolerance &&\n                        Math.min( Math.abs(evt.clientX - draggable._lastX),  Math.abs(evt.clientY - draggable._lastY)) < fallbackTolerance\n                    ) {\n                        return;\n                    }\n                    draggable._onDragStart(evt, true);\n\n                    ghoster._appendGhost(dragEl,document.body,draggable.options);\n\n                \t///dnd.ignoreNextClick = true;\n\n                \tthis._dragStarted = true;\n                \tthis._loopId = setInterval(this._emulateDragOver.bind(this), 50);\n\n                }\n\n                this._handleAutoScroll(evt, true);\n\n                ///moved = true;\n                ///dnd.touchEvt = touch;\n                this.touchEvt = evt;\n\n                if (ghostEl) {\n                    styler.css(ghostEl, 'transform', translate3d);\n\n                }\n\n                //evt.cancelable && evt.preventDefault();\n                evt.preventDefault()\n            }\n        },\n\n\t\t_emulateDragOver: function (forAutoScroll) {\n\t\t\tvar dnd = this.dnd,\n\t\t\t\tdragEl = dnd.dragEl,\n\t\t\t\t///touchEvt = dnd.touchEvt;\n\t\t\t\ttouchEvt = this.touchEvt;\n\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\t//_hideGhostForTarget();\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\tvar parent = target;\n\n\t\t\t\twhile (target && target.shadowRoot) {\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\t\tif (target === parent) break;\n\t\t\t\t\tparent = target;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[dnd.expando]) {\n\t\t\t\t\t\t\tvar inserted;\n\n\t\t\t\t\t\t\tinserted = parent[dnd.expando].droppable._onDragOver({\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//if (inserted && !this.options.dragoverBubble) {\n\t\t\t\t\t\t\tif (inserted) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\t\t\t\t///dragEl.parentNode[dnd.expando]._computeIsAligned(touchEvt);\n\n\t\t\t\t//_unhideGhostForTarget();\n\t\t\t}\n\t\t},\n\n\n\t\t_handleAutoScroll: function(evt, fallback) {\n\t\t\tvar dnd = this.dnd;\n\n\t\t\tif (!dnd.dragEl || !dnd.active.options.scroll) return;\n\n\t\t\t///return autoscroll._handleAutoScroll(evt,dnd.active.options,fallback,dnd.expando);\n\n\n\t\t\tvar x = evt.clientX,\n\t\t\t\ty = evt.clientY,\n\n\t\t\t\telem = document.elementFromPoint(x, y);\n\n\n\t\t\t// Listener for pointer element change\n\t\t\t////var ogElemScroller = finder.scrollableParent(elem, true);\n\t\t\tif (\n\t\t\t\t(\n\t\t\t\t\t!this.pointerElemChangedInterval ||\n\t\t\t\t\tx !== this.lastPointerElemX ||\n\t\t\t\t\ty !== this.lastPointerElemY\n\t\t\t\t)\n\t\t\t) {\n\n\t\t\t\tif (this.pointerElemChangedInterval){\n\t\t\t\t\tclearInterval(this.pointerElemChangedInterval);\t\n\t\t\t\t} \n\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\n  \t\t\t    var ogElemScroller = null ;\n\t\t\t\tthis.pointerElemChangedInterval = setInterval(function() {\n\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\n\t\t\t\t\tvar newElem = finder.scrollableParent(document.elementFromPoint(x, y), true);\n\t\t\t\t\tif (newElem !== ogElemScroller) {\n\t\t\t\t\t\togElemScroller = newElem;\n\t\t\t\t\t\tif (this.autoscroller) {\n\t\t\t\t\t\t\tthis.autoscroller.destroy();\n\t\t\t\t\t\t\tthis.autoscroller = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.autoscroller = new AutoScroll(ogElemScroller,dnd.active.options);\n\t\t\t\t\t\tthis.autoscroller.handle(x,y);\n\t\t\t\t\t}\n\t\t\t\t}, 10);\n\t\t\t\tthis.lastPointerElemX = x;\n\t\t\t\tthis.lastPointerElemY = y;\n\t\t\t}\n    \t},\n\n\t\tdestroy : function() {\n\t\t\tthis.unlistenTo();\n        \tif (this._loopId) {\n        \t\tclearInterval(this._loopId);\n        \t}\n\n\t\t\tif (this.pointerElemChangedInterval){\n\t\t\t\tclearInterval(this.pointerElemChangedInterval);\t\n\t\t\t} \n\n            ///autoscroll._nulling();\n            \n            //autoscroll._clearAutoScrolls();\n            ///autoscroll._cancelThrottle();\n\n            if (this.autoscroller) {\n            \tthis.autoscroller.destroy();\n            \tthis.autoscroller = null;            \t\n            }\n\n            this._dragStarted = false;\n\t\t}\n\t});\n\n\treturn MousedDragDrop;\n});\ndefine('skylark-sortable/dnd',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"./fallback/MousedDragDrop\"\n],function(\n\tskylark,\n\tlangx,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\tMousedDragDrop\n){\n    'use strict';\n\n\n\tvar expando = 'Sortable' + (new Date).getTime();\n\n\n\tvar dnd = {\n\t\tlog : function log(category,message) {\n\t\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\n\t\t},\n\n\t\texpando,\n\n\t\tactiveGroup : null,\n\t\tactive : null,\n\t\tputSortable : null,\n\t\tsortables : [],\n\n\n\t\trootEl : null,\n\t\tdragEl : null,\n\t\tcloneEl : null,\n\t\tnextEl : null,\n\t\tparentEl : null,\n\n\t\toldIndex : null,\n\n\n\t\t///ignoreNextClick : false,\n        awaitingDragStarted : false,\n\t\t///touchEvt : null,\n\n        prepare: function(draggable,dragEl) {\n        \tthis.dragging = draggable;\n        \tthis.active = draggable.sortable;\n\n        \tthis.dragEl = dragEl;\n            if (!this.active.nativeDraggable) {\n            \tthis._fallbacker = new MousedDragDrop(this);\n            } else {\n            \tdragEl.draggable = true;\n                eventer.on(dnd.dragEl, 'dragend', (e)=>{\n                \tthis.dragging._onDragEnd(e)\n                });\n                eventer.on(dnd.dragEl, 'dragstart', (e)=>{\n                \tthis.dragging._onDragStart(e)\n                });\n            }\n\n            dnd.log(\"_triggerDragStart\",\"start\");\n            dnd.log(\"_triggerDragStart\",\"nativeDraggable is \" +  this.active.nativeDraggable);\n\n            try {\n                if (document.selection) {\n                    // Timeout neccessary for IE9\n                    langx.defer(function () {\n                        document.selection.empty();\n                    });\n                } else {\n                    window.getSelection().removeAllRanges();\n                }\n            } catch (err) {\n            }\n\n\t\t},\n\n        start: function(draggable, event) {\n        \tthis.dragging = draggable;\n        \tthis.active = draggable.sortable;\n\n\t\t\t//var el = this.active.elm(),\n\t\t\t//\townerDocument = el.ownerDocument;\n\n\n\t\t\t//eventer.on(ownerDocument, 'dragover', this.nearestEmptyInsertDetectEvent);\n\t\t\t///eventer.on(ownerDocument, 'mousemove', this.nearestEmptyInsertDetectEvent);\n\t\t\t///eventer.on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n\n\t\t\t///if (this.active.nativeDraggable) {\n                ///eventer.on(document, 'dragover', this._handleAutoScroll);\n               // eventer.on(document, 'dragover', this._checkAlignment);\n            //} else {\n                ///eventer.on(document, 'mousemove', this._handleAutoScroll);\n            //}\n        },\n\n        over : function(evt) {\n\t\t\t//this._handleAutoScroll(evt);\n        },\n\n        end: function(dropped) {\n\t  \t\t//eventer.off(document, 'dragover', this.nearestEmptyInsertDetectEvent);\n\t  \t\t///eventer.off(document, 'mousemove', this.nearestEmptyInsertDetectEvent);\n\t\n\t\t\t//if (this.active.nativeDraggable) {\n\t\t\t\t///eventer.off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t//eventer.off(document, 'dragover', this._checkAlignment);\n\t\t\t//} else {\n\t\t        // Unbind events\n\t            ///eventer.off(document, 'mousemove', this._onTouchMove);\n\n\t\t\t//}\n\n        \tthis._nulling();\n \t\t},\n\n\t\tnearestEmptyInsertDetectEvent :function (evt) {\n\t\t\tif (dnd.dragEl) {\n\t\t\t\t///evt = evt.touches ? evt.touches[0] : evt;\n\t\t\t\tvar nearest = dnd._detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n\t\t\t\tif (nearest) {\n\t\t\t\t\t// Create imitation event\n\t\t\t\t\tvar event = {};\n\t\t\t\t\tfor (var i in evt) {\n\t\t\t\t\t\tevent[i] = evt[i];\n\t\t\t\t\t}\n\t\t\t\t\tevent.target = event.rootEl = nearest;\n\t\t\t\t\tevent.preventDefault = void 0;\n\t\t\t\t\tevent.stopPropagation = void 0;\n\t\t\t\t\tnearest[expando]._onDragOver(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\n\t\t/**\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n\t\t * @param  {Number} x      X position\n\t\t * @param  {Number} y      Y position\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\n\t\t */\n\t\t_detectNearestEmptySortable : function(x, y) {\n\t\t\tvar sortables = this.sortables;\n\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\n\t\t\t\tif (finder.lastChild(sortables[i],{ignoreHidden : true,excluding : [this.ghostEl]})) continue;\n\n\t\t\t\tvar rect = geom.boundingRect(sortables[i]),\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\n\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\n\t\t\t\t\treturn sortables[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_disableDraggable : function (el) {\n\t\t\tel.draggable = false;\n\t\t},\n\n\t\t_nulling: function() {\n\n\t\t\tdnd.dragEl = \n\t\t\tdnd.rootEl =\n\t\t\tdnd.parentEl =\n\t\t\t//ghoster.ghostEl =\n\t\t\tdnd.nextEl =\n\t\t\tdnd.cloneEl =\n\t\t\t///lastDownEl =\n\n\n\t\t\tdnd.tapEvt =\n\t\t\t///dnd.touchEvt =\n\n\t\t\tdnd.oldIndex =\n\n\t\t\tdnd.putSortable =\n\t\t\tdnd.activeGroup =\n\t\t\tdnd.active = null;\n\n\t\t}\n\n\n\t};\n\n\n\treturn dnd;\n\t\n});\ndefine('skylark-sortable/draggable',[\r\n\t\"skylark-langx\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./dnd\"\r\n],function(langx,finder,styler,eventer,noder,touch,dnd){\r\n    var \r\n        lastDownEl,\r\n        scrolling,\r\n\r\n        savedInputChecked = [];\r\n\r\n    function _find(ctx, tagName, iterator) {\r\n        if (ctx) {\r\n            var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\r\n\r\n            if (iterator) {\r\n                for (; i < n; i++) {\r\n                    iterator(list[i], i);\r\n                }\r\n            }\r\n\r\n            return list;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n\t/**\r\n\t * Returns the index of an element within its parent for a selected set of\r\n\t * elements\r\n\t * @param  {HTMLElement} el\r\n\t * @param  {selector} selector\r\n\t * @return {number}\r\n\t */\r\n\tfunction _index(el, selector) {\r\n\t\treturn finder.index(el,function(el){\r\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\t\t\t\r\n\t\t})\r\n\t}\t\r\n\r\n    function _saveInputCheckedState(root) {\r\n        savedInputChecked.length = 0;\r\n\r\n        var inputs = root.getElementsByTagName('input');\r\n        var idx = inputs.length;\r\n\r\n        while (idx--) {\r\n            var el = inputs[idx];\r\n            el.checked && savedInputChecked.push(el);\r\n        }\r\n    }\r\n\r\n\tclass Draggable {\r\n\t\tconstructor(sortable,options) {\r\n\t\t\tthis.sortable = sortable;\r\n\t\t\tvar el = this._elm = sortable.elm();\r\n\t\t\tthis.options = options;\r\n\r\n\t        // Bind events\r\n            touch.mousy(el);\r\n            eventer.on(el, 'mousedown', this._onMouseDown.bind(this));\r\n\r\n\t\t}\r\n\r\n\t\telm() {\r\n\t\t\treturn this._elm;\r\n\t\t}\r\n\t\t//drag start \r\n        // handle moudedown event\r\n        _onMouseDown(/** Event|TouchEvent */evt) {\r\n            //if (!evt.cancelable) return;\r\n            var sortable = this.sortable,\r\n                el = this._elm,\r\n                options = this.options,\r\n                preventOnFilter = options.preventOnFilter,\r\n                type = evt.type,\r\n                target = evt.target,\r\n                originalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\r\n                filter = options.filter,\r\n                startIndex,\r\n                startDraggableIndex;\r\n\r\n            _saveInputCheckedState(el);\r\n\r\n            // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\r\n            ///if (dnd.dragEl) {\r\n            ///    return;\r\n            ///}\r\n\r\n            if (/mousedown/.test(type) && evt.button !== 0 || options.disabled) {\r\n                return; // only left button and enabled\r\n            }\r\n\r\n            // cancel dnd if original target is content editable\r\n            if (originalTarget.isContentEditable) {\r\n                return;\r\n            }\r\n\r\n            target = finder.closest(target, options.draggable, el, false);\r\n\r\n\r\n            if (lastDownEl === target) {\r\n                // Ignoring duplicate `down`\r\n                return;\r\n            }\r\n\r\n            dnd.log(\"_onTapStart\",target.tagName+\",\"+target.className);\r\n\r\n            // Get the index of the dragged element within its parent\r\n            startIndex = _index(target);\r\n            startDraggableIndex = _index(target, options.draggable);\r\n\r\n            // Check filter\r\n            if (typeof filter === 'function') {\r\n                if (filter.call(this, evt, target, this)) {\r\n                    sortable._dispatchEvent(sortable, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\r\n                    return; // cancel dnd\r\n                }\r\n            }\r\n            else if (filter) {\r\n                filter = filter.split(',').some(function (criteria) {\r\n                    criteria = finder.closest(originalTarget, criteria.trim(), el, false);\r\n\r\n                    if (criteria) {\r\n                        sortable._dispatchEvent(sortable, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                if (filter) {\r\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\r\n                    return; // cancel dnd\r\n                }\r\n            }\r\n\r\n            if (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\r\n                return;\r\n            }\r\n\r\n            // Prepare `dragstart`\r\n            var\r\n                ownerDocument = el.ownerDocument,\r\n                dragEl = dnd.dragEl,\r\n                rootEl,\r\n                parentEl = dnd.parentEl,\r\n                nextEl = dnd.nextEl,\r\n                oldIndex = dnd.oldIndex,\r\n                oldDraggableIndex = dnd.oldDraggableIndex,\r\n                tapEvt = dnd.tapEvt;\r\n\r\n            dnd.log(\"_prepareDragStart\",\"start\");\r\n            if (target && !dragEl && (target.parentNode === el)) {\r\n                rootEl = el;\r\n                dragEl = dnd.dragEl = target;\r\n                parentEl = dnd.parentEl= dragEl.parentNode;\r\n                nextEl = dnd.nextEl = dragEl.nextSibling;\r\n                lastDownEl = target;\r\n                dnd.activeGroup = this.options.group;\r\n                oldIndex = dnd.oldIndex = startIndex;\r\n                oldDraggableIndex = dnd.oldDraggableIndex =  startDraggableIndex;\r\n\r\n                tapEvt = dnd.tapEvt = {\r\n                    target: dragEl,\r\n                    clientX: evt.clientX,\r\n                    clientY: evt.clientY\r\n                };\r\n\r\n                this._lastX = evt.clientX;\r\n                this._lastY = evt.clientY;\r\n\r\n                dragEl.style['will-change'] = 'all';\r\n                // undo animation if needed\r\n                dragEl.style.transition = '';\r\n                dragEl.style.transform = '';\r\n\r\n                // Disable \"draggable\"\r\n                options.ignore.split(',').forEach(function (criteria) {\r\n                    _find(dragEl, criteria.trim(), dnd._disableDraggable);\r\n                });\r\n\r\n                // Bind the events: dragstart/dragend\r\n                ///sortable._triggerDragStart(evt, touch);\r\n\r\n                dnd.prepare(this,dnd.dragEl);\r\n\r\n                // Drag start event\r\n                sortable._dispatchEvent(sortable, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\r\n\r\n                // Chosen item\r\n                styler.toggleClass(dragEl, options.chosenClass, true);\r\n            }\r\n        }\r\n\r\n\r\n        _onDragStart(/**Event*/evt, /**boolean*/fallback) {\r\n            dnd.log(\"_onDragStart\",\"start\");\r\n            var _this = this,\r\n                dragEl = dnd.dragEl,\r\n                rootEl = this._elm;\r\n\r\n            var dataTransfer = evt.dataTransfer;\r\n            var options = _this.options;\r\n\r\n            // Setup clone\r\n            var cloneEl = dnd.cloneEl = noder.clone(dragEl,true);\r\n\r\n            cloneEl.draggable = false;\r\n            cloneEl.style['will-change'] = '';\r\n\r\n            //this._hideClone();\r\n\r\n            styler.toggleClass(cloneEl, _this.options.chosenClass, false);\r\n\r\n\r\n            // #1143: IFrame support workaround\r\n            _this._cloneId = langx.defer(function () {\r\n                if (!_this.options.removeCloneOnHide) {\r\n                    rootEl.insertBefore(cloneEl, dragEl);\r\n                }\r\n                _this.sortable._dispatchEvent(_this, rootEl, 'clone', dragEl);\r\n            });\r\n\r\n\r\n            if (!fallback){\r\n                styler.toggleClass(dragEl, options.dragClass, true);\r\n            } \r\n\r\n            // Set proper drop events\r\n            if (fallback) {\r\n                //dnd.ignoreNextClick = true;\r\n                //_this._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\r\n            } else {\r\n                // Undo what was set in _prepareDragStart before drag started\r\n                //eventer.off(document, 'mouseup', _this._onDrop); //TODO : lwf\r\n                ///eventer.off(document, 'touchend', _this._onDrop);\r\n                ///eventer.off(document, 'touchcancel', _this._onDrop);\r\n\r\n                if (dataTransfer) {\r\n                    dataTransfer.effectAllowed = 'move';\r\n                    options.setData && options.setData.call(_this, dataTransfer, dragEl);\r\n                }\r\n\r\n                ////eventer.on(document, 'drop', _this);\r\n\r\n                // #1276 fix:\r\n                styler.css(dragEl, 'transform', 'translateZ(0)');\r\n            }\r\n\r\n            dnd.awaitingDragStarted = true;\r\n\r\n\r\n\t        function _dragStarted(fallback, evt) {\r\n\t            dnd.awaitingDragStarted = false;\r\n\t            var dragEl = dnd.dragEl,\r\n\t                rootEl = this._elm,\r\n\t                oldIndex = dnd.oldIndex,\r\n\t                oldDraggableIndex = dnd.oldDraggableIndex;\r\n\r\n\t            if (rootEl && dragEl) {\r\n\t                //if (this.nativeDraggable) {\r\n\t                //    eventer.on(document, 'dragover', this._handleAutoScroll);\r\n\t                //    eventer.on(document, 'dragover', dnd._checkAlignment);\r\n\t                //}\r\n\t                dnd.start(this);\r\n\t                var options = this.options;\r\n\r\n\t                // Apply effect\r\n\t                !fallback && styler.toggleClass(dragEl, options.dragClass, false);\r\n\t                styler.toggleClass(dragEl, options.ghostClass, true);\r\n\r\n\t                // In case dragging an animated element\r\n\t                styler.css(dragEl, 'transform', '');\r\n\r\n\t                //dnd.active = this;\r\n\r\n\t                //fallback && this._appendGhost();\r\n\r\n\t                // Drag start event\r\n\t                this.sortable._dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\r\n\t            } else {\r\n\t                this._nulling();\r\n\t            }\r\n\t        }\r\n\r\n            _this._dragStartId = langx.defer(_dragStarted.bind(_this, fallback, evt));\r\n            ///eventer.on(document, 'selectstart', _this);\r\n            ///if (Safari) {\r\n            ///    styler.css(document.body, 'user-select', 'none');\r\n            ///}\r\n        }\r\n\r\n        //\r\n        //\r\n\r\n        _onDragEnd(/**Event*/evt) {\r\n            var el = this._elm,\r\n                options = this.options,\r\n                dragEl = dnd.dragEl,\r\n                sortable = this.sortable,\r\n                putSortable = dnd.putSortable;\r\n\r\n            dnd.awaitingDragStarted = false;\r\n            scrolling = false;\r\n            //isCircumstantialInvert = false;\r\n            //pastFirstInvertThresh = false;\r\n\r\n            //clearInterval(this._loopId);\r\n\r\n            //clearInterval(pointerElemChangedInterval);\r\n\r\n            clearTimeout(this._dragStartTimer);\r\n\r\n\r\n            if (this._cloneId) {\r\n                this._cloneId.cancel();\r\n                this._cloneId = null;\r\n            }\r\n\r\n            if (this._dragStartId) {\r\n                this._dragStartId.cancel();\r\n                this._dragStartId = null;\r\n            }\r\n\r\n\r\n            // Unbind events\r\n            ///eventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\r\n\r\n            ///if (Safari) {\r\n            ///    styler.css(document.body, 'user-select', '');\r\n           /// }\r\n\r\n\r\n\r\n            if (sortable.nativeDraggable) {\r\n                eventer.off(dnd.dragEl, 'dragstart', this._onDragStart);\r\n                eventer.off(dnd.dragEl, 'dragend', this._onDragEnd);\r\n            }\r\n\r\n            lastDownEl = null;\r\n\r\n            savedInputChecked.forEach(function (el) {\r\n                el.checked = true;\r\n            });\r\n\r\n\r\n            savedInputChecked.length = 0;\r\n\r\n           \t//this.dragEl = null;\r\n\r\n            dnd.end();\r\n\r\n        }\r\n\t}\r\n\r\n\r\n\treturn Draggable;\r\n\r\n});\ndefine('skylark-sortable/droppable',[\r\n\t\"skylark-langx\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./dnd\"\r\n],function(langx,finder,styler,eventer,noder,geom,touch,dnd){\r\n\r\n\tvar\tmoved,\r\n\t    pastFirstInvertThresh,\r\n\t    isCircumstantialInvert,\r\n   \t\t_silent = false;\r\n\r\n\r\n\t/**\r\n\t * Checks if a side of an element is scrolled past a side of it's parents\r\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\r\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\r\n\t * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n\t */\r\n\tfunction _isScrolledPast(el, side) {\r\n\t\tvar parent = finder.scrollableParent(el, true),\r\n\t\t\telSide = geom.boundingRect(el)[side];\r\n\r\n\t\t/* jshint boss:true */\r\n\t\twhile (parent) {\r\n\t\t\tvar parentSide = geom.boundingRect(parent)[side],\r\n\t\t\t\tvisible;\r\n\r\n\t\t\tif (side === 'top' || side === 'left') {\r\n\t\t\t\tvisible = elSide >= parentSide;\r\n\t\t\t} else {\r\n\t\t\t\tvisible = elSide <= parentSide;\r\n\t\t\t}\r\n\r\n\t\t\tif (!visible) return parent;\r\n\r\n\t\t\tif (parent === noder.scrollingElement()) break;\r\n\r\n\t\t\tparent = finder.scrollableParent(parent, false);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\r\n\tfunction _unsilent() {\r\n\t\t_silent = false;\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n\t * @param  {HTMLElement} el       Parent element\r\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\r\n\t */\r\n\t function _lastChild(el) {\r\n\t\treturn finder.lastChild(el,{\r\n\t\t\tignoreHidden : true,\r\n\t\t\texcluding : []\r\n\t\t})\r\n\t}\r\n\r\n\t function _ghostIsLast(evt, axis, el) {\r\n\t\tvar elRect = geom.boundingRect(finder.lastChild(el,{ignoreHidden : true,excluding : []})),\r\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\r\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\r\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\r\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\r\n\t\t\tspacer = 10;\r\n\r\n\t\treturn (\r\n\t\t\taxis === 'vertical' ?\r\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\r\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\tfunction _isClientInRowColumn(x, y, el, axis, options) {\r\n\t\tvar targetRect = geom.boundingRect(el),\r\n\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\r\n\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\r\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\r\n\r\n\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\r\n\t}\r\n\r\n\tfunction _isElInRowColumn(el1, el2, axis) {\r\n\t\t//var dragEl = dnd.active.dragEl;\r\n\r\n\t\tvar el1Rect = geom.boundingRect(el1),//el1 === dragEl && realDragElRect || geom.boundingRect(el1),\r\n\t\t\tel2Rect = geom.boundingRect(el2),//el2 === dragEl && realDragElRect || geom.boundingRect(el2),\r\n\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\r\n\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\r\n\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\r\n\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\r\n\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\r\n\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\r\n\r\n\t\treturn (\r\n\t\t\tel1S1Opp === el2S1Opp ||\r\n\t\t\tel1S2Opp === el2S2Opp ||\r\n\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the index of an element within its parent for a selected set of\r\n\t * elements\r\n\t * @param  {HTMLElement} el\r\n\t * @param  {selector} selector\r\n\t * @return {number}\r\n\t */\r\n\tfunction _index(el, selector) {\r\n\t\treturn finder.index(el,function(el){\r\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\t\t\t\r\n\t\t})\r\n\t}\t\r\n\r\n    function _globalDragOver(/**Event*/evt) {\r\n\t\tif (evt.dataTransfer) {\r\n\t\t\tevt.dataTransfer.dropEffect = 'move';\r\n\t\t}\r\n\t\tevt.cancelable && evt.preventDefault();\r\n\t}\r\n\r\n\tclass Droppable {\r\n\t\tconstructor(sortable,options) {\r\n\t\t\tthis.sortable = sortable;\r\n\t\t\tvar el = this.el= this._elm = sortable.elm();\r\n\t\t\tthis.options = options;\r\n\r\n\t\t\tif (sortable.nativeDraggable) {\r\n\t\t\t\teventer.on(el, 'dragover', this);\r\n\t\t\t\teventer.on(el, 'dragenter', this);\r\n\t\t        eventer.on(el, 'drop', this);\r\n\t\t\t}\r\n\t        eventer.on(el, 'selectstart', this);\r\n\t\t}\r\n\r\n\r\n\t\t_onMove (fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\r\n\t\t\tvar evt,\r\n\t\t\t\tsortable = fromEl[dnd.expando],\r\n\t\t\t\tonMoveFn = sortable.options.onMove,\r\n\t\t\t\tretVal;\r\n\r\n\t\t\tevt = eventer.create(\"move\",{\r\n\t\t\t\tto : toEl,\r\n\t\t\t\tfrom : fromEl,\r\n\t\t\t\tdragged : dragEl,\r\n\t\t\t\tdraggedRect: dragRect,\r\n\t\t\t\trelated : targetEl || toEl,\r\n\t\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\r\n\t\t\t\twillInsertAfter : willInsertAfter,\r\n\t\t\t\toriginalEvent : originalEvt\r\n\t\t\t});\r\n\r\n\t\t\tfromEl.dispatchEvent(evt);\r\n\r\n\t\t\tif (onMoveFn) {\r\n\t\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\r\n\t\t\t}\r\n\r\n\t\t\treturn retVal;\r\n\t\t}\r\n\r\n\r\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\r\n\t\t_onDragOver(/**Event*/evt) {\r\n\t\t\tvar el = this._elm,\r\n\t\t\t\ttarget = evt.target,\r\n\t\t\t\tdragRect,\r\n\t\t\t\ttargetRect,\r\n\t\t\t\trevert,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tgroup = options.group,\r\n\t\t\t\tactiveSortable = dnd.active,\r\n\t\t\t\tisOwner = (dnd.activeGroup === group),\r\n\t\t\t\tcanSort = options.sort,\r\n\t\t\t\tsortable = this.sortable,\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\trootEl = dnd.active.elm(),\r\n\t\t\t\tputSortable = dnd.putSortable,\r\n\t\t\t\tnextEl = dnd.nextEl,\r\n\t\t\t\toldIndex = dnd.oldIndex,\r\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex,\r\n\r\n\t\t\t\tlastMode, // 'swap' or 'insert'\r\n\t\t\t\tlastTarget,\r\n\t\t\t\tlastDirection,\r\n\t\t\t\ttargetMoveDistance;\r\n            //dnd.log(\"_onDragOver\",\"start\");\r\n\r\n\t\t\tif (_silent) return;\r\n\r\n\t\t\t// Return invocation when dragEl is inserted (or completed)\r\n\t\t\tfunction completed(insertion) {\r\n\t\t\t\tif (insertion) {\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(sortable);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (activeSortable) {\r\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (putSortable !== sortable && sortable !== dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable = sortable;\r\n\t\t\t\t\t} else if (sortable === dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Animation\r\n\t\t\t\t\tdragRect && sortable._animate(dragRect, dragEl);\r\n\t\t\t\t\ttarget && targetRect && sortable._animate(targetRect, target);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\r\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\r\n\t\t\t\t\tlastTarget = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// no bubbling and not fallback\r\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\r\n\t\t\t\t\t//sortable._handleAutoScroll(evt);\r\n\t\t\t\t\tdnd.over(evt);\r\n\r\n\t\t\t\t\t// Do not detect for empty insert if already inserted\r\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Call when dragEl has been inserted\r\n\t\t\tfunction changed() {\r\n\t\t\t\tsortable._dispatchEvent(sortable, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl), oldDraggableIndex, _index(dragEl, options.draggable), evt);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\r\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\r\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\r\n\t\t\t */\r\n\t\t\tfunction _getInsertDirection(target) {\r\n\t\t\t\tvar dragElIndex = _index(dragEl),\r\n\t\t\t\t\ttargetIndex = _index(target);\r\n\r\n\t\t\t\tif (dragElIndex < targetIndex) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\r\n\t\t\t\tvar targetRect = geom.boundingRect(target),\r\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\r\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\r\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\r\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\r\n\t\t\t\t\tinvert = false;\r\n\r\n\r\n\t\t\t\tif (!invertSwap) {\r\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\r\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\r\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\r\n\t\t\t\t\t\t\t(lastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\r\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\r\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\r\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\r\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinvert = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Regular\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\r\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinvert = invert || invertSwap;\r\n\r\n\t\t\t\tif (invert) {\r\n\t\t\t\t\t// Invert of regular\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\r\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (evt.preventDefault !== void 0) {\r\n\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tmoved = true;\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\r\n\r\n\t\t\t// target is dragEl or target is animated\r\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\r\n\t\t\t\treturn completed(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (activeSortable && !options.disabled &&\r\n\t\t\t\t(isOwner\r\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\tputSortable === this ||\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(this.lastPutMode = dnd.activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\r\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tvar axis = sortable._getDirection(evt, target);\r\n\r\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\r\n\r\n\t\t\t\tif (revert) {\r\n\t\t\t\t\tthis._hideClone();\r\n\t\t\t\t\tdnd.parentEl = rootEl; // actualization\r\n\r\n\t\t\t\t\tif (nextEl) {\r\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trootEl.appendChild(dragEl);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn completed(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar elLastChild = _lastChild(el);\r\n\r\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\r\n\t\t\t\t\t// assign target only if condition is true\r\n\t\t\t\t\tif (elLastChild && el === evt.target) {\r\n\t\t\t\t\t\ttarget = elLastChild;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\r\n\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\tdnd.parentEl = el; // actualization\r\n\t\t\t\t\t\t///realDragElRect = null;\r\n\r\n\t\t\t\t\t\tchanged();\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\r\n\t\t\t\t\tvar direction = 0,\r\n\t\t\t\t\t\ttargetBeforeFirstSwap,\r\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\r\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\r\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\r\n\t\t\t\t\t\tscrolledPastTop = _isScrolledPast(target, 'top') || _isScrolledPast(dragEl, 'top'),\r\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\r\n\r\n\r\n\t\t\t\t\tif (lastTarget !== target) {\r\n\t\t\t\t\t\tlastMode = null;\r\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\r\n\t\t\t\t\t\tpastFirstInvertThresh = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\r\n\t\t\t\t\t\tdifferentLevel ||\r\n\t\t\t\t\t\tscrolledPastTop ||\r\n\t\t\t\t\t\toptions.invertSwap ||\r\n\t\t\t\t\t\tlastMode === 'insert' ||\r\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\r\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\r\n\t\t\t\t\t\tlastMode === 'swap'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// New target that we will be inside\r\n\t\t\t\t\t\tif (lastMode !== 'swap') {\r\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\r\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\r\n\t\t\t\t\t\t\tisCircumstantialInvert,\r\n\t\t\t\t\t\t\tlastTarget === target);\r\n\t\t\t\t\t\tlastMode = 'swap';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Insert at position\r\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\r\n\t\t\t\t\t\tlastMode = 'insert';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (direction === 0) return completed(false);\r\n\r\n\t\t\t\t\t///realDragElRect = null;\r\n\t\t\t\t\tlastTarget = target;\r\n\r\n\t\t\t\t\tlastDirection = direction;\r\n\r\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\r\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\r\n\t\t\t\t\t\tafter = false;\r\n\r\n\t\t\t\t\tafter = direction === 1;\r\n\r\n\t\t\t\t\tvar moveVector = this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\r\n\r\n\t\t\t\t\tif (moveVector !== false) {\r\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\r\n\t\t\t\t\t\t\tafter = (moveVector === 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_silent = true;\r\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\r\n\r\n\t\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (after && !nextSibling) {\r\n\t\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\r\n\t\t\t\t\t\tif (scrolledPastTop) {\r\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdnd.parentEl = dragEl.parentNode; // actualization\r\n\r\n\t\t\t\t\t\t// must be done before animation\r\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\r\n\t\t\t\t\t\t\ttargetMoveDistance =  Math.abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchanged();\r\n\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el.contains(dragEl)) {\r\n\t\t\t\t\treturn completed(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\t_onDrop(/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tsortable = this.sortable,\r\n\t\t\t\trootEl = dnd.active.elm(),\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\tputSortable = dnd.putSortable,\r\n\t\t\t\tparentEl = dnd.parentEl,\r\n\t\t\t\toldIndex = dnd.oldIndex,\r\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex,\r\n\t\t\t\tnextEl = dnd.nextEl,\r\n\t\t\t\tnewIndex,\r\n\t\t\t\tnewDraggableIndex;\r\n\r\n\r\n\t\t\tisCircumstantialInvert = false;\r\n\t\t\tpastFirstInvertThresh = false;\r\n\r\n\r\n\t\t\tif (sortable.nativeDraggable) {\r\n\t\t\t\teventer.off(document, 'drop', this);\r\n\t\t\t}\r\n\r\n\t\t\tthis._offUpEvents();\r\n\r\n\t\t\tif (evt) {\r\n\t\t\t\tif (moved) {\r\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//ghoster.remove();\r\n\r\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\r\n\t\t\t\t\t// Remove clone\r\n\t\t\t\t\tnoder.remove(dnd.cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dragEl) {\r\n\r\n\t\t\t\t\tdnd._disableDraggable(dragEl);\r\n\t\t\t\t\tdragEl.style['will-change'] = '';\r\n\r\n\t\t\t\t\t// Remove class'sd\r\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\r\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\r\n\r\n\t\t\t\t\t// Drag stop event\r\n\t\t\t\t\tsortable._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\r\n\r\n\t\t\t\t\tif (rootEl !== parentEl) {\r\n\t\t\t\t\t\tnewIndex = _index(dragEl);\r\n\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t// Add event\r\n\t\t\t\t\t\t\tsortable._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// Remove event\r\n\t\t\t\t\t\t\tsortable._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// drag from one list and drop into another\r\n\t\t\t\t\t\t\tsortable._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\tsortable._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tputSortable && putSortable.save();\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\r\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\t\t\t\t\tnewIndex = _index(dragEl);\r\n\t\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t\t// drag & drop within the same list\r\n\t\t\t\t\t\t\t\tsortable._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t\tsortable._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd.active) {\r\n\t\t\t\t\t\t/* jshint eqnull:true */\r\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\r\n\t\t\t\t\t\t\tnewIndex = oldIndex;\r\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tsortable._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t// Save sorting\r\n\t\t\t\t\t\tsortable.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis._nulling();\r\n\t\t}\r\n\r\n\t\t_offUpEvents () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\r\n\t\t\teventer.off(document, 'selectstart', this);\r\n\t\t}\r\n\r\n\t\t_nulling() {\r\n\r\n\t\t\tmoved =\tnull;\r\n\r\n\t\t}\r\n\r\n\t\thandleEvent (/**Event*/evt) {\r\n\t\t\tswitch (evt.type) {\r\n\t\t\t\tcase 'drop':\r\n\t\t\t\t\tthis._onDrop(evt);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'dragenter':\r\n\t\t\t\tcase 'dragover':\r\n\t\t\t\t\tif (dnd.dragEl) {\r\n\t\t\t\t\t\tthis._onDragOver(evt);\r\n\t\t\t\t\t\t_globalDragOver(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selectstart':\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\treturn Droppable;\r\n});\ndefine('skylark-sortable/Sortable',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/is-browser\",\n\t\"skylark-langx-hoster/is-mobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-layouts/oriented\",\n    \"skylark-domx-plugins-base\",\n\t\"skylark-devices-points/touch\",\n\t\"./dnd\",\n\t\"./draggable\",\n\t\"./droppable\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\toriented,\n\tplugins,\n\ttouch,\n\tdnd,\n\tDraggable,\n\tDroppable\n){\n\n\t'use strict';\n\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\treturn finder.index(el,function(el){\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\t\t\t\n\t\t})\n\t}\n\n\n\n\n\n\tvar \n\n\t\t///realDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari,\n\n\t\tIOS = isMobile && isMobile.apple.device,\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\n\n\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents,\n\n\t\t_alignedSilent = false,\n\n\t\t//savedInputChecked = [],\n\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t};\n\n\n\tvar Sortable =  plugins.Plugin.inherit({\n        klassName: \"Sortable\",\n        \n        pluginName : \"intg.sortable\",\n\n\n\t\toptions : {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\t//draggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\n\t\t\t\treturn oriented(this.el, langx.mixin({\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\n\t\t\t\t\t\t\t\t},this.options));\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\n\n\t\t\tfallbackOnBody: true,  //fix\n\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\t//supportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t},\n\n\n\t\t/**\n\t\t * @class  Sortable\n\t\t * @param  {HTMLElement}  el\n\t\t * @param  {Object}       [options]\n\t\t */\n\t\t_construct : function Sortable(el, options) {\n            this.overrided(el,options);\n\n\t\t\tthis.el = el; // root element\n\n\t\t\t// Export instance\n\t\t\tel[dnd.expando] = this;\n\n\t\t\toptions = this.options;\n\n\t\t\toptions.draggable = options.draggable || /[uo]l/i.test(el.nodeName) ? '>li' : '>*';\n\n\n\t\t\t_prepareGroup(options);\n\n\t\t\t// Bind all private methods\n\t\t\tfor (var fn in this) {\n\t\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Setup drag mode\n\t\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\t\tthis.options.touchStartThreshold = 1;\n\t\t\t}\n\n\n\n\t\t\tdnd.sortables.push(this.el);\n\n\t\t\t// Restore sorting\n\t\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\n\n\t\t\tthis.draggable = new Draggable(this,this.options);\n\n\t\t\tthis.droppable = new Droppable(this,this.options);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\tvar  dragEl = dnd.dragEl;\n\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,null) : this.options.direction;\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation,\n\t\t\t\tdragEl = dnd.dragEl;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = geom.boundingRect(target);\n\n\t\t\t\t////if (target === dragEl) {\n\t\t\t\t///\trealDragElRect = currentRect;\n\t\t\t\t///}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tnoder.reflow(target);\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\tstyler.css(target, 'transition', '');\n\t\t\t\t\tstyler.css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n        _hideClone: function() {\n        \treturn;\n            if (!dnd.cloneEl.cloneHidden) {\n                styler.hide(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = true;\n                if (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\n                    noder.remove(dnd.cloneEl);\n                }\n            }\n        },\n\n        _showClone: function(putSortable) {\n            var rootEl = dnd.active.el,\n                nextEl = dnd.nextEl;\n\n            if (putSortable.lastPutMode !== 'clone') {\n                this._hideClone();\n                return;\n            }\n\n            if (dnd.cloneEl.cloneHidden) {\n                // show clone at dragEl or original position\n                if (rootEl.contains(dnd.dragEl) && !this.options.group.revertClone) {\n                    rootEl.insertBefore(dnd.cloneEl, dnd.dragEl);\n                } else if (nextEl) {\n                    rootEl.insertBefore(dnd.cloneEl, nextEl);\n                } else {\n                    rootEl.appendChild(dnd.cloneEl);\n                }\n\n                if (this.options.group.revertClone) {\n                    this._animate(dnd.dragEl, dnd.cloneEl);\n                }\n                styler.show(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = false;\n            }\n        },\n\n\t\t_dispatchEvent : function (\n\t\t\tsortable, \n\t\t\trootEl, \n\t\t\tname,\n\t\t\ttargetEl, \n\t\t\ttoEl, \n\t\t\tfromEl,\n\t\t\tstartIndex, \n\t\t\tnewIndex,\n\t\t\tstartDraggableIndex, \n\t\t\tnewDraggableIndex,\n\t\t\toriginalEvt\n\t\t) {\n\t\t\tsortable = (sortable || rootEl[dnd.expando]);\n\t\t\tvar evt,\n\t\t\t\toptions = sortable.options,\n\t\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\tputSortable = dnd.putSortable;\n\n\t\t\tevt = eventer.create(name,{\n\t\t\t\tto : toEl || rootEl,\n\t\t\t\tfrom : fromEl || rootEl,\n\t\t\t\titem : targetEl || rootEl,\n\t\t\t\tclone : dnd.cloneEl,\n\t\t\t\toldIndex : startIndex,\n\t\t\t\tnewIndex : newIndex,\n\t\t\t\toldDraggableIndex : startDraggableIndex,\n\t\t\t\tnewDraggableIndex : newDraggableIndex,\n\t\t\t\toriginalEvent : originalEvt,\n\t\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\n\t\t\t});\n\t\t\tif (rootEl) {\n\t\t\t\trootEl.dispatchEvent(evt);\n\t\t\t}\n\n\t\t\tif (options[onName]) {\n\t\t\t\toptions[onName].call(sortable, evt);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || noder.generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[dnd.expando] = null;\n\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(el, 'dragover', this);\n\t\t\t\teventer.off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t});\n\n\n\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\n});\ndefine('skylark-sortable/main',[\n\t\"skylark-langx\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-styler\",\n\t\"./Sortable\"\n],function(\n\tlangx,\n\teventer,\n\tfinder,\n\tnoder,\n\tstyler,\n\tSortable\n){\n\t// Export utils\n\tSortable.utils = {\n\t\ton: eventer.on,\n\t\toff: eventer.off,\n\t\tcss: styler.css,\n\t\t///find: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!finder.closest(el, selector, el, false);\n\t\t},\n\t\textend: langx.mixin,\n\t\tthrottle: langx.debounce,\n\t\tclosest: finder.closest,\n\t\ttoggleClass: styler.toggleClass,\n\t\tclone: \tfunction (el) {\n\t\t\t\t\treturn noder.clone(el,true);\n\t\t\t\t},\n\t\t//index: containers._index,\n\t\tnextTick: \tfunction _nextTick(fn) {\n\t\t\t//return setTimeout(fn, 0);\n\t\t\treturn langx.defer(fn);\n\t\t},\n\t\tcancelNextTick: \tfunction _cancelNextTick(id) {\n\t\t\t//return clearTimeout(id);\n\t\t\treturn id && id.stop();\n\t\t},\n\t\t//detectDirection: _detectDirection,\n\t\tgetChild: function(el, childNum, options) {\n\t\t\toptions.excluding = [];\n\t\t\toptions.closesting = options.draggable;\n\t\t\treturn finder.childAt(el,childNum,options);\n\t\t}\n\t};\n\n\treturn Sortable;\n});\ndefine('skylark-sortable', ['skylark-sortable/main'], function (main) { return main; });\n\n"]}