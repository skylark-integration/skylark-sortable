{"version":3,"sources":["skylark-sortable.js"],"names":["define","hoster","detects","browser","window","document","ua","toLowerCase","match","exec","indexOf","platform_match","matched","version","versionNumber","platform","parseInt","android","bb","blackberry","ipad","iphone","ipod","kindle","playbook","silk","mobile","cros","mac","linux","win","desktop","chrome","opr","safari","webkit","rv","iemobile","edge","name","uaMatch","navigator","userAgent","detectBrowser","undefined","isBrowser","langx","geom","styler","scrollingElement","scrollEl","scrollCustomFn","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","autoScrolls","scrolling","scrollParentEl","IE11OrLess","ie","Edge","Safari","firefox","_throttleTimeout","_getParentAutoScrollElement","el","includeSelf","getBoundingClientRect","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","css","overflowX","overflowY","body","parentNode","_autoScroll","_throttle","evt","options","rootEl","isFallback","expando","scroll","_this","sens","scrollSensitivity","speed","scrollSpeed","x","clientX","y","clientY","winScroller","scrollThisInstance","_clearAutoScrolls","scrollFn","layersOut","currentParent","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","rect","boundingRect","top","bottom","left","right","width","height","scrollLeft","scrollTop","Math","abs","i","clearInterval","pid","setInterval","scrollOffsetY","this","layer","scrollOffsetX","call","touchEvt","scrollBy","bind","bubbleScroll","forEach","autoScroll","callback","ms","debounce","_isScrolledPast","side","parent","elSide","parentSide","_getRelativeScrollOffset","offsetLeft","offsetTop","matrix","transforms","scaleX","a","scaleY","d","_handleAutoScroll","fallback","elementFromPoint","ogElemScroller","newElem","_cancelThrottle","stop","_nulling","length","finder","Orientation","elCSS","elWidth","contentRect","child1","childAt","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginSize","secondChildWidth","display","flexDirection","Vertical","Horizontal","gridTemplateColumns","split","float","touchingSideChild2","clear","skylark","isMobile","$","noder","eventer","oriented","touch","_getRect","adjustForTransform","container","adjustForFixed","ghoster","ghostEl","PositionGhostAbsolutely","apple","device","ghostRelativeParent","ghostRelativeParentInitialScroll","_ghostIsLast","axis","elRect","lastChild","ignoreHidden","excluding","mouseOnAxis","mouseOnOppAxis","targetS2","targetS1Opp","targetS2Opp","_lastChild","_appendGhost","dragEl","ghostRelativeParentRect","documentElement","autoscroll","cloneNode","toggleClass","ghostClass","fallbackClass","dragClass","box-sizing","margin","opacity","position","zIndex","pointerEvents","appendChild","getRelativeScrollOffset","remove","MousedDragDrop","Emitter","inherit","_construct","dnd","$doc","listenTo","_onTouchMove","_onMouseUp","putSortable","_onDrop","draggable","_onDragEnd","destroy","forAutoScroll","tapEvt","fallbackTolerance","fallbackOffset","touches","relativeScrollOffset","dx","dy","translate3d","active","awaitingDragStarted","min","_lastX","_lastY","_onDragStart","ignoreNextClick","_loopId","_emulateDragOver","preventDefault","target","shadowRoot","_onDragOver","_computeIsAligned","unlistenTo","Date","getTime","log","category","message","append","activeGroup","sortables","cloneEl","prepare","nativeDraggable","_fallbacker","start","event","elm","ownerDocument","on","nearestEmptyInsertDetectEvent","_checkAlignment","over","end","dropped","off","nearest","_detectNearestEmptySortable","stopPropagation","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_disableDraggable","parentEl","nextEl","oldIndex","_index","selector","index","nodeName","toUpperCase","matches","_isElInRowColumn","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_isClientInRowColumn","targetRect","plugins","containers","lastDownEl","savedInputChecked","newIndex","newDraggableIndex","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","pastFirstInvertThresh","isCircumstantialInvert","setTimeout","supportDraggable","Polymer","createElement","_silent","support","cssPointerEvents","_alignedSilent","_prepareGroup","toFn","value","pull","to","from","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","Sortable","Plugin","klassName","pluginName","sort","disabled","store","handle","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","mixin","chosenClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","fallbackOnBody","forceFallback","fn","overrided","test","charAt","mousy","_onMouseDown","push","get","startIndex","startDraggableIndex","_elm","type","originalTarget","path","composedPath","root","inputs","getElementsByTagName","idx","checked","_saveInputCheckedState","button","isContentEditable","closest","tagName","className","_dispatchEvent","cancelable","some","criteria","trim","_prepareDragStart","dragStartFn","oldDraggableIndex","nextSibling","style","transition","transform","_triggerDragStart","ctx","iterator","list","n","_find","selection","defer","empty","getSelection","removeAllRanges","err","clone","_cloneId","insertBefore","effectAllowed","_dragStartId","_dragStarted","clearTimeout","_dragStartTimer","_onMove","fromEl","toEl","dragRect","targetEl","originalEvt","willInsertAfter","retVal","sortable","onMoveFn","onMove","create","dragged","draggedRect","related","relatedRect","originalEvent","dispatchEvent","children","sortableMouseAligned","_getDirection","_animate","prevRect","currentRect","nodeType","_repaint","animated","offsetWidth","_offUpEvents","revert","activeSortable","isOwner","canSort","contains","completed","lastPutMode","_hideClone","elLastChild","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","scrollBefore","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","_unsilent","insertion","dragElIndex","targetIndex","save","cloneHidden","hide","show","handleEvent","dropEffect","_globalDragOver","onName","substr","item","pullMode","toArray","order","getAttribute","generateId","items","id","removeChild","set","option","_onTapStart","Array","prototype","querySelectorAll","removeAttribute","splice","attach","utils","is","extend","throttle","nextTick","cancelNextTick","getChild","childNum","closesting","main"],"mappings":"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","file":"../skylark-sortable.js","sourcesContent":["define('skylark-langx-hoster/detects/browser',[\r\n    \"../hoster\"\r\n],function(hoster){\r\n\t//refer : https://github.com/gabceb/jquery-browser-plugin\r\n\r\n\tfunction detectBrowser() {\r\n\r\n\t\tfunction uaMatch( ua ) {\r\n\t\t\tua = ua.toLowerCase();\r\n\r\n\t\t\tvar match = /(edge)\\/([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opr)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(iemobile)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"trident\") >= 0 && /(rv)(?::| )([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar platform_match = /(ipad)/.exec( ua ) ||\r\n\t\t\t    /(ipod)/.exec( ua ) ||\r\n\t\t\t    /(windows phone)/.exec( ua ) ||\r\n\t\t\t    /(iphone)/.exec( ua ) ||\r\n\t\t\t    /(kindle)/.exec( ua ) ||\r\n\t\t\t    /(silk)/.exec( ua ) ||\r\n\t\t\t    /(android)/.exec( ua ) ||\r\n\t\t\t    /(win)/.exec( ua ) ||\r\n\t\t\t    /(mac)/.exec( ua ) ||\r\n\t\t\t    /(linux)/.exec( ua ) ||\r\n\t\t\t    /(cros)/.exec( ua ) ||\r\n\t\t\t    /(playbook)/.exec( ua ) ||\r\n\t\t\t    /(bb)/.exec( ua ) ||\r\n\t\t\t    /(blackberry)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar browser = {},\r\n\t\t\t    matched = {\r\n\t\t\t      browser: match[ 5 ] || match[ 3 ] || match[ 1 ] || \"\",\r\n\t\t\t      version: match[ 2 ] || match[ 4 ] || \"0\",\r\n\t\t\t      versionNumber: match[ 4 ] || match[ 2 ] || \"0\",\r\n\t\t\t      platform: platform_match[ 0 ] || \"\"\r\n\t\t\t    };\r\n\r\n\t\t\tif ( matched.browser ) {\r\n\t\t\t\tbrowser[ matched.browser ] = true;\r\n\t\t\t  \tbrowser.version = matched.version;\r\n\t\t\t  \tbrowser.versionNumber = parseInt(matched.versionNumber, 10);\r\n\t\t\t}\r\n\r\n\t\t\tif ( matched.platform ) {\r\n\t\t\t \tbrowser[ matched.platform ] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered mobile platforms, meaning they run a mobile browser\r\n\t\t\tif ( browser.android || browser.bb || browser.blackberry || browser.ipad || browser.iphone ||\r\n\t\t\t\tbrowser.ipod || browser.kindle || browser.playbook || browser.silk || browser[ \"windows phone\" ]) {\r\n\t\t\t\tbrowser.mobile = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered desktop platforms, meaning they run a desktop browser\r\n\t\t\tif ( browser.cros || browser.mac || browser.linux || browser.win ) {\r\n\t\t\t\tbrowser.desktop = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Chrome, Opera 15+ and Safari are webkit based browsers\r\n\t\t\tif ( browser.chrome || browser.opr || browser.safari ) {\r\n\t\t\t\tbrowser.webkit = true;\r\n\t\t\t}\r\n\r\n\t\t\t// IE11 has a new token so we will assign it msie to avoid breaking changes\r\n\t\t\tif ( browser.rv || browser.iemobile) {\r\n\t\t\t  var ie = \"ie\";\r\n\r\n\t\t\t  matched.browser = ie;\r\n\t\t\t  browser[ie] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Edge is officially known as Microsoft Edge, so rewrite the key to match\r\n\t\t\tif ( browser.edge ) {\r\n\t\t\t  delete browser.edge;\r\n\t\t\t  var msedge = \"edge\";\r\n\r\n\t\t\t  matched.browser = msedge;\r\n\t\t\t  browser[msedge] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Blackberry browsers are marked as Safari on BlackBerry\r\n\t\t\tif ( browser.safari && browser.blackberry ) {\r\n\t\t\t  var blackberry = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = blackberry;\r\n\t\t\t  browser[blackberry] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Playbook browsers are marked as Safari on Playbook\r\n\t\t\tif ( browser.safari && browser.playbook ) {\r\n\t\t\t  var playbook = \"playbook\";\r\n\r\n\t\t\t  matched.browser = playbook;\r\n\t\t\t  browser[playbook] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// BB10 is a newer OS version of BlackBerry\r\n\t\t\tif ( browser.bb ) {\r\n\t\t\t  var bb = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = bb;\r\n\t\t\t  browser[bb] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 15+ are identified as opr\r\n\t\t\tif ( browser.opr ) {\r\n\t\t\t  var opera = \"opera\";\r\n\r\n\t\t\t  matched.browser = opera;\r\n\t\t\t  browser[opera] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Stock Android browsers are marked as Safari on Android.\r\n\t\t\tif ( browser.safari && browser.android ) {\r\n\t\t\t  var android = \"android\";\r\n\r\n\t\t\t  matched.browser = android;\r\n\t\t\t  browser[android] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Kindle browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.kindle ) {\r\n\t\t\t  var kindle = \"kindle\";\r\n\r\n\t\t\t  matched.browser = kindle;\r\n\t\t\t  browser[kindle] = true;\r\n\t\t\t}\r\n\r\n\t\t\t // Kindle Silk browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.silk ) {\r\n\t\t\t  var silk = \"silk\";\r\n\r\n\t\t\t  matched.browser = silk;\r\n\t\t\t  browser[silk] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Assign the name and platform variable\r\n\t\t\tbrowser.name = matched.browser;\r\n\t\t\tbrowser.platform = matched.platform;\r\n\t\t\treturn browser;\r\n\t\t}\r\n\r\n\r\n\t    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\n\r\n\t    if (isBrowser) {\r\n\t\t    return uaMatch( navigator.userAgent );\r\n\t    } else {\r\n\t    \treturn null;\r\n\t    }\r\n\t}\r\n\r\n\r\n\treturn hoster.detects.browser = detectBrowser;\r\n});\ndefine('skylark-langx-hoster/isBrowser',[\r\n    \"./hoster\",\r\n    \"./detects/browser\"\r\n],function(hoster,detectBrowser){\r\n\tif (hoster.isBrowser == undefined) {\r\n\t\thoster.isBrowser = detectBrowser();\r\n\t}\r\n\r\n    return hoster.isBrowser;\r\n});\r\n\ndefine('skylark-sortable/fallback/autoscroll',[\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/isBrowser\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-scrolls/scrollingElement\"\n],function(\n\tlangx,\n\tisBrowser,\n\tgeom,\n\tstyler,\n\tscrollingElement\n){\n    'use strict';\n\n\tvar autoScrolls = [],\n\t\tscrolling = false,\n\t\tscrollEl,\n\t\tscrollCustomFn,\n\t\tpointerElemChangedInterval,\n\n\t\tlastPointerElemX,\n\t\tlastPointerElemY,\n\n\n\t\tscrollParentEl = null;\n\n\tvar\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari;\n\n\n\t/**\n\t * Checks if a side of an element is scrolled past a side of it's parents\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\n\t * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element\n\t */\n\tfunction _isScrolledPast(el, side) {\n\t\tvar parent = _getParentAutoScrollElement(el, true),\n\t\t\telSide = geom.boundingRect(el)[side];\n\n\t\t/* jshint boss:true */\n\t\twhile (parent) {\n\t\t\tvar parentSide = geom.boundingRect(parent)[side],\n\t\t\t\tvisible;\n\n\t\t\tif (side === 'top' || side === 'left') {\n\t\t\t\tvisible = elSide >= parentSide;\n\t\t\t} else {\n\t\t\t\tvisible = elSide <= parentSide;\n\t\t\t}\n\n\t\t\tif (!visible) return parent;\n\n\t\t\tif (parent === scrollingElement()) break;\n\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n\t * The value is returned in real pixels.\n\t * @param  {HTMLElement} el\n\t * @return {Array}             Offsets in the format of [left, top]\n\t */\n\tfunction _getRelativeScrollOffset(el) {\n\t\tvar offsetLeft = 0,\n\t\t\toffsetTop = 0,\n\t\t\twinScroller = scrollingElement();\n\n\t\tif (el) {\n\t\t\tdo {\n\t\t\t\tvar matrix = transforms.matrix(el),\n\t\t\t\t\tscaleX = matrix.a,\n\t\t\t\t\tscaleY = matrix.d;\n\n\t\t\t\toffsetLeft += el.scrollLeft * scaleX;\n\t\t\t\toffsetTop += el.scrollTop * scaleY;\n\t\t\t} while (el !== winScroller && (el = el.parentNode));\n\t\t}\n\n\t\treturn [offsetLeft, offsetTop];\n\t}\n\n\tvar _getParentAutoScrollElement = function(el, includeSelf) {\n\t\t// skip to window\n\t\tif (!el || !el.getBoundingClientRect) return scrollingElement();\n\n\t\tvar elem = el;\n\t\tvar gotSelf = false;\n\t\tdo {\n\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\n\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n\t\t\t\tvar elemCSS = styler.css(elem);\n\t\t\t\tif (\n\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\n\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\n\t\t\t\t) {\n\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return scrollingElement();\n\n\t\t\t\t\tif (gotSelf || includeSelf) return elem;\n\t\t\t\t\tgotSelf = true;\n\t\t\t\t}\n\t\t\t}\n\t\t/* jshint boss:true */\n\t\t} while (elem = elem.parentNode);\n\n\t\treturn scrollingElement();\n\t},\n\n\n\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback,expando) {\n\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\tif (options.scroll) {\n\t\t\tvar _this = rootEl ? rootEl[expando] : window,\n\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\tx = evt.clientX,\n\t\t\t\ty = evt.clientY,\n\n\t\t\t\twinScroller = scrollingElement(),\n\n\t\t\t\tscrollThisInstance = false;\n\n\t\t\t// Detect scrollEl\n\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t_clearAutoScrolls();\n\n\t\t\t\tscrollEl = options.scroll;\n\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\n\t\t\t\t\tscrollParentEl = scrollEl;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tvar layersOut = 0;\n\t\t\tvar currentParent = scrollEl;\n\t\t\tdo {\n\t\t\t\tvar\tel = currentParent,\n\t\t\t\t\trect = geom.boundingRect(el),\n\n\t\t\t\t\ttop = rect.top,\n\t\t\t\t\tbottom = rect.bottom,\n\t\t\t\t\tleft = rect.left,\n\t\t\t\t\tright = rect.right,\n\n\t\t\t\t\twidth = rect.width,\n\t\t\t\t\theight = rect.height,\n\n\t\t\t\t\tscrollWidth,\n\t\t\t\t\tscrollHeight,\n\n\t\t\t\t\tcss,\n\n\t\t\t\t\tvx,\n\t\t\t\t\tvy,\n\n\t\t\t\t\tcanScrollX,\n\t\t\t\t\tcanScrollY,\n\n\t\t\t\t\tscrollPosX,\n\t\t\t\t\tscrollPosY;\n\n\n\t\t\t\tscrollWidth = el.scrollWidth;\n\t\t\t\tscrollHeight = el.scrollHeight;\n\n\t\t\t\tcss = styler.css(el);\n\n\t\t\t\tscrollPosX = el.scrollLeft;\n\t\t\t\tscrollPosY = el.scrollTop;\n\n\t\t\t\tif (el === winScroller) {\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\n\t\t\t\t} else {\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\n\t\t\t\t}\n\n\t\t\t\tvx = canScrollX && (Math.abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n\n\t\t\t\tvy = canScrollY && (Math.abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n\n\t\t\t\tif (!autoScrolls[layersOut]) {\n\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\n\t\t\t\t\t\tif (!autoScrolls[i]) {\n\t\t\t\t\t\t\tautoScrolls[i] = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n\t\t\t\t\tautoScrolls[layersOut].el = el;\n\t\t\t\t\tautoScrolls[layersOut].vx = vx;\n\t\t\t\t\tautoScrolls[layersOut].vy = vy;\n\n\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\n\n\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\n\t\t\t\t\t\tscrollThisInstance = true;\n\t\t\t\t\t\t/* jshint loopfunc:true */\n\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\n\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n\t\t\t\t\t\t\t///if (isFallback && this.layer === 0) {\n\t\t\t\t\t\t\t///\tSortable.active._emulateDragOver(true);\n\t\t\t\t\t\t\t///\tSortable.active._onTouchMove(toudrachEvt, true);\n\t\t\t\t\t\t\t///}\n\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeom.scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlayersOut++;\n\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = _getParentAutoScrollElement(currentParent, false)));\n\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n\t\t}\n\t}, 30),\n\n\t_clearAutoScrolls = function () {\n\t\tautoScrolls.forEach(function(autoScroll) {\n\t\t\tclearInterval(autoScroll.pid);\n\t\t});\n\t\tautoScrolls = [];\n\t},\n\n\t_handleAutoScroll = function(evt, options,fallback,expando) {\n\t\tvar x = evt.clientX,\n\t\t\ty = evt.clientY,\n\n\t\t\telem = document.elementFromPoint(x, y);\n\n\t\t// IE does not seem to have native autoscroll,\n\t\t// Edge's autoscroll seems too conditional,\n\t\t// MACOS Safari does not have autoscroll,\n\t\t// Firefox and Chrome are good\n\t\tif (fallback || Edge || IE11OrLess || Safari) {\n\t\t\t_throttleTimeout = _autoScroll(evt, options, elem, fallback,expando);\n\n\t\t\t// Listener for pointer element change\n\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\n\t\t\tif (\n\t\t\t\tscrolling &&\n\t\t\t\t(\n\t\t\t\t\t!pointerElemChangedInterval ||\n\t\t\t\t\tx !== lastPointerElemX ||\n\t\t\t\t\ty !== lastPointerElemY\n\t\t\t\t)\n\t\t\t) {\n\n\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\n\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\n\t\t\t\tpointerElemChangedInterval = setInterval(function() {\n\t\t\t\t\t//if (!dragEl) return;\n\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\n\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\t\t\t\t\tif (newElem !== ogElemScroller) {\n\t\t\t\t\t\togElemScroller = newElem;\n\t\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\t\t_throttleTimeout = _autoScroll(evt, options, ogElemScroller, fallback);\n\t\t\t\t\t}\n\t\t\t\t}, 10);\n\t\t\t\tlastPointerElemX = x;\n\t\t\t\tlastPointerElemY = y;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n\t\t\tif (!options.bubbleScroll || _getParentAutoScrollElement(elem, true) === scrollingElement()) {\n\t\t\t\t_clearAutoScrolls();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t_throttleTimeout = _autoScroll(evt, options, _getParentAutoScrollElement(elem, false), false);\n\t\t}\n\t};\n\n\n\tvar _throttleTimeout;\n\tfunction _throttle(callback, ms) {\n\t\treturn langx.debounce(callback,ms);\n\t}\n\n\tfunction _cancelThrottle() {\n\t\t//clearTimeout(_throttleTimeout);\n\t\t//_throttleTimeout = void 0;\n\t\tif (_throttleTimeout && _throttleTimeout.stop) {\n\t\t\t_throttleTimeout.stop();\n\t\t\t_throttleTimeout = void 0;\n\t\t}\n\t}\n\n\t\n\tfunction _nulling() {\n\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\n\t\tpointerElemChangedInterval = null;\n\t\tlastPointerElemX = null;\n\t\tlastPointerElemY = null;\n\n\t\tthis.scrollEl =\n\t\tthis.scrollParentEl =\n\t\tthis.autoScrolls.length = null;\n\n\n\n\t}\n\treturn {\n\t\tautoScrolls,\n\t\t\n\t\t_isScrolledPast,\n\t\t_getRelativeScrollOffset,\n\t\t_autoScroll,\n\n\t\t_clearAutoScrolls,\n\t\t_handleAutoScroll,\n\n\t\t_throttle,\n\t\t_cancelThrottle,\n\t\t_nulling\n\t}\n});\ndefine('skylark-domx-layouts/oriented',[\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-finder\",\r\n\t\"./Orientation\"\r\n],function(\r\n\tgeom,\r\n\tstyler,\r\n\tfinder,\r\n\tOrientation\r\n){\r\n\r\n\t/**\r\n\t * Detects children orientation.\r\n\t */\r\n\tfunction oriented(el, options) {\r\n\t\tvar elCSS = styler.css(el),\r\n\r\n\t\t\telWidth = geom.contentRect(el).width,\r\n\r\n\t\t\tchild1 = finder.childAt(el, 0, options),\r\n\t\t\tchild2 = finder.childAt(el, 1, options),\r\n\t\t\tfirstChildCSS = child1 && styler.css(child1),\r\n\t\t\tsecondChildCSS = child2 && styler.css(child2),\r\n\r\n\t\t\tfirstChildWidth = child1 && geom.marginSize(child1).width,\r\n\t\t\tsecondChildWidth = child2 && geom.marginSize(child2).width;\r\n\r\n\t\tif (elCSS.display === 'flex') {\r\n\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\r\n\t\t\t? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (elCSS.display === 'grid') {\r\n\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (child1 && firstChildCSS.float !== 'none') {\r\n\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\r\n\r\n\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\r\n\t\t\t\tOrientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\treturn (child1 &&\r\n\t\t\t(\r\n\t\t\t\tfirstChildCSS.display === 'block' ||\r\n\t\t\t\tfirstChildCSS.display === 'flex' ||\r\n\t\t\t\tfirstChildCSS.display === 'table' ||\r\n\t\t\t\tfirstChildCSS.display === 'grid' ||\r\n\t\t\t\tfirstChildWidth >= elWidth &&\r\n\t\t\t\telCSS.float === 'none' ||\r\n\t\t\t\tchild2 &&\r\n\t\t\t\telCSS.float === 'none' &&\r\n\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\r\n\t\t\t) ?\r\n\t\t\tOrientation.Vertical : Orientation.Horizontal\r\n\t\t);\r\n\t}\r\n\r\n\treturn oriented;\r\n});\ndefine('skylark-sortable/fallback/ghoster',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/isBrowser\",\n\t\"skylark-langx-hoster/isMobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-scrolls/scrollingElement\",\n\t\"skylark-domx-layouts/oriented\",\n\t\"skylark-devices-points/touch\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tscrollingElement,\n\toriented,\n\ttouch\n){\n    'use strict';\n\n\t/**\n\t * Returns the \"bounding client rect\" of given element\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\n\t * @return {Object}                        The boundingClientRect of el\n\t */\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\n\t\tif (!el.getBoundingClientRect && el !== window) return;\n\t\tvar {\n\t\t\ttop,\n\t\t\tleft,\n\t\t\tbottom,\n\t\t\tright,\n\t\t\twidth,\n\t\t\theight\n\t\t} = geom.boundingRect(el);\n\t\t\n\t\tif (adjustForTransform && el !== window) {\n\t\t\t// Adjust for scale()\n\t\t\tvar matrix = transforms.matrix(container || el),\n\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\tif (matrix) {\n\t\t\t\ttop /= scaleY;\n\t\t\t\tleft /= scaleX;\n\n\t\t\t\twidth /= scaleX;\n\t\t\t\theight /= scaleY;\n\n\t\t\t\tbottom = top + height;\n\t\t\t\tright = left + width;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\tbottom: bottom,\n\t\t\tright: right,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\n\tvar ghoster = {\n\t\tghostEl : null,\n\n\t\tPositionGhostAbsolutely : isMobile.apple.device, //IOS\n\t\t// For positioning ghost absolutely\n\t\tghostRelativeParent : null,\n\t\tghostRelativeParentInitialScroll : [], // (left, top)\n\n\t\t_ghostIsLast : function (evt, axis, el) {\n\t\t\tvar elRect = geom.boundingRect(finder.lastChild(el,{ignoreHidden : true,excluding : [this.ghostEl]})),\n\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\n\t\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\n\t\t\t\tspacer = 10;\n\n\t\t\treturn (\n\t\t\t\taxis === 'vertical' ?\n\t\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\n\t\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\n\t\t\t);\n\t\t},\n\n\n\t\t/**\n\t\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n\t\t * @param  {HTMLElement} el       Parent element\n\t\t * @return {HTMLElement}          The last child, ignoring ghostEl\n\t\t */\n\t\t_lastChild : function (el) {\n\t\t\t/*\n\t\t\tvar last = el.lastElementChild;\n\n\t\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\n\t\t\t\tlast = last.previousElementSibling;\n\t\t\t}\n\n\t\t\treturn last || null;\n\t\t\t*/\n\t\t\treturn finder.lastChild(el,{\n\t\t\t\tignoreHidden : true,\n\t\t\t\texcluding : [this.ghostEl]\n\t\t\t})\n\t\t},\n\n\t\t_appendGhost: function (dragEl,container,options) {\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\n\t\t\t// Not being adjusted for\n\t\t\tvar /// dragEl = dnd.dragEl,\n\t\t\t\tghostEl = this.ghostEl;\n\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar ///container = this.options.fallbackOnBody ? document.body : rootEl,\n\t\t\t\t\trect = _getRect(dragEl, true, container, !this.PositionGhostAbsolutely),\n\t\t\t\t\tcss = styler.css(dragEl);\n\t\t\t\t\t///options = this.options;\n\n\t\t\t\t// Position absolutely\n\t\t\t\tif (this.PositionGhostAbsolutely) {\n\t\t\t\t\t// Get relatively positioned parent\n\t\t\t\t\tvar ghostRelativeParent = this.ghostRelativeParent = container;\n\n\t\t\t\t\twhile (\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'position') === 'static' &&\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'transform') === 'none' &&\n\t\t\t\t\t\tghostRelativeParent !== document\n\t\t\t\t\t) {\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document) {\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\n\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n\t\t\t\t\t\tif (ghostRelativeParent === document) {\n\t\t\t\t\t\t\tghostRelativeParent = this.ghostRelativeParent = scrollingElement();\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\n\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tghostRelativeParent = this.ghostRelativeParent = scrollingElement();\n\t\t\t\t\t}\n\t\t\t\t\tghostRelativeParentInitialScroll = autoscroll._getRelativeScrollOffset(ghostRelativeParent);\n\t\t\t\t}\n\n\n\t\t\t\tghostEl =this.ghostEl = dragEl.cloneNode(true);\n\n\t\t\t\tstyler.toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\tstyler.toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\tstyler.toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t/*\n\t\t\t\tstyler.css(ghostEl, 'box-sizing', 'border-box');\n\t\t\t\tstyler.css(ghostEl, 'margin', 0);\n\t\t\t\tstyler.css(ghostEl, 'top', rect.top);\n\t\t\t\tstyler.css(ghostEl, 'left', rect.left);\n\t\t\t\tstyler.css(ghostEl, 'width', rect.width);\n\t\t\t\tstyler.css(ghostEl, 'height', rect.height);\n\t\t\t\tstyler.css(ghostEl, 'opacity', '0.8');\n\t\t\t\tstyler.css(ghostEl, 'position', (this.PositionGhostAbsolutely ? 'absolute' : 'fixed'));\n\t\t\t\tstyler.css(ghostEl, 'zIndex', '100000');\n\t\t\t\tstyler.css(ghostEl, 'pointerEvents', 'none');\n\t\t\t\t*/\n\n\t\t\t\tstyler.css(ghostEl, {\n\t\t\t\t\t'box-sizing': 'border-box',\n\t\t\t\t\t'margin': 0,\n\t\t\t\t\t'top': rect.top,\n\t\t\t\t\t'left': rect.left,\n\t\t\t\t\t'width': rect.width,\n\t\t\t\t\t'height': rect.height,\n\t\t\t\t\t'opacity': '0.8',\n\t\t\t\t\t'position': (this.PositionGhostAbsolutely ? 'absolute' : 'fixed'),\n\t\t\t\t\t'zIndex': '100000',\n\t\t\t\t\t'pointerEvents': 'none'\t\n\t\t\t\t});\n\t\t\t\tcontainer.appendChild(ghostEl);\n\t\t\t}\n\t\t},\n\n\t\tgetRelativeScrollOffset : function(){\n\t\t\treturn this.PositionGhostAbsolutely && this.ghostRelativeParent && autoscroll._getRelativeScrollOffset(this.ghostRelativeParent);\n\t\t},\n\n\t\tremove : function() {\n\t\t\tif (this.ghostEl) {\n\t\t\t\tnoder.remove(this.ghostEl);\n\t\t\t} \n\t\t\tthis.ghostEl = null;\n\n\t\t}\n\n\n\t};\n\n\treturn ghoster;\n\t\n});\ndefine('skylark-sortable/fallback/MousedDragDrop',[\n\t\"skylark-langx/langx\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-transforms\",\n\t\"./ghoster\",\n\t\"./autoscroll\"\n],function(\n\tlangx,\n\t$,\n\teventer,\n\tstyler,\n\ttransforms,\n\tghoster,\n\tautoscroll\n){\n\tvar MousedDragDrop = langx.Emitter.inherit({\n\t\t_construct : function(dnd) {\n\t\t\tthis.dnd = dnd;\n\n\t\t\tvar $doc = $(document);\n\n\t\t\tthis.listenTo($doc,\"mousemove\",this._onTouchMove.bind(this));\n\t\t\tthis.listenTo($doc,\"mouseup\",this._onMouseUp.bind(this));\n\n\t\t},\n\n\t\t_onMouseUp : function(evt) {\n\t\t\tvar dnd = this.dnd;\n        \tif (dnd.putSortable) {\n        \t\tdnd.putSortable._onDrop(evt)\n        \t}\n        \tif (dnd.draggable) {\n        \t\tdnd.draggable._onDragEnd(evt);\n        \t}\n        \tghoster.remove();\n        \tthis.destroy();\n\t\t},\n\n        _onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\n            //dnd.log(\"_onTouchMove\",\"start\");\n            var dnd = this.dnd,\n            \tghostEl = ghoster.ghostEl,\n            \tdraggable = dnd.draggable,\n            \tdragEl = draggable.dragEl,\n            \ttapEvt = dnd.tapEvt;\n            if (tapEvt) {\n                var options =  draggable.options,\n                    fallbackTolerance = options.fallbackTolerance,\n                    fallbackOffset = options.fallbackOffset,\n                    touch = evt.touches ? evt.touches[0] : evt,\n                    matrix = ghostEl && transforms.matrix(ghostEl),\n                    scaleX = ghostEl && matrix && matrix.a,\n                    scaleY = ghostEl && matrix && matrix.d,\n                    relativeScrollOffset = ghoster.getRelativeScrollOffset(),\n                    dx = ((touch.clientX - tapEvt.clientX)\n                            + fallbackOffset.x) / (scaleX || 1)\n                            + (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\n                    dy = ((touch.clientY - tapEvt.clientY)\n                            + fallbackOffset.y) / (scaleY || 1)\n                            + (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\n                    translate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n                // only set the status to dragging, when we are actually dragging\n                if (!dnd.active && !dnd.awaitingDragStarted) {\n                    if (fallbackTolerance &&\n                        Math.min( Math.abs(touch.clientX - draggable._lastX),  Math.abs(touch.clientY - draggable._lastY)) < fallbackTolerance\n                    ) {\n                        return;\n                    }\n                    draggable._onDragStart(evt, true);\n\n                    ghoster._appendGhost(dragEl,document.body,draggable.options);\n\n                \tdnd.ignoreNextClick = true;\n                \tthis._loopId = setInterval(this._emulateDragOver.bind(this), 50);\n\n                }\n\n                !forAutoScroll && dnd._handleAutoScroll(touch, true);\n\n                ///moved = true;\n                dnd.touchEvt = touch;\n\n                if (ghostEl) {\n                    //styler.css(ghostEl, 'webkitTransform', translate3d);\n                    //styler.css(ghostEl, 'mozTransform', translate3d);\n                    //styler.css(ghostEl, 'msTransform', translate3d);\n                    styler.css(ghostEl, 'transform', translate3d);\n\n                }\n\n                //evt.cancelable && evt.preventDefault();\n                evt.preventDefault()\n            }\n        },\n\n\t\t_emulateDragOver: function (forAutoScroll) {\n\t\t\tvar dnd = this.dnd,\n\t\t\t\tdragEl = dnd.draggable.dragEl,\n\t\t\t\ttouchEvt = dnd.touchEvt;\n\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\t//_hideGhostForTarget();\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\tvar parent = target;\n\n\t\t\t\twhile (target && target.shadowRoot) {\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\t\tif (target === parent) break;\n\t\t\t\t\tparent = target;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[dnd.expando]) {\n\t\t\t\t\t\t\tvar inserted;\n\n\t\t\t\t\t\t\tinserted = parent[dnd.expando]._onDragOver({\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t//if (inserted && !this.options.dragoverBubble) {\n\t\t\t\t\t\t\tif (inserted) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(touchEvt);\n\n\t\t\t\t//_unhideGhostForTarget();\n\t\t\t}\n\t\t},\n\n\n\t\t_handleAutoScroll: function(evt, fallback) {\n\n\t\t\tif (!dnd.draggable.dragEl || !dnd.draggable.options.scroll) return;\n\n\t\t\treturn autoscroll._handleAutoScroll(evt,dnd.draggable.options,fallback,dnd.expando);\n\t\t},\n\n\t\tdestroy : function() {\n\t\t\tthis.unlistenTo();\n        \tif (this._loopId) {\n        \t\tclearInterval(this._loopId);\n        \t}\n\n\t\t}\n\t});\n\n\treturn MousedDragDrop;\n});\ndefine('skylark-sortable/dnd',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"./fallback/MousedDragDrop\"\n],function(\n\tskylark,\n\tlangx,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\tMousedDragDrop\n){\n    'use strict';\n\n\n\tvar expando = 'Sortable' + (new Date).getTime();\n\n\n\tvar dnd = {\n\t\tlog : function log(category,message) {\n\t\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\n\t\t},\n\n\t\texpando,\n\n\t\tactiveGroup : null,\n\t\tactive : null,\n\t\tputSortable : null,\n\t\tsortables : [],\n\n\n\t\tcloneEl : null,\n\n\t\tignoreNextClick : false,\n        awaitingDragStarted : false,\n\n\n\t\ttouchEvt : null,\n\n        prepare: function(draggable) {\n        \tthis.draggable = draggable;\n            if (!draggable.nativeDraggable) {\n            \tthis._fallbacker = new MousedDragDrop(this);\n            }\n\n\t\t},\n\n        start: function(draggable, event) {\n        \tthis.draggable = draggable;\n\n\n\t\t\tvar el = draggable.elm(),\n\t\t\t\townerDocument = el.ownerDocument;\n\n\n\t\t\teventer.on(ownerDocument, 'dragover', this.nearestEmptyInsertDetectEvent);\n\t\t\t///eventer.on(ownerDocument, 'mousemove', this.nearestEmptyInsertDetectEvent);\n\t\t\t///eventer.on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n\n\t\t\tif (this.draggable.nativeDraggable) {\n                ///eventer.on(document, 'dragover', this._handleAutoScroll);\n                eventer.on(document, 'dragover', this._checkAlignment);\n            } else {\n                ///eventer.on(document, 'mousemove', this._handleAutoScroll);\n            }\n        },\n\n        over : function(evt) {\n\t\t\t//this._handleAutoScroll(evt);\n        },\n\n        end: function(dropped) {\n\t  \t\teventer.off(document, 'dragover', this.nearestEmptyInsertDetectEvent);\n\t  \t\t///eventer.off(document, 'mousemove', this.nearestEmptyInsertDetectEvent);\n\t\n\t\t\tif (this.draggable.nativeDraggable) {\n\t\t\t\t///eventer.off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\teventer.off(document, 'dragover', this._checkAlignment);\n\t\t\t} else {\n\t\t        // Unbind events\n\t            ///eventer.off(document, 'mousemove', this._onTouchMove);\n\n\t\t\t}\n\n        \tthis._nulling();\n \t\t},\n\n\t\tnearestEmptyInsertDetectEvent :function (evt) {\n\t\t\tif (dnd.draggable.dragEl) {\n\t\t\t\t///evt = evt.touches ? evt.touches[0] : evt;\n\t\t\t\tvar nearest = dnd._detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n\t\t\t\tif (nearest) {\n\t\t\t\t\t// Create imitation event\n\t\t\t\t\tvar event = {};\n\t\t\t\t\tfor (var i in evt) {\n\t\t\t\t\t\tevent[i] = evt[i];\n\t\t\t\t\t}\n\t\t\t\t\tevent.target = event.rootEl = nearest;\n\t\t\t\t\tevent.preventDefault = void 0;\n\t\t\t\t\tevent.stopPropagation = void 0;\n\t\t\t\t\tnearest[expando]._onDragOver(event);\n\t\t\t\t}\n\t\t\t}\n\t\t}, \n\n\t\t/**\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n\t\t * @param  {Number} x      X position\n\t\t * @param  {Number} y      Y position\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\n\t\t */\n\t\t_detectNearestEmptySortable : function(x, y) {\n\t\t\tvar sortables = this.sortables;\n\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\n\t\t\t\tif (finder.lastChild(sortables[i],{ignoreHidden : true,excluding : [this.ghostEl]})) continue;\n\n\t\t\t\tvar rect = geom.boundingRect(sortables[i]),\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\n\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\n\t\t\t\t\treturn sortables[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_checkAlignment : function(evt) {\n\t\t\tif (!dnd.draggable.dragEl || !dnd.draggable.dragEl.parentNode) return;\n\t\t\tdnd.draggable._computeIsAligned(evt);\n\t\t},\n\n\n\t\t_disableDraggable : function (el) {\n\t\t\tel.draggable = false;\n\t\t},\n\n\t\t_nulling: function() {\n\n\t\t\tdnd.rootEl =\n\t\t\tdnd.parentEl =\n\t\t\t//ghoster.ghostEl =\n\t\t\tdnd.nextEl =\n\t\t\tdnd.cloneEl =\n\t\t\t///lastDownEl =\n\n\n\t\t\tdnd.tapEvt =\n\t\t\tdnd.touchEvt =\n\n\t\t\tdnd.oldIndex =\n\n\t\t\tdnd.putSortable =\n\t\t\tdnd.activeGroup =\n\t\t\tdnd.active = null;\n\n\t\t}\n\n\n\t};\n\n\n\treturn dnd;\n\t\n});\ndefine('skylark-sortable/containers',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"./dnd\"\n],function(\n\tskylark,\n\tlangx,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tdnd\n){\n    'use strict';\n\n\tvar\n\t\t/**\n\t\t * Returns the index of an element within its parent for a selected set of\n\t\t * elements\n\t\t * @param  {HTMLElement} el\n\t\t * @param  {selector} selector\n\t\t * @return {number}\n\t\t */\n\t\t_index = function (el, selector) {\n\t\t\treturn finder.index(el,function(el){\n\t\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\treturn false;\t\t\t\n\t\t\t})\n\t\t},\n\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\n\t\t\tvar targetRect = geom.boundingRect(el),\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t\t},\n\n\t\t_isElInRowColumn = function(el1, el2, axis) {\n\t\t\tvar dragEl = dnd.draggable.dragEl;\n\n\t\t\tvar el1Rect = geom.boundingRect(el1),//el1 === dragEl && realDragElRect || geom.boundingRect(el1),\n\t\t\t\tel2Rect = geom.boundingRect(el2),//el2 === dragEl && realDragElRect || geom.boundingRect(el2),\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\t\treturn (\n\t\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t\t);\n\t\t};\n\n\n\treturn {\n\t\t_index,\n\t\t_isElInRowColumn,\n\t\t_isClientInRowColumn\n\t}\n\t\n});\ndefine('skylark-sortable/Sortable',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/isBrowser\",\n\t\"skylark-langx-hoster/isMobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-scrolls/scrollingElement\",\n\t\"skylark-domx-layouts/oriented\",\n    \"skylark-domx-plugins\",\n\t\"skylark-devices-points/touch\",\n\t\"./fallback/autoscroll\",\n\t\"./containers\",\n\t\"./dnd\",\n\t\"./fallback/ghoster\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tscrollingElement,\n\toriented,\n\tplugins,\n\ttouch,\n\tautoscroll,\n\tcontainers,\n\tdnd,\n\tghoster,\n){\n\n\t'use strict';\n    var \n        lastDownEl,\n        scrolling,\n\n        savedInputChecked = [];\n\n\n    function _find(ctx, tagName, iterator) {\n        if (ctx) {\n            var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n            if (iterator) {\n                for (; i < n; i++) {\n                    iterator(list[i], i);\n                }\n            }\n\n            return list;\n        }\n\n        return [];\n    }\n\n\n    function _saveInputCheckedState(root) {\n        savedInputChecked.length = 0;\n\n        var inputs = root.getElementsByTagName('input');\n        var idx = inputs.length;\n\n        while (idx--) {\n            var el = inputs[idx];\n            el.checked && savedInputChecked.push(el);\n        }\n    }\n\n\n\tvar \n\t\t//parentEl,\n\t\t//ghostEl,\n\t\t//cloneEl,\n\t\t///rootEl,\n\t\t///nextEl,\n\t\t//lastDownEl,\n\n\t\t//scrollEl,\n\t\t//scrollParentEl,\n\t\t//scrollCustomFn,\n\n\t\t//oldIndex,\n\t\tnewIndex,\n\t\t//oldDraggableIndex,\n\t\tnewDraggableIndex,\n\n\t\t///activeGroup,\n\t\t//putSortable,\n\n\t\t//awaitingDragStarted = false,\n\t\t//ignoreNextClick = false,\n\t\t//sortables = [],\n\n\t\t//pointerElemChangedInterval,\n\n\t\t//tapEvt,\n\t\t//touchEvt,\n\n\t\tmoved,\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\t/*\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\n\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\n\t\t*/\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari,\n\n\t\tIOS = isMobile && isMobile.apple.device,\n\n\t\t//CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\n\n\t\t/*\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\t\t*/\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents,\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\t//savedInputChecked = [],\n\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t};\n\n\n\t\t//_hideGhostForTarget = function() {\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\n\t\t//\t\tstyler.css(ghostEl, 'display', 'none');\n\t\t//\t}\n\t\t//},\n\n\t\t//_unhideGhostForTarget = function() {\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\n\t\t//\t\tstyler.css(ghostEl, 'display', '');\n\t\t//\t}\n\t\t//};\n\n\n\t/*\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\n\t// Fixed #973:\n\teventer.on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\t*/\n\n\n\tvar Sortable =  plugins.Plugin.inherit({\n        klassName: \"Sortable\",\n        \n        pluginName : \"intg.sortable\",\n\n\n\t\toptions : {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\t//draggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\n\t\t\t\treturn oriented(this.el, langx.mixin({\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\n\t\t\t\t\t\t\t\t},this.options));\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\n\n\t\t\tfallbackOnBody: true,  //fix\n\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\t//supportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t},\n\n\n\t\t/**\n\t\t * @class  Sortable\n\t\t * @param  {HTMLElement}  el\n\t\t * @param  {Object}       [options]\n\t\t */\n\t\t_construct : function Sortable(el, options) {\n            this.overrided(el,options);\n\n\t\t\tthis.el = el; // root element\n\n\t\t\t// Export instance\n\t\t\tel[dnd.expando] = this;\n\n\t\t\toptions = this.options;\n\n\t\t\toptions.draggable = options.draggable || /[uo]l/i.test(el.nodeName) ? '>li' : '>*';\n\n\n\t\t\t_prepareGroup(options);\n\n\t\t\t// Bind all private methods\n\t\t\tfor (var fn in this) {\n\t\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Setup drag mode\n\t\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\t\tthis.options.touchStartThreshold = 1;\n\t\t\t}\n\n\n            // Bind events\n            touch.mousy(el);\n            eventer.on(el, 'mousedown', this._onMouseDown);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.on(el, 'dragover', this);\n\t\t\t\teventer.on(el, 'dragenter', this);\n\t\t        eventer.on(el, 'drop', this);\n\t\t\t}\n\n\t\t\tdnd.sortables.push(this.el);\n\n\t\t\t// Restore sorting\n\t\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\n\n\t        eventer.on(el, 'selectstart', this);\n\n\t\t},\n\n\n\t\t//drag start \n        // handle moudedown event\n        _onMouseDown: function (/** Event|TouchEvent */evt) {\n            //if (!evt.cancelable) return;\n            var _this = this,\n                el = this._elm,\n                options = this.options,\n                preventOnFilter = options.preventOnFilter,\n                type = evt.type,\n                touch = evt.touches && evt.touches[0],\n                target = (touch || evt).target,\n                originalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\n                filter = options.filter,\n                startIndex,\n                startDraggableIndex;\n\n            _saveInputCheckedState(el);\n\n            // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n            ///if (dnd.dragEl) {\n            ///    return;\n            ///}\n\n            if (/mousedown/.test(type) && evt.button !== 0 || options.disabled) {\n                return; // only left button and enabled\n            }\n\n            // cancel dnd if original target is content editable\n            if (originalTarget.isContentEditable) {\n                return;\n            }\n\n            target = finder.closest(target, options.draggable, el, false);\n\n\n            if (lastDownEl === target) {\n                // Ignoring duplicate `down`\n                return;\n            }\n\n            dnd.log(\"_onTapStart\",target.tagName+\",\"+target.className);\n\n            // Get the index of the dragged element within its parent\n            startIndex = containers._index(target);\n            startDraggableIndex = containers._index(target, options.draggable);\n\n            // Check filter\n            if (typeof filter === 'function') {\n                if (filter.call(this, evt, target, this)) {\n                    _this._dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\n                    return; // cancel dnd\n                }\n            }\n            else if (filter) {\n                filter = filter.split(',').some(function (criteria) {\n                    criteria = finder.closest(originalTarget, criteria.trim(), el, false);\n\n                    if (criteria) {\n                        _this._dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n                        return true;\n                    }\n                });\n\n                if (filter) {\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\n                    return; // cancel dnd\n                }\n            }\n\n            if (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\n                return;\n            }\n\n            // Prepare `dragstart`\n            this._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\n        },\n\n        _prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\n            var _this = this,\n                el = _this._elm,\n                options = _this.options,\n                ownerDocument = el.ownerDocument,\n                dragStartFn,\n                dragEl = this.dragEl,\n                rootEl,\n                parentEl = dnd.parentEl,\n                nextEl = dnd.nextEl,\n                oldIndex = dnd.oldIndex,\n                oldDraggableIndex = dnd.oldDraggableIndex,\n                tapEvt = dnd.tapEvt;\n\n            dnd.log(\"_prepareDragStart\",\"start\");\n            if (target && !dragEl && (target.parentNode === el)) {\n                rootEl = el;\n                dragEl = this.dragEl = target;\n                parentEl = dnd.parentEl= dragEl.parentNode;\n                nextEl = dnd.nextEl = dragEl.nextSibling;\n                lastDownEl = target;\n                dnd.activeGroup = this.options.group;\n                oldIndex = dnd.oldIndex = startIndex;\n                oldDraggableIndex = dnd.oldDraggableIndex =  startDraggableIndex;\n\n                tapEvt = dnd.tapEvt = {\n                    target: dragEl,\n                    clientX: (touch || evt).clientX,\n                    clientY: (touch || evt).clientY\n                };\n\n                this._lastX = (touch || evt).clientX;\n                this._lastY = (touch || evt).clientY;\n\n                dragEl.style['will-change'] = 'all';\n                // undo animation if needed\n                dragEl.style.transition = '';\n                dragEl.style.transform = '';\n\n                dragStartFn = function () {\n                    if ( _this.nativeDraggable) {\n                        dragEl.draggable = true;\n                    }\n\n                    // Bind the events: dragstart/dragend\n                    _this._triggerDragStart(evt, touch);\n\n                    // Drag start event\n                    _this._dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\n\n                    // Chosen item\n                    styler.toggleClass(dragEl, options.chosenClass, true);\n                };\n\n                // Disable \"draggable\"\n                options.ignore.split(',').forEach(function (criteria) {\n                    _find(dragEl, criteria.trim(), dnd._disableDraggable);\n                });\n\n                //eventer.on(ownerDocument, 'mouseup', _this._onDrop); // TODO : lwf\n                ///eventer.on(ownerDocument, 'touchend', _this._onDrop);\n                ///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\n\n                // Make dragEl draggable (must be before delay for FireFox)\n                ///if (FireFox && this.nativeDraggable) {\n                if (this.nativeDraggable) {\n                   this.options.touchStartThreshold = 4;\n                    dragEl.draggable = true;\n                }\n\n                dragStartFn();\n            }\n        },\n\n        //native dnd mode : register _OnDragStart for dragstart event handler \n        //moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\n        _triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n            dnd.log(\"_triggerDragStart\",\"start\");\n            dnd.log(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\n\n            dnd.prepare(this);\n\n            if (!this.nativeDraggable) {\n                ////eventer.on(document, 'mousemove', this._onTouchMove);\n            } else {\n                eventer.on(this.dragEl, 'dragend', this._onDragEnd);\n                eventer.on(this.dragEl, 'dragstart', this._onDragStart);\n            }\n\n            try {\n                if (document.selection) {\n                    // Timeout neccessary for IE9\n                    langx.defer(function () {\n                        document.selection.empty();\n                    });\n                } else {\n                    window.getSelection().removeAllRanges();\n                }\n            } catch (err) {\n            }\n        },\n\n        _onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\n            dnd.log(\"_onDragStart\",\"start\");\n            var _this = this,\n                dragEl = this.dragEl,\n                rootEl = this._elm;\n\n            var dataTransfer = evt.dataTransfer;\n            var options = _this.options;\n\n            // Setup clone\n            var cloneEl = dnd.cloneEl = noder.clone(dragEl,true);\n\n            cloneEl.draggable = false;\n            cloneEl.style['will-change'] = '';\n\n            //this._hideClone();\n\n            styler.toggleClass(cloneEl, _this.options.chosenClass, false);\n\n\n            // #1143: IFrame support workaround\n            _this._cloneId = langx.defer(function () {\n                if (!_this.options.removeCloneOnHide) {\n                    rootEl.insertBefore(cloneEl, dragEl);\n                }\n                _this._dispatchEvent(_this, rootEl, 'clone', dragEl);\n            });\n\n\n            if (!fallback){\n                styler.toggleClass(dragEl, options.dragClass, true);\n            } \n\n            // Set proper drop events\n            if (fallback) {\n                //dnd.ignoreNextClick = true;\n                //_this._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\n            } else {\n                // Undo what was set in _prepareDragStart before drag started\n                //eventer.off(document, 'mouseup', _this._onDrop); //TODO : lwf\n                ///eventer.off(document, 'touchend', _this._onDrop);\n                ///eventer.off(document, 'touchcancel', _this._onDrop);\n\n                if (dataTransfer) {\n                    dataTransfer.effectAllowed = 'move';\n                    options.setData && options.setData.call(_this, dataTransfer, dragEl);\n                }\n\n                ////eventer.on(document, 'drop', _this);\n\n                // #1276 fix:\n                styler.css(dragEl, 'transform', 'translateZ(0)');\n            }\n\n            dnd.awaitingDragStarted = true;\n\n            _this._dragStartId = langx.defer(_this._dragStarted.bind(_this, fallback, evt));\n            ///eventer.on(document, 'selectstart', _this);\n            ///if (Safari) {\n            ///    styler.css(document.body, 'user-select', 'none');\n            ///}\n        },\n\n        //\n        //\n        _dragStarted: function (fallback, evt) {\n            dnd.awaitingDragStarted = false;\n            var dragEl = this.dragEl,\n                rootEl = this._elm,\n                oldIndex = dnd.oldIndex,\n                oldDraggableIndex = dnd.oldDraggableIndex;\n\n            if (rootEl && dragEl) {\n                //if (this.nativeDraggable) {\n                //    eventer.on(document, 'dragover', this._handleAutoScroll);\n                //    eventer.on(document, 'dragover', dnd._checkAlignment);\n                //}\n                dnd.start(this);\n                var options = this.options;\n\n                // Apply effect\n                !fallback && styler.toggleClass(dragEl, options.dragClass, false);\n                styler.toggleClass(dragEl, options.ghostClass, true);\n\n                // In case dragging an animated element\n                styler.css(dragEl, 'transform', '');\n\n                dnd.active = this;\n\n                //fallback && this._appendGhost();\n\n                // Drag start event\n                this._dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\n            } else {\n                this._nulling();\n            }\n        },\n        _onDragEnd: function (/**Event*/evt) {\n            var el = this._elm,\n                options = this.options,\n                dragEl = this.dragEl,\n                putSortable = dnd.putSortable;\n\n            dnd.awaitingDragStarted = false;\n            scrolling = false;\n            //isCircumstantialInvert = false;\n            //pastFirstInvertThresh = false;\n\n            //clearInterval(this._loopId);\n\n            //clearInterval(pointerElemChangedInterval);\n            autoscroll._nulling();\n            \n            autoscroll._clearAutoScrolls();\n            autoscroll._cancelThrottle();\n\n            clearTimeout(this._dragStartTimer);\n\n\n            if (this._cloneId) {\n                this._cloneId.stop();\n                this._cloneId = null;\n            }\n\n            if (this._dragStartId) {\n                this._dragStartId.stop();\n                this._dragStartId = null;\n            }\n\n\n            // Unbind events\n            ///eventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\n            ///if (Safari) {\n            ///    styler.css(document.body, 'user-select', '');\n           /// }\n\n\n\n            if (this.nativeDraggable) {\n                eventer.off(this.dragEl, 'dragstart', this._onDragStart);\n                eventer.off(this.dragEl, 'dragend', this._onDragEnd);\n            }\n\n            lastDownEl = null;\n\n            savedInputChecked.forEach(function (el) {\n                el.checked = true;\n            });\n\n\n            savedInputChecked.length = 0;\n\n           \tthis.dragEl = null;\n\n            dnd.end();\n\n        },\n\n\n\t\t_onMove : function (fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\t\tvar evt,\n\t\t\t\tsortable = fromEl[dnd.expando],\n\t\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\t\tretVal;\n\n\t\t\tevt = eventer.create(\"move\",{\n\t\t\t\tto : toEl,\n\t\t\t\tfrom : fromEl,\n\t\t\t\tdragged : dragEl,\n\t\t\t\tdraggedRect: dragRect,\n\t\t\t\trelated : targetEl || toEl,\n\t\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\n\t\t\t\twillInsertAfter : willInsertAfter,\n\t\t\t\toriginalEvent : originalEvt\n\t\t\t});\n\n\t\t\tfromEl.dispatchEvent(evt);\n\n\t\t\tif (onMoveFn) {\n\t\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t\t}\n\n\t\t\treturn retVal;\n\t\t},\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target,\n\t\t\t\tdragEl = dnd.draggable.dragEl;\n\n\t\t\t//if (ghostEl && !supportCssPointerEvents) {\n\t\t\t//\t_hideGhostForTarget();\n\t\t\t//\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t//\t_unhideGhostForTarget();\n\t\t\t//} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t//}\n\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = containers._isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\tvar  dragEl = dnd.draggable.dragEl;\n\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,ghoster.ghostEl) : this.options.direction;\n\t\t},\n\n\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation,\n\t\t\t\tdragEl = dnd.draggable.dragEl;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = geom.boundingRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._repaint(target);\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\tstyler.css(target, 'transition', '');\n\t\t\t\t\tstyler.css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_repaint: function(target) {\n\t\t\treturn target.offsetWidth;\n\t\t},\n\n\t\t//_offMoveEvents: function() {\n\t   //\t\teventer.off(document, 'dragover', dnd.nearestEmptyInsertDetectEvent);\n\t   //\t\teventer.off(document, 'mousemove', dnd.nearestEmptyInsertDetectEvent);\n       //\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\teventer.off(document, 'selectstart', this);\n\t\t},\n\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = dnd.active,\n\t\t\t\tisOwner = (dnd.activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this,\n\t\t\t\tdragEl = dnd.draggable.dragEl,\n\t\t\t\trootEl = dnd.draggable.elm(),\n\t\t\t\tputSortable = dnd.putSortable,\n\t\t\t\tnextEl = dnd.nextEl,\n\t\t\t\toldIndex = dnd.oldIndex,\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex;\n            //dnd.log(\"_onDragOver\",\"start\");\n\n\t\t\tif (_silent) return;\n\n\t\t\t// Return invocation when dragEl is inserted (or completed)\n\t\t\tfunction completed(insertion) {\n\t\t\t\tif (insertion) {\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(_this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (activeSortable) {\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (putSortable !== _this && _this !== dnd.active) {\n\t\t\t\t\t\tputSortable = dnd.putSortable = _this;\n\t\t\t\t\t} else if (_this === dnd.active) {\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Animation\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t//_this._handleAutoScroll(evt);\n\t\t\t\t\tdnd.over(evt);\n\t\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(evt);\n\n\t\t\t\t\t// Do not detect for empty insert if already inserted\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_this._dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, containers._index(dragEl), oldDraggableIndex, containers._index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\t/**\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\n\t\t\t */\n\t\t\tfunction _getInsertDirection(target) {\n\t\t\t\tvar dragElIndex = containers._index(dragEl),\n\t\t\t\t\ttargetIndex = containers._index(target);\n\n\t\t\t\tif (dragElIndex < targetIndex) {\n\t\t\t\t\treturn 1;\n\t\t\t\t} else {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\t\t\tvar targetRect = geom.boundingRect(target),\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\n\t\t\t\t\tinvert = false;\n\n\n\t\t\t\tif (!invertSwap) {\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t\t\t) :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tinvert = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Regular\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tinvert = invert || invertSwap;\n\n\t\t\t\tif (invert) {\n\t\t\t\t\t// Invert of regular\n\t\t\t\t\tif (\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\n\t\t\t\treturn completed(false);\n\t\t\t}\n\n\t\t\tif (target !== dragEl) {\n\t\t\t\tdnd.ignoreNextClick = false;\n\t\t\t}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = dnd.activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tdnd.parentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed(true);\n\t\t\t\t}\n\n\t\t\t\tvar elLastChild = ghoster._lastChild(el);\n\n\t\t\t\tif (!elLastChild || ghoster._ghostIsLast(evt, axis, el) && !elLastChild.animated) {\n\t\t\t\t\t// assign target only if condition is true\n\t\t\t\t\tif (elLastChild && el === evt.target) {\n\t\t\t\t\t\ttarget = elLastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tdnd.parentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\n\t\t\t\t\t\tscrolledPastTop = autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\tcontainers._isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed(false);\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = this._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\n\t\t\t\t\t\tif (scrolledPastTop) {\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdnd.parentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance =  Math.abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\trootEl = dnd.draggable.elm(),\n\t\t\t\tdragEl = dnd.draggable.dragEl,\n\t\t\t\tputSortable = dnd.putSortable,\n\t\t\t\tparentEl = dnd.parentEl,\n\t\t\t\toldIndex = dnd.oldIndex,\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex,\n\t\t\t\tnextEl = dnd.nextEl;\n\n\t\t\t/*\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t\n\t\t\tautoscroll._clearAutoScrolls();\n\t\t\tautoscroll._cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\t\t\t*/\n\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\t\t\t// Unbind events\n\t\t\t//eventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(document, 'drop', this);\n\t\t\t\t///eventer.off(el, 'dragstart', this._onDragStart);\n\t\t\t\t//eventer.off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t//eventer.off(document, 'dragover', dnd._checkAlignment);\n\t\t\t}\n\n\t\t\t///if (Safari) {\n\t\t\t///\tstyler.css(document.body, 'user-select', '');\n\t\t\t///}\n\n\t\t\t//this._offMoveEvents();\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghoster.remove();\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tnoder.remove(dnd.cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\t///if (this.nativeDraggable) {\n\t\t\t\t\t///\teventer.off(dragEl, 'dragend', this);\n\t\t\t\t\t///}\n\n\t\t\t\t\tdnd._disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class'sd\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = containers._index(dragEl);\n\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\tthis._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\tthis._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}else {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = containers._index(dragEl);\n\t\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dnd.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\n\n\n\t\t\t/*\n\t\t\tdnd.rootEl =\n\t\t\tdnd.dragEl =\n\t\t\tdnd.parentEl =\n\t\t\tghoster.ghostEl =\n\t\t\tdnd.nextEl =\n\t\t\tdnd.cloneEl =\n\t\t\t///lastDownEl =\n\n\t\t\tautoscroll.scrollEl =\n\t\t\tautoscroll.scrollParentEl =\n\t\t\tautoscroll.autoScrolls.length =\n\t\t\t*/\n\t\t\t//pointerElemChangedInterval =\n\n\t\t\t//tapEvt =\n\t\t\t//dnd.touchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\t//dnd.oldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\trealDragElRect =\n\n\t\t\t//dnd.putSortable =\n\t\t\t//dnd.activeGroup =\n\t\t\t//dnd.active = \n\t\t\tnull;\n\n\t\t},\n\n        _hideClone: function() {\n            if (!dnd.cloneEl.cloneHidden) {\n                styler.hide(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = true;\n                if (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\n                    noder.remove(dnd.cloneEl);\n                }\n            }\n        },\n\n        _showClone: function(putSortable) {\n            var rootEl = dnd.active.el,\n                nextEl = dnd.nextEl;\n\n            if (putSortable.lastPutMode !== 'clone') {\n                this._hideClone();\n                return;\n            }\n\n            if (dnd.cloneEl.cloneHidden) {\n                // show clone at dragEl or original position\n                if (rootEl.contains(dnd.draggable.dragEl) && !this.options.group.revertClone) {\n                    rootEl.insertBefore(dnd.cloneEl, dnd.draggable.dragEl);\n                } else if (nextEl) {\n                    rootEl.insertBefore(dnd.cloneEl, nextEl);\n                } else {\n                    rootEl.appendChild(dnd.cloneEl);\n                }\n\n                if (this.options.group.revertClone) {\n                    this._animate(dnd.draggable.dragEl, dnd.cloneEl);\n                }\n                styler.show(dnd.cloneEl);\n                dnd.cloneEl.cloneHidden = false;\n            }\n        },\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dnd.draggable.dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t_dispatchEvent : function (\n\t\t\tsortable, rootEl, name,\n\t\t\ttargetEl, toEl, fromEl,\n\t\t\tstartIndex, newIndex,\n\t\t\tstartDraggableIndex, newDraggableIndex,\n\t\t\toriginalEvt\n\t\t) {\n\t\t\tsortable = (sortable || rootEl[dnd.expando]);\n\t\t\tvar evt,\n\t\t\t\toptions = sortable.options,\n\t\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1),\n\t\t\t\tputSortable = this.putSortable;\n\n\t\t\tevt = eventer.create(name,{\n\t\t\t\tto : toEl || rootEl,\n\t\t\t\tfrom : fromEl || rootEl,\n\t\t\t\titem : targetEl || rootEl,\n\t\t\t\tclone : this.cloneEl,\n\t\t\t\toldIndex : startIndex,\n\t\t\t\tnewIndex : newIndex,\n\t\t\t\toldDraggableIndex : startDraggableIndex,\n\t\t\t\tnewDraggableIndex : newDraggableIndex,\n\t\t\t\toriginalEvent : originalEvt,\n\t\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\n\t\t\t});\n\t\t\tif (rootEl) {\n\t\t\t\trootEl.dispatchEvent(evt);\n\t\t\t}\n\n\t\t\tif (options[onName]) {\n\t\t\t\toptions[onName].call(sortable, evt);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || noder.generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[dnd.expando] = null;\n\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(el, 'dragover', this);\n\t\t\t\teventer.off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tthis._onDrop();\n\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t}\n\t});\n\n\n    function _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\n});\ndefine('skylark-sortable/main',[\n\t\"skylark-langx\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-styler\",\n\t\"./fallback/autoscroll\",\n\t\"./containers\",\n\t\"./Sortable\"\n],function(\n\tlangx,\n\teventer,\n\tfinder,\n\tnoder,\n\tstyler,\n\tautoscroll,\n\tcontainers,\n\tSortable\n){\n\t// Export utils\n\tSortable.utils = {\n\t\ton: eventer.on,\n\t\toff: eventer.off,\n\t\tcss: styler.css,\n\t\t///find: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!finder.closest(el, selector, el, false);\n\t\t},\n\t\textend: langx.mixin,\n\t\tthrottle: autoscroll._throttle,\n\t\tclosest: finder.closest,\n\t\ttoggleClass: styler.toggleClass,\n\t\tclone: \tfunction (el) {\n\t\t\t\t\treturn noder.clone(el,true);\n\t\t\t\t},\n\t\tindex: containers._index,\n\t\tnextTick: \tfunction _nextTick(fn) {\n\t\t\t//return setTimeout(fn, 0);\n\t\t\treturn langx.defer(fn);\n\t\t},\n\t\tcancelNextTick: \tfunction _cancelNextTick(id) {\n\t\t\t//return clearTimeout(id);\n\t\t\treturn id && id.stop();\n\t\t},\n\t\t//detectDirection: _detectDirection,\n\t\tgetChild: function(el, childNum, options) {\n\t\t\toptions.excluding = [];\n\t\t\toptions.closesting = options.draggable;\n\t\t\treturn finder.childAt(el,childNum,options);\n\t\t}\n\t};\n\n\treturn Sortable;\n});\ndefine('skylark-sortable', ['skylark-sortable/main'], function (main) { return main; });\n\n"]}