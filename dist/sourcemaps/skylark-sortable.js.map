{"version":3,"sources":["skylark-sortable.js"],"names":["define","skylark","langx","isMobile","$","browser","noder","finder","geom","styler","eventer","transforms","touch","helper","log","category","message","append","dragEl","parentEl","ghostEl","cloneEl","rootEl","nextEl","lastDownEl","scrollEl","scrollParentEl","scrollCustomFn","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","activeGroup","putSortable","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","tapEvt","touchEvt","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","ghostRelativeParent","realDragElRect","autoScrolls","scrolling","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","expando","Date","getTime","win","window","document","parseInt","setTimeout","IE11OrLess","Polymer","navigator","userAgent","match","Edge","FireFox","Safari","PositionGhostAbsolutely","apple","device","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","support","cssPointerEvents","_silent","_alignedSilent","abs","Math","min","max","savedInputChecked","_detectDirection","el","options","elCSS","css","elWidth","contentRect","width","child1","_getChild","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginSize","secondChildWidth","display","flexDirection","gridTemplateColumns","split","length","float","touchingSideChild2","clear","_detectNearestEmptySortable","x","y","i","_lastChild","rect","_getRect","threshold","emptyInsertThreshold","insideHorizontally","left","right","insideVertically","top","bottom","_isClientInRowColumn","axis","targetRect","targetS1Opp","targetS2Opp","mouseOnOppAxis","_isElInRowColumn","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","height","el2S1Opp","el2S2Opp","el2OppLength","_getParentAutoScrollElement","includeSelf","getBoundingClientRect","_getWindowScrollingElement","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","parentNode","documentElement","scrollingElement","_scrollBy","scrollLeft","scrollTop","_autoScroll","_throttle","evt","isFallback","scroll","_this","sens","scrollSensitivity","speed","scrollSpeed","clientX","clientY","winScroller","scrollThisInstance","_clearAutoScrolls","scrollFn","layersOut","currentParent","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","clearInterval","pid","setInterval","this","layer","Sortable","active","_emulateDragOver","_onTouchMove","scrollOffsetY","scrollOffsetX","call","bind","bubbleScroll","forEach","autoScroll","_prepareGroup","toFn","value","pull","to","from","sameGroup","group","name","otherGroup","join","indexOf","originalGroup","checkPull","checkPut","put","revertClone","_checkAlignment","_computeIsAligned","_hideGhostForTarget","_unhideGhostForTarget","addEventListener","preventDefault","stopPropagation","stopImmediatePropagation","_throttleTimeout","nearestEmptyInsertDetectEvent","touches","nearest","event","target","_onDragOver","nodeType","toString","mixin","defaults","sort","disabled","store","handle","draggable","test","nodeName","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","fn","charAt","nativeDraggable","mousy","on","_onTapStart","push","get","_find","ctx","tagName","iterator","list","getElementsByTagName","n","_dispatchEvent","sortable","targetEl","toEl","fromEl","startIndex","startDraggableIndex","originalEvt","onName","toUpperCase","substr","create","item","clone","originalEvent","pullMode","lastPutMode","undefined","dispatchEvent","_onMove","dragRect","willInsertAfter","retVal","onMoveFn","onMove","dragged","draggedRect","related","relatedRect","_disableDraggable","_unsilent","childNum","currentChild","children","style","closest","last","lastElementChild","previousElementSibling","_getInsertDirection","dragElIndex","_index","targetIndex","_generateId","str","className","src","href","sum","charCodeAt","selector","index","matches","callback","ms","debounce","_nextTick","defer","_cancelNextTick","id","stop","adjustForTransform","container","adjustForFixed","elRect","innerHeight","innerWidth","containerRect","matrix","scaleX","a","scaleY","d","_isScrolledPast","side","parent","elSide","parentSide","_getRelativeScrollOffset","offsetLeft","offsetTop","prototype","constructor","elementFromPoint","sortableMouseAligned","_getDirection","type","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","cancelable","some","criteria","trim","_prepareDragStart","_handleAutoScroll","fallback","ogElemScroller","newElem","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","transition","transform","_disableDelayedDragEvents","_triggerDragStart","toggleClass","_onDrop","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","e","floor","clearTimeout","off","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_appendGhost","_nulling","forAutoScroll","relativeScrollOffset","dx","dy","translate3d","ghostRelativeParentRect","cloneNode","appendChild","_hideClone","_cloneId","insertBefore","_loopId","effectAllowed","_dragStartId","revert","activeSortable","isOwner","canSort","contains","animated","completed","elLastChild","mouseOnAxis","targetS2","_ghostIsLast","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","scrollBefore","isLastTarget","targetLength","targetS1","invert","_getSwapDirection","nextElementSibling","after","moveVector","insertion","_animate","prevRect","currentRect","_repaint","offsetWidth","_offMoveEvents","_offUpEvents","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","items","set","option","destroy","Array","querySelectorAll","removeAttribute","splice","cloneHidden","utils","find","is","extend","throttle","nextTick","cancelNextTick","detectDirection","getChild","version","attach","main"],"mappings":"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","file":"../skylark-sortable.js","sourcesContent":["define('skylark-sortable/helper',[],function(){\r\n\t\r\n});\ndefine('skylark-sortable/Sortable',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/isMobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-devices-points/touch\",\n\t\"./helper\"\n],function(\n\tskylark,\n\tlangx,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\ttouch,\n\thelper\n){\n\tfunction log(category,message) {\n\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\n\t}\t\n\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\toldIndex,\n\t\tnewIndex,\n\t\toldDraggableIndex,\n\t\tnewDraggableIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScrolls = [],\n\t\tscrolling = false,\n\n\t\tawaitingDragStarted = false,\n\t\tignoreNextClick = false,\n\t\tsortables = [],\n\n\t\tpointerElemChangedInterval,\n\t\tlastPointerElemX,\n\t\tlastPointerElemY,\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\t\t// For positioning ghost absolutely\n\t\tghostRelativeParent,\n\t\tghostRelativeParentInitialScroll = [], // (left, top)\n\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\n\n\t\tPositionGhostAbsolutely = isMobile.apple.device, //IOS\n\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device\n,\n\n\t\t/*\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\t\t*/\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents;\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\t\tmax = Math.max,\n\n\t\tsavedInputChecked = [],\n\n\t\t/**\n\t\t * Detects children direction.\n\t\t */\n\t\t_detectDirection = function(el, options) {\n\t\t\tvar elCSS = styler.css(el),\n\n\t\t\t\telWidth = geom.contentRect(el).width,\n\n\t\t\t\tchild1 = _getChild(el, 0, options),\n\t\t\t\tchild2 = _getChild(el, 1, options),\n\t\t\t\tfirstChildCSS = child1 && styler.css(child1),\n\t\t\t\tsecondChildCSS = child2 && styler.css(child2),\n\n\t\t\t\tfirstChildWidth = child1 && geom.marginSize(child1).width,\n\t\t\t\tsecondChildWidth = child2 && geom.marginSize(child2).width;\n\n\t\t\tif (elCSS.display === 'flex') {\n\t\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\n\t\t\t\t? 'vertical' : 'horizontal';\n\t\t\t}\n\n\t\t\tif (elCSS.display === 'grid') {\n\t\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n\t\t\t}\n\n\t\t\tif (child1 && firstChildCSS.float !== 'none') {\n\t\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\n\n\t\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\n\t\t\t\t\t'vertical' : 'horizontal';\n\t\t\t}\n\n\t\t\treturn (child1 &&\n\t\t\t\t(\n\t\t\t\t\tfirstChildCSS.display === 'block' ||\n\t\t\t\t\tfirstChildCSS.display === 'flex' ||\n\t\t\t\t\tfirstChildCSS.display === 'table' ||\n\t\t\t\t\tfirstChildCSS.display === 'grid' ||\n\t\t\t\t\tfirstChildWidth >= elWidth &&\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' ||\n\t\t\t\t\tchild2 &&\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' &&\n\t\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\n\t\t\t\t) ?\n\t\t\t\t'vertical' : 'horizontal'\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n\t\t * @param  {Number} x      X position\n\t\t * @param  {Number} y      Y position\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\n\t\t */\n\t\t_detectNearestEmptySortable = function(x, y) {\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\n\t\t\t\tif (_lastChild(sortables[i])) continue;\n\n\t\t\t\tvar rect = _getRect(sortables[i]),\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\n\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\n\t\t\t\t\treturn sortables[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\n\t\t\tvar targetRect = _getRect(el),\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t\t},\n\n\t\t_isElInRowColumn = function(el1, el2, axis) {\n\t\t\tvar el1Rect = el1 === dragEl && realDragElRect || _getRect(el1),\n\t\t\t\tel2Rect = el2 === dragEl && realDragElRect || _getRect(el2),\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\t\treturn (\n\t\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t\t);\n\t\t},\n\n\t\t_getParentAutoScrollElement = function(el, includeSelf) {\n\t\t\t// skip to window\n\t\t\tif (!el || !el.getBoundingClientRect) return _getWindowScrollingElement();\n\n\t\t\tvar elem = el;\n\t\t\tvar gotSelf = false;\n\t\t\tdo {\n\t\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\n\t\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n\t\t\t\t\tvar elemCSS = styler.css(elem);\n\t\t\t\t\tif (\n\t\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\n\t\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return _getWindowScrollingElement();\n\n\t\t\t\t\t\tif (gotSelf || includeSelf) return elem;\n\t\t\t\t\t\tgotSelf = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t/* jshint boss:true */\n\t\t\t} while (elem = elem.parentNode);\n\n\t\t\treturn _getWindowScrollingElement();\n\t\t},\n\n\t\t_getWindowScrollingElement = function() {\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn document.documentElement;\n\t\t\t} else {\n\t\t\t\treturn document.scrollingElement;\n\t\t\t}\n\t\t},\n\n\t\t_scrollBy = function(el, x, y) {\n\t\t\tel.scrollLeft += x;\n\t\t\tel.scrollTop += y;\n\t\t},\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (options.scroll) {\n\t\t\t\tvar _this = rootEl ? rootEl[expando] : window,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinScroller = _getWindowScrollingElement(),\n\n\t\t\t\t\tscrollThisInstance = false;\n\n\t\t\t\t// Detect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\t_clearAutoScrolls();\n\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\n\t\t\t\t\t\tscrollParentEl = scrollEl;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tvar layersOut = 0;\n\t\t\t\tvar currentParent = scrollEl;\n\t\t\t\tdo {\n\t\t\t\t\tvar\tel = currentParent,\n\t\t\t\t\t\trect = _getRect(el),\n\n\t\t\t\t\t\ttop = rect.top,\n\t\t\t\t\t\tbottom = rect.bottom,\n\t\t\t\t\t\tleft = rect.left,\n\t\t\t\t\t\tright = rect.right,\n\n\t\t\t\t\t\twidth = rect.width,\n\t\t\t\t\t\theight = rect.height,\n\n\t\t\t\t\t\tscrollWidth,\n\t\t\t\t\t\tscrollHeight,\n\n\t\t\t\t\t\tcss,\n\n\t\t\t\t\t\tvx,\n\t\t\t\t\t\tvy,\n\n\t\t\t\t\t\tcanScrollX,\n\t\t\t\t\t\tcanScrollY,\n\n\t\t\t\t\t\tscrollPosX,\n\t\t\t\t\t\tscrollPosY;\n\n\n\t\t\t\t\tscrollWidth = el.scrollWidth;\n\t\t\t\t\tscrollHeight = el.scrollHeight;\n\n\t\t\t\t\tcss = styler.css(el);\n\n\t\t\t\t\tscrollPosX = el.scrollLeft;\n\t\t\t\t\tscrollPosY = el.scrollTop;\n\n\t\t\t\t\tif (el === winScroller) {\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\n\t\t\t\t\t}\n\n\t\t\t\t\tvx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);\n\n\t\t\t\t\tvy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);\n\n\n\t\t\t\t\tif (!autoScrolls[layersOut]) {\n\t\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\n\t\t\t\t\t\t\tif (!autoScrolls[i]) {\n\t\t\t\t\t\t\t\tautoScrolls[i] = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n\t\t\t\t\t\tautoScrolls[layersOut].el = el;\n\t\t\t\t\t\tautoScrolls[layersOut].vx = vx;\n\t\t\t\t\t\tautoScrolls[layersOut].vy = vy;\n\n\t\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\n\n\t\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\n\t\t\t\t\t\t\tscrollThisInstance = true;\n\t\t\t\t\t\t\t/* jshint loopfunc:true */\n\t\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\n\t\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n\t\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\n\t\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\n\t\t\t\t\t\t\t\t\tSortable.active._onTouchMove(touchEvt, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n\t\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n\t\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n\t\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlayersOut++;\n\t\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = _getParentAutoScrollElement(currentParent, false)));\n\t\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n\t\t\t}\n\t\t}, 30),\n\n\t\t_clearAutoScrolls = function () {\n\t\t\tautoScrolls.forEach(function(autoScroll) {\n\t\t\t\tclearInterval(autoScroll.pid);\n\t\t\t});\n\t\t\tautoScrolls = [];\n\t\t},\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t},\n\n\t\t_checkAlignment = function(evt) {\n\t\t\tif (!dragEl || !dragEl.parentNode) return;\n\t\t\tdragEl.parentNode[expando] && dragEl.parentNode[expando]._computeIsAligned(evt);\n\t\t},\n\n\t\t_hideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\tstyler.css(ghostEl, 'display', 'none');\n\t\t\t}\n\t\t},\n\n\t\t_unhideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\tstyler.css(ghostEl, 'display', '');\n\t\t\t}\n\t\t};\n\n\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\tvar nearestEmptyInsertDetectEvent = function(evt) {\n\t\tif (dragEl) {\n\t\t\tevt = evt.touches ? evt.touches[0] : evt;\n\t\t\tvar nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n\t\t\tif (nearest) {\n\t\t\t\t// Create imitation event\n\t\t\t\tvar event = {};\n\t\t\t\tfor (var i in evt) {\n\t\t\t\t\tevent[i] = evt[i];\n\t\t\t\t}\n\t\t\t\tevent.target = event.rootEl = nearest;\n\t\t\t\tevent.preventDefault = void 0;\n\t\t\t\tevent.stopPropagation = void 0;\n\t\t\t\tnearest[expando]._onDragOver(event);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = langx.mixin({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function() {\n\t\t\t\treturn _detectDirection(el, this.options);\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\tsupportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\tif (this.nativeDraggable) {\n\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\tthis.options.touchStartThreshold = 1;\n\t\t}\n\n\t\t// Bind events\n\t\ttouch.mousy(el);\n\n\t\teventer.on(el, 'mousedown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\teventer.on(el, 'dragover', this);\n\t\t\teventer.on(el, 'dragenter', this);\n\t\t}\n\n\t\tsortables.push(this.el);\n\n\t\t// Restore sorting\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\t}\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target;\n\n\t\t\tif (ghostEl && !supportCssPointerEvents) {\n\t\t\t\t_hideGhostForTarget();\n\t\t\t\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t}\n\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n\t\t},\n\n\n\t\t// handle moudedown event\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\t//if (!evt.cancelable) return;\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex,\n\t\t\t\tstartDraggableIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button and enabled\n\t\t\t}\n\n\t\t\t// cancel dnd if original target is content editable\n\t\t\tif (originalTarget.isContentEditable) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttarget = finder.closest(target, options.draggable, el, false);\n\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlog(\"_onTapStart\",target.tagName+\",\"+target.className);\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target);\n\t\t\tstartDraggableIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = finder.closest(originalTarget, criteria.trim(), el, false);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\n\t\t},\n\n\n\t\t_handleAutoScroll: function(evt, fallback) {\n\t\t\tif (!dragEl || !this.options.scroll) return;\n\t\t\tvar x = evt.clientX,\n\t\t\t\ty = evt.clientY,\n\n\t\t\t\telem = document.elementFromPoint(x, y),\n\t\t\t\t_this = this;\n\n\t\t\t// IE does not seem to have native autoscroll,\n\t\t\t// Edge's autoscroll seems too conditional,\n\t\t\t// MACOS Safari does not have autoscroll,\n\t\t\t// Firefox and Chrome are good\n\t\t\tif (fallback || Edge || IE11OrLess || Safari) {\n\t\t\t\t_throttleTimeout = _autoScroll(evt, _this.options, elem, fallback);\n\n\t\t\t\t// Listener for pointer element change\n\t\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\n\t\t\t\tif (\n\t\t\t\t\tscrolling &&\n\t\t\t\t\t(\n\t\t\t\t\t\t!pointerElemChangedInterval ||\n\t\t\t\t\t\tx !== lastPointerElemX ||\n\t\t\t\t\t\ty !== lastPointerElemY\n\t\t\t\t\t)\n\t\t\t\t) {\n\n\t\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\n\t\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\n\t\t\t\t\tpointerElemChangedInterval = setInterval(function() {\n\t\t\t\t\t\tif (!dragEl) return;\n\t\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\n\t\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\t\t\t\t\t\tif (newElem !== ogElemScroller) {\n\t\t\t\t\t\t\togElemScroller = newElem;\n\t\t\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\t\t\t_throttleTimeout = _autoScroll(evt, _this.options, ogElemScroller, fallback);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 10);\n\t\t\t\t\tlastPointerElemX = x;\n\t\t\t\t\tlastPointerElemY = y;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n\t\t\t\tif (!_this.options.bubbleScroll || _getParentAutoScrollElement(elem, true) === _getWindowScrollingElement()) {\n\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_throttleTimeout = _autoScroll(evt, _this.options, _getParentAutoScrollElement(elem, false), false);\n\t\t\t}\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\t\t\tlog(\"_prepareDragStart\",\"start\");\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\t\t\t\toldDraggableIndex = startDraggableIndex;\n\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: (touch || evt).clientX,\n\t\t\t\t\tclientY: (touch || evt).clientY\n\t\t\t\t};\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'all';\n\t\t\t\t// undo animation if needed\n\t\t\t\tdragEl.style.transition = '';\n\t\t\t\tdragEl.style.transform = '';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDragEvents();\n\n\t\t\t\t\tif (!FireFox && _this.nativeDraggable) {\n\t\t\t\t\t\tdragEl.draggable = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\tstyler.toggleClass(dragEl, options.chosenClass, true);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\teventer.on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n\t\t\t\teventer.on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n\t\t\t\t///eventer.on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n\n\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t///eventer.on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\n\n\t\t\t\t// Make dragEl draggable (must be before delay for FireFox)\n\t\t\t\tif (FireFox && this.nativeDraggable) {\n\t\t\t\t\tthis.options.touchStartThreshold = 4;\n\t\t\t\t\tdragEl.draggable = true;\n\t\t\t\t}\n\n\t\t\t\t// Delay is impossible for native DnD in Edge or IE\n\t\t\t\tif (options.delay && (options.delayOnTouchOnly ? touch : true) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\teventer.on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\t//options.supportPointer && eventer.on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\n\t\t\tif (max(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\n\t\t\t\t\t>= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))\n\t\t\t) {\n\t\t\t\tthis._disableDelayedDrag();\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tdragEl && _disableDraggable(dragEl);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\tthis._disableDelayedDragEvents();\n\t\t},\n\n\t\t_disableDelayedDragEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\t\t\teventer.off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\teventer.off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\tlog(\"_triggerDragStart\",\"start\");\n\t\t\tlog(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\n\t\t\tif (!this.nativeDraggable) {\n\t\t\t\teventer.on(document, 'mousemove', this._onTouchMove);\n\t\t\t} else {\n\t\t\t\teventer.on(dragEl, 'dragend', this);\n\t\t\t\teventer.on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\t_nextTick(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function (fallback, evt) {\n\t\t\tawaitingDragStarted = false;\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\teventer.on(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t\teventer.on(document, 'dragover', _checkAlignment);\n\t\t\t\t}\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, false);\n\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\n\n\t\t\t\t// In case dragging an animated element\n\t\t\t\tstyler.css(dragEl, 'transform', '');\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\tfallback && this._appendGhost();\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function (forAutoScroll) {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\t_hideGhostForTarget();\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\tvar parent = target;\n\n\t\t\t\twhile (target && target.shadowRoot) {\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\t\tif (target === parent) break;\n\t\t\t\t\tparent = target;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\tvar inserted;\n\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (inserted && !this.options.dragoverBubble) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\n\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\n\t\t\tlog(\"_onTouchMove\",\"start\");\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tmatrix = ghostEl && transforms.matrix(ghostEl),\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\n\t\t\t\t\trelativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && _getRelativeScrollOffset(ghostRelativeParent),\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX)\n\t\t\t\t\t\t\t+ fallbackOffset.x) / (scaleX || 1)\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY)\n\t\t\t\t\t\t\t+ fallbackOffset.y) / (scaleY || 1)\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active && !awaitingDragStarted) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDragStart(evt, true);\n\t\t\t\t}\n\n\t\t\t\t!forAutoScroll && this._handleAutoScroll(touch, true);\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\tif (ghostEl) {\n\t\t\t\t\tstyler.css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t\tstyler.css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t\tstyler.css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t\tstyler.css(ghostEl, 'transform', translate3d);\n\n\t\t\t\t}\n\n\t\t\t\t//evt.cancelable && evt.preventDefault();\n\t\t\t\tevt.preventDefault()\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\n\t\t\t// Not being adjusted for\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar container = this.options.fallbackOnBody ? document.body : rootEl,\n\t\t\t\t\trect = _getRect(dragEl, true, container, !PositionGhostAbsolutely),\n\t\t\t\t\tcss = styler.css(dragEl),\n\t\t\t\t\toptions = this.options;\n\n\t\t\t\t// Position absolutely\n\t\t\t\tif (PositionGhostAbsolutely) {\n\t\t\t\t\t// Get relatively positioned parent\n\t\t\t\t\tghostRelativeParent = container;\n\n\t\t\t\t\twhile (\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'position') === 'static' &&\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'transform') === 'none' &&\n\t\t\t\t\t\tghostRelativeParent !== document\n\t\t\t\t\t) {\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document) {\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\n\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n\t\t\t\t\t\tif (ghostRelativeParent === document) ghostRelativeParent = _getWindowScrollingElement();\n\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tghostRelativeParent = _getWindowScrollingElement();\n\t\t\t\t\t}\n\t\t\t\t\tghostRelativeParentInitialScroll = _getRelativeScrollOffset(ghostRelativeParent);\n\t\t\t\t}\n\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\tstyler.toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\tstyler.toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\tstyler.toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\tstyler.css(ghostEl, 'box-sizing', 'border-box');\n\t\t\t\tstyler.css(ghostEl, 'margin', 0);\n\t\t\t\tstyler.css(ghostEl, 'top', rect.top);\n\t\t\t\tstyler.css(ghostEl, 'left', rect.left);\n\t\t\t\tstyler.css(ghostEl, 'width', rect.width);\n\t\t\t\tstyler.css(ghostEl, 'height', rect.height);\n\t\t\t\tstyler.css(ghostEl, 'opacity', '0.8');\n\t\t\t\tstyler.css(ghostEl, 'position', (PositionGhostAbsolutely ? 'absolute' : 'fixed'));\n\t\t\t\tstyler.css(ghostEl, 'zIndex', '100000');\n\t\t\t\tstyler.css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\tcontainer.appendChild(ghostEl);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\n\t\t\tvar _this = this;\n\t\t\tvar dataTransfer = evt.dataTransfer;\n\t\t\tvar options = _this.options;\n\n\t\t\t// Setup clone\n\t\t\tcloneEl = noder.clone(dragEl,true);\n\n\t\t\tcloneEl.draggable = false;\n\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\tthis._hideClone();\n\n\t\t\tstyler.toggleClass(cloneEl, _this.options.chosenClass, false);\n\n\n\t\t\t// #1143: IFrame support workaround\n\t\t\t_this._cloneId = _nextTick(function () {\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t}\n\t\t\t\t_dispatchEvent(_this, rootEl, 'clone', dragEl);\n\t\t\t});\n\n\n\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, true);\n\n\t\t\t// Set proper drop events\n\t\t\tif (fallback) {\n\t\t\t\tignoreNextClick = true;\n\t\t\t\t_this._loopId = setInterval(_this._emulateDragOver, 50);\n\t\t\t} else {\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\n\t\t\t\teventer.off(document, 'mouseup', _this._onDrop);\n\t\t\t\t///eventer.off(document, 'touchend', _this._onDrop);\n\t\t\t\t///eventer.off(document, 'touchcancel', _this._onDrop);\n\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\teventer.on(document, 'drop', _this);\n\n\t\t\t\t// #1276 fix:\n\t\t\t\tstyler.css(dragEl, 'transform', 'translateZ(0)');\n\t\t\t}\n\n\t\t\tawaitingDragStarted = true;\n\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n\t\t\teventer.on(document, 'selectstart', _this);\n\t\t\tif (Safari) {\n\t\t\t\tstyler.css(document.body, 'user-select', 'none');\n\t\t\t}\n\t\t},\n\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this;\n\n\t\t\tif (_silent) return;\n\n\t\t\t// Return invocation when dragEl is inserted (or completed)\n\t\t\tfunction completed(insertion) {\n\t\t\t\tif (insertion) {\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(_this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (activeSortable) {\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (putSortable !== _this && _this !== Sortable.active) {\n\t\t\t\t\t\tputSortable = _this;\n\t\t\t\t\t} else if (_this === Sortable.active) {\n\t\t\t\t\t\tputSortable = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Animation\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t_this._handleAutoScroll(evt);\n\t\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(evt);\n\n\t\t\t\t\t// Do not detect for empty insert if already inserted\n\t\t\t\t\t!insertion && nearestEmptyInsertDetectEvent(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl), oldDraggableIndex, _index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\n\t\t\t\treturn completed(false);\n\t\t\t}\n\n\t\t\tif (target !== dragEl) {\n\t\t\t\tignoreNextClick = false;\n\t\t\t}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = _getRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed(true);\n\t\t\t\t}\n\n\t\t\t\tvar elLastChild = _lastChild(el);\n\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\n\t\t\t\t\t// assign target only if condition is true\n\t\t\t\t\tif (elLastChild && el === evt.target) {\n\t\t\t\t\t\ttarget = elLastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = _getRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\n\t\t\t\t\t\tscrolledPastTop = _isScrolledPast(target, 'top') || _isScrolledPast(dragEl, 'top'),\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = _getRect(target)[side1];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed(false);\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = _getRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\n\t\t\t\t\t\tif (scrolledPastTop) {\n\t\t\t\t\t\t\t_scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - _getRect(target)[side1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = _getRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = _getRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._repaint(target);\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\tstyler.css(target, 'transition', '');\n\t\t\t\t\tstyler.css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_repaint: function(target) {\n\t\t\treturn target.offsetWidth;\n\t\t},\n\n\t\t_offMoveEvents: function() {\n\t\t\t//eventer.off(document, 'touchmove', this._onTouchMove);\n\t\t\t//eventer.off(document, 'pointermove', this._onTouchMove);\n\t\t\teventer.off(document, 'dragover', nearestEmptyInsertDetectEvent);\n\t\t\teventer.off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n\t\t\t//eventer.off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t//eventer.off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t//eventer.off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t//eventer.off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\teventer.off(document, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t_clearAutoScrolls();\n\t\t\t_cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\n\t\t\t// Unbind events\n\t\t\teventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(document, 'drop', this);\n\t\t\t\teventer.off(el, 'dragstart', this._onDragStart);\n\t\t\t\teventer.off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\teventer.off(document, 'dragover', _checkAlignment);\n\t\t\t}\n\n\t\t\tif (Safari) {\n\t\t\t\tstyler.css(document.body, 'user-select', '');\n\t\t\t}\n\n\t\t\tthis._offMoveEvents();\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\teventer.off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\t\t\tautoScrolls.length =\n\n\t\t\tpointerElemChangedInterval =\n\t\t\tlastPointerElemX =\n\t\t\tlastPointerElemY =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\toldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\trealDragElRect =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\n\t\t\t//eventer.off(el, 'touchstart', this._onTapStart);\n\t\t\t//eventer.off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(el, 'dragover', this);\n\t\t\t\teventer.off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tthis._onDrop();\n\n\t\t\tsortables.splice(sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t},\n\n\t\t_hideClone: function() {\n\t\t\tif (!cloneEl.cloneHidden) {\n\t\t\t\tstyler.css(cloneEl, 'display', 'none');\n\t\t\t\tcloneEl.cloneHidden = true;\n\t\t\t\tif (cloneEl.parentNode && this.options.removeCloneOnHide) {\n\t\t\t\t\tcloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_showClone: function(putSortable) {\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\n\t\t\t\tthis._hideClone();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cloneEl.cloneHidden) {\n\t\t\t\t// show clone at dragEl or original position\n\t\t\t\tif (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t} else if (nextEl) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t} else {\n\t\t\t\t\trootEl.appendChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.group.revertClone) {\n\t\t\t\t\tthis._animate(dragEl, cloneEl);\n\t\t\t\t}\n\t\t\t\tstyler.css(cloneEl, 'display', '');\n\t\t\t\tcloneEl.cloneHidden = false;\n\t\t\t}\n\t\t}\n\t};\n\n\n    function _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(\n\t\tsortable, rootEl, name,\n\t\ttargetEl, toEl, fromEl,\n\t\tstartIndex, newIndex,\n\t\tstartDraggableIndex, newDraggableIndex,\n\t\toriginalEvt\n\t) {\n\t\tsortable = (sortable || rootEl[expando]);\n\t\tvar evt,\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt = eventer.create(name,{\n\t\t\tto : toEl || rootEl,\n\t\t\tfrom : fromEl || rootEl,\n\t\t\titem : targetEl || rootEl,\n\t\t\tclone : cloneEl,\n\t\t\toldIndex : startIndex,\n\t\t\tnewIndex : newIndex,\n\t\t\toldDraggableIndex : startDraggableIndex,\n\t\t\tnewDraggableIndex : newDraggableIndex,\n\t\t\toriginalEvent : originalEvt,\n\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\n\t\t});\n\t\tif (rootEl) {\n\t\t\trootEl.dispatchEvent(evt);\n\t\t}\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = eventer.create(\"move\",{\n\t\t\tto : toEl,\n\t\t\tfrom : fromEl,\n\t\t\tdragged : dragEl,\n\t\t\tdraggedRect: dragRect,\n\t\t\trelated : targetEl || toEl,\n\t\t\trelatedRect : targetRect || _getRect(toEl),\n\t\t\twillInsertAfter : willInsertAfter,\n\t\t\toriginalEvent : originalEvt\n\t\t});\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\t/**\n\t * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n\t * and non-draggable elements\n\t * @param  {HTMLElement} el       The parent element\n\t * @param  {Number} childNum      The index of the child\n\t * @param  {Object} options       Parent Sortable's options\n\t * @return {HTMLElement}          The child at index childNum, or null if not found\n\t */\n\tfunction _getChild(el, childNum, options) {\n\t\tvar currentChild = 0,\n\t\t\ti = 0,\n\t\t\tchildren = el.children;\n\n\t\twhile (i < children.length) {\n\t\t\tif (\n\t\t\t\tchildren[i].style.display !== 'none' &&\n\t\t\t\tchildren[i] !== ghostEl &&\n\t\t\t\tchildren[i] !== dragEl &&\n\t\t\t\tfinder.closest(children[i], options.draggable, el, false)\n\t\t\t) {\n\t\t\t\tif (currentChild === childNum) {\n\t\t\t\t\treturn children[i];\n\t\t\t\t}\n\t\t\t\tcurrentChild++;\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n\t * @param  {HTMLElement} el       Parent element\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\n\t */\n\tfunction _lastChild(el) {\n\t\tvar last = el.lastElementChild;\n\n\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\n\t\t\tlast = last.previousElementSibling;\n\t\t}\n\n\t\treturn last || null;\n\t}\n\n\tfunction _ghostIsLast(evt, axis, el) {\n\t\tvar elRect = _getRect(_lastChild(el)),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\n\t\t\tspacer = 10;\n\n\t\treturn (\n\t\t\taxis === 'vertical' ?\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\n\t\t);\n\t}\n\n\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\tvar targetRect = _getRect(target),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\tdragRect = _getRect(dragEl),\n\t\t\tinvert = false;\n\n\n\t\tif (!invertSwap) {\n\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t}\n\n\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\tif (\n\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinvert = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Regular\n\t\t\t\tif (\n\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t) {\n\t\t\t\t\treturn _getInsertDirection(target);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinvert = invert || invertSwap;\n\n\t\tif (invert) {\n\t\t\t// Invert of regular\n\t\t\tif (\n\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t * seem that dragEl has been \"inserted\" into that element's position\n\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t * @return {Number}                   Direction dragEl must be swapped\n\t */\n\tfunction _getInsertDirection(target) {\n\t\tvar dragElIndex = _index(dragEl),\n\t\t\ttargetIndex = _index(target);\n\n\t\tif (dragElIndex < targetIndex) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\treturn finder.index(el,function(el){\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== cloneEl && (!selector || finder.matches(el, selector))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\t\t\t\n\t\t})\n\t}\n\n\n\tvar _throttleTimeout;\n\tfunction _throttle(callback, ms) {\n\t\treturn langx.debounce;\n\t}\n\n\tfunction _cancelThrottle() {\n\t\t//clearTimeout(_throttleTimeout);\n\t\t//_throttleTimeout = void 0;\n\t\tif (_throttleTimeout && _throttleTimeout.stop) {\n\t\t\t_throttleTimeout.stop();\n\t\t\t_throttleTimeout = void 0;\n\t\t}\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tsavedInputChecked.length = 0;\n\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\tfunction _nextTick(fn) {\n\t\t//return setTimeout(fn, 0);\n\t\treturn langx.defer(fn);\n\t}\n\n\tfunction _cancelNextTick(id) {\n\t\t//return clearTimeout(id);\n\t\treturn id && id.stop();\n\t}\n\n\n\t/**\n\t * Returns the \"bounding client rect\" of given element\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\n\t * @return {Object}                        The boundingClientRect of el\n\t */\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\n\t\tif (!el.getBoundingClientRect && el !== win) return;\n\n\t\tvar elRect,\n\t\t\ttop,\n\t\t\tleft,\n\t\t\tbottom,\n\t\t\tright,\n\t\t\theight,\n\t\t\twidth;\n\n\t\tif (el !== win && el !== _getWindowScrollingElement()) {\n\t\t\telRect = el.getBoundingClientRect();\n\t\t\ttop = elRect.top;\n\t\t\tleft = elRect.left;\n\t\t\tbottom = elRect.bottom;\n\t\t\tright = elRect.right;\n\t\t\theight = elRect.height;\n\t\t\twidth = elRect.width;\n\t\t} else {\n\t\t\ttop = 0;\n\t\t\tleft = 0;\n\t\t\tbottom = window.innerHeight;\n\t\t\tright = window.innerWidth;\n\t\t\theight = window.innerHeight;\n\t\t\twidth = window.innerWidth;\n\t\t}\n\n\t\tif (adjustForFixed && el !== win) {\n\t\t\t// Adjust for translate()\n\t\t\tcontainer = container || el.parentNode;\n\n\t\t\t// solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n\t\t\t// Not needed on <= IE11\n\t\t\tif (!IE11OrLess) {\n\t\t\t\tdo {\n\t\t\t\t\tif (container && container.getBoundingClientRect && styler.css(container, 'transform') !== 'none') {\n\t\t\t\t\t\tvar containerRect = container.getBoundingClientRect();\n\n\t\t\t\t\t\t// Set relative to edges of padding box of container\n\t\t\t\t\t\ttop -= containerRect.top + parseInt(styler.css(container, 'border-top-width'));\n\t\t\t\t\t\tleft -= containerRect.left + parseInt(styler.css(container, 'border-left-width'));\n\t\t\t\t\t\tbottom = top + elRect.height;\n\t\t\t\t\t\tright = left + elRect.width;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t} while (container = container.parentNode);\n\t\t\t}\n\t\t}\n\n\t\tif (adjustForTransform && el !== win) {\n\t\t\t// Adjust for scale()\n\t\t\tvar matrix = transforms.matrix(container || el),\n\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\tif (matrix) {\n\t\t\t\ttop /= scaleY;\n\t\t\t\tleft /= scaleX;\n\n\t\t\t\twidth /= scaleX;\n\t\t\t\theight /= scaleY;\n\n\t\t\t\tbottom = top + height;\n\t\t\t\tright = left + width;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\tbottom: bottom,\n\t\t\tright: right,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\n\t/**\n\t * Checks if a side of an element is scrolled past a side of it's parents\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\n\t * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element\n\t */\n\tfunction _isScrolledPast(el, side) {\n\t\tvar parent = _getParentAutoScrollElement(el, true),\n\t\t\telSide = _getRect(el)[side];\n\n\t\t/* jshint boss:true */\n\t\twhile (parent) {\n\t\t\tvar parentSide = _getRect(parent)[side],\n\t\t\t\tvisible;\n\n\t\t\tif (side === 'top' || side === 'left') {\n\t\t\t\tvisible = elSide >= parentSide;\n\t\t\t} else {\n\t\t\t\tvisible = elSide <= parentSide;\n\t\t\t}\n\n\t\t\tif (!visible) return parent;\n\n\t\t\tif (parent === _getWindowScrollingElement()) break;\n\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n\t * The value is returned in real pixels.\n\t * @param  {HTMLElement} el\n\t * @return {Array}             Offsets in the format of [left, top]\n\t */\n\tfunction _getRelativeScrollOffset(el) {\n\t\tvar offsetLeft = 0,\n\t\t\toffsetTop = 0,\n\t\t\twinScroller = _getWindowScrollingElement();\n\n\t\tif (el) {\n\t\t\tdo {\n\t\t\t\tvar matrix = transforms.matrix(el),\n\t\t\t\t\tscaleX = matrix.a,\n\t\t\t\t\tscaleY = matrix.d;\n\n\t\t\t\toffsetLeft += el.scrollLeft * scaleX;\n\t\t\t\toffsetTop += el.scrollTop * scaleY;\n\t\t\t} while (el !== winScroller && (el = el.parentNode));\n\t\t}\n\n\t\treturn [offsetLeft, offsetTop];\n\t}\n\n\t// Fixed #973:\n\teventer.on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: eventer.on,\n\t\toff: eventer.off,\n\t\tcss: styler.css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!finder.closest(el, selector, el, false);\n\t\t},\n\t\textend: langx.mixin,\n\t\tthrottle: _throttle,\n\t\tclosest: finder.closest,\n\t\ttoggleClass: styler.toggleClass,\n\t\tclone: \tfunction (el) {\n\t\t\t\t\treturn noder.clone(el,true);\n\t\t\t\t},\n\t\tindex: _index,\n\t\tnextTick: _nextTick,\n\t\tcancelNextTick: _cancelNextTick,\n\t\tdetectDirection: _detectDirection,\n\t\tgetChild: _getChild\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\n});\n\ndefine('skylark-sortable/main',[\r\n\t\"./Sortable\"\r\n],function(Sortable){\r\n\treturn Sortable;\r\n});\ndefine('skylark-sortable', ['skylark-sortable/main'], function (main) { return main; });\n\n"]}