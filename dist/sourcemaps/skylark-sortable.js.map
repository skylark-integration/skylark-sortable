{"version":3,"sources":["skylark-sortable.js"],"names":["define","hoster","detects","browser","window","document","ua","toLowerCase","match","exec","indexOf","platform_match","matched","version","versionNumber","platform","parseInt","android","bb","blackberry","ipad","iphone","ipod","kindle","playbook","silk","mobile","cros","mac","linux","win","desktop","chrome","opr","safari","webkit","rv","iemobile","edge","name","uaMatch","navigator","userAgent","detectBrowser","undefined","isBrowser","geom","styler","finder","Orientation","el","options","elCSS","css","elWidth","contentRect","width","child1","childAt","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginSize","secondChildWidth","display","flexDirection","Vertical","Horizontal","gridTemplateColumns","split","length","float","touchingSideChild2","clear","CSSFloatProperty","langx","scrollingElement","autoScrolls","scrolling","IE11OrLess","ie","Edge","Safari","firefox","_throttleTimeout","_getParentAutoScrollElement","includeSelf","getBoundingClientRect","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","parentNode","_autoScroll","_throttle","evt","rootEl","isFallback","scroll","_this","expando","sens","scrollSensitivity","speed","scrollSpeed","x","clientX","y","clientY","winScroller","scrollThisInstance","scrollParentEl","_clearAutoScrolls","scrollEl","scrollCustomFn","scrollFn","layersOut","currentParent","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","rect","boundingRect","top","bottom","left","right","height","scrollLeft","scrollTop","abs","i","clearInterval","pid","setInterval","this","layer","Sortable","active","_emulateDragOver","_onTouchMove","touchEvt","scrollOffsetY","scrollOffsetX","call","scrollBy","bind","bubbleScroll","forEach","autoScroll","callback","ms","debounce","_isScrolledPast","side","parent","elSide","parentSide","_getRelativeScrollOffset","offsetLeft","offsetTop","matrix","transforms","scaleX","a","scaleY","d","_handleAutoScroll","fallback","elementFromPoint","ogElemScroller","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","dragEl","newElem","_cancelThrottle","stop","skylark","isMobile","$","noder","eventer","oriented","touch","autoscroll","log","category","message","append","parentEl","ghostEl","cloneEl","nextEl","lastDownEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","activeGroup","putSortable","tapEvt","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","ghostRelativeParent","realDragElRect","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","Date","getTime","setTimeout","Polymer","FireFox","PositionGhostAbsolutely","apple","device","supportDraggable","createElement","supportCssPointerEvents","support","cssPointerEvents","_silent","_alignedSilent","Math","min","max","savedInputChecked","_detectDirection","excluding","_detectNearestEmptySortable","_lastChild","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_isClientInRowColumn","axis","targetRect","targetS1Opp","targetS2Opp","mouseOnOppAxis","_isElInRowColumn","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_prepareGroup","toFn","value","pull","to","from","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","_checkAlignment","_computeIsAligned","_hideGhostForTarget","_unhideGhostForTarget","addEventListener","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","event","target","_onDragOver","_find","ctx","tagName","iterator","list","getElementsByTagName","n","lastChild","ignoreHidden","_generateId","str","className","src","href","textContent","sum","charCodeAt","toString","_index","selector","index","nodeName","toUpperCase","matches","_nextTick","fn","defer","_cancelNextTick","id","_getRect","adjustForTransform","container","adjustForFixed","nodeType","mixin","defaults","sort","disabled","store","handle","draggable","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","charAt","nativeDraggable","mousy","on","_onTapStart","push","get","_dispatchEvent","sortable","targetEl","toEl","fromEl","startIndex","startDraggableIndex","originalEvt","onName","substr","create","item","clone","originalEvent","pullMode","lastPutMode","dispatchEvent","_onMove","dragRect","willInsertAfter","retVal","onMoveFn","onMove","dragged","draggedRect","related","relatedRect","_disableDraggable","_unsilent","cancelable","prototype","constructor","closest","children","sortableMouseAligned","_getDirection","type","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","some","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","style","transition","transform","_disableDelayedDragEvents","_triggerDragStart","toggleClass","_onDrop","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","e","floor","clearTimeout","off","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_appendGhost","_nulling","forAutoScroll","relativeScrollOffset","dx","dy","translate3d","ghostRelativeParentRect","documentElement","cloneNode","appendChild","_animate","prevRect","currentRect","_repaint","animated","offsetWidth","_offMoveEvents","_offUpEvents","_hideClone","_cloneId","insertBefore","_loopId","effectAllowed","_dragStartId","revert","activeSortable","isOwner","canSort","contains","completed","elLastChild","elRect","mouseOnAxis","targetS2","_ghostIsLast","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","scrollBefore","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","insertion","dragElIndex","targetIndex","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","items","set","option","destroy","Array","querySelectorAll","removeAttribute","splice","cloneHidden","utils","find","is","extend","throttle","nextTick","cancelNextTick","detectDirection","getChild","childNum","closesting","attach","main"],"mappings":"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","file":"../skylark-sortable.js","sourcesContent":["define('skylark-langx-hoster/detects/browser',[\r\n    \"../hoster\"\r\n],function(hoster){\r\n\t//refer : https://github.com/gabceb/jquery-browser-plugin\r\n\r\n\tfunction detectBrowser() {\r\n\r\n\t\tfunction uaMatch( ua ) {\r\n\t\t\tua = ua.toLowerCase();\r\n\r\n\t\t\tvar match = /(edge)\\/([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opr)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(iemobile)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"trident\") >= 0 && /(rv)(?::| )([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar platform_match = /(ipad)/.exec( ua ) ||\r\n\t\t\t    /(ipod)/.exec( ua ) ||\r\n\t\t\t    /(windows phone)/.exec( ua ) ||\r\n\t\t\t    /(iphone)/.exec( ua ) ||\r\n\t\t\t    /(kindle)/.exec( ua ) ||\r\n\t\t\t    /(silk)/.exec( ua ) ||\r\n\t\t\t    /(android)/.exec( ua ) ||\r\n\t\t\t    /(win)/.exec( ua ) ||\r\n\t\t\t    /(mac)/.exec( ua ) ||\r\n\t\t\t    /(linux)/.exec( ua ) ||\r\n\t\t\t    /(cros)/.exec( ua ) ||\r\n\t\t\t    /(playbook)/.exec( ua ) ||\r\n\t\t\t    /(bb)/.exec( ua ) ||\r\n\t\t\t    /(blackberry)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar browser = {},\r\n\t\t\t    matched = {\r\n\t\t\t      browser: match[ 5 ] || match[ 3 ] || match[ 1 ] || \"\",\r\n\t\t\t      version: match[ 2 ] || match[ 4 ] || \"0\",\r\n\t\t\t      versionNumber: match[ 4 ] || match[ 2 ] || \"0\",\r\n\t\t\t      platform: platform_match[ 0 ] || \"\"\r\n\t\t\t    };\r\n\r\n\t\t\tif ( matched.browser ) {\r\n\t\t\t\tbrowser[ matched.browser ] = true;\r\n\t\t\t  \tbrowser.version = matched.version;\r\n\t\t\t  \tbrowser.versionNumber = parseInt(matched.versionNumber, 10);\r\n\t\t\t}\r\n\r\n\t\t\tif ( matched.platform ) {\r\n\t\t\t \tbrowser[ matched.platform ] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered mobile platforms, meaning they run a mobile browser\r\n\t\t\tif ( browser.android || browser.bb || browser.blackberry || browser.ipad || browser.iphone ||\r\n\t\t\t\tbrowser.ipod || browser.kindle || browser.playbook || browser.silk || browser[ \"windows phone\" ]) {\r\n\t\t\t\tbrowser.mobile = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered desktop platforms, meaning they run a desktop browser\r\n\t\t\tif ( browser.cros || browser.mac || browser.linux || browser.win ) {\r\n\t\t\t\tbrowser.desktop = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Chrome, Opera 15+ and Safari are webkit based browsers\r\n\t\t\tif ( browser.chrome || browser.opr || browser.safari ) {\r\n\t\t\t\tbrowser.webkit = true;\r\n\t\t\t}\r\n\r\n\t\t\t// IE11 has a new token so we will assign it msie to avoid breaking changes\r\n\t\t\tif ( browser.rv || browser.iemobile) {\r\n\t\t\t  var ie = \"ie\";\r\n\r\n\t\t\t  matched.browser = ie;\r\n\t\t\t  browser[ie] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Edge is officially known as Microsoft Edge, so rewrite the key to match\r\n\t\t\tif ( browser.edge ) {\r\n\t\t\t  delete browser.edge;\r\n\t\t\t  var msedge = \"edge\";\r\n\r\n\t\t\t  matched.browser = msedge;\r\n\t\t\t  browser[msedge] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Blackberry browsers are marked as Safari on BlackBerry\r\n\t\t\tif ( browser.safari && browser.blackberry ) {\r\n\t\t\t  var blackberry = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = blackberry;\r\n\t\t\t  browser[blackberry] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Playbook browsers are marked as Safari on Playbook\r\n\t\t\tif ( browser.safari && browser.playbook ) {\r\n\t\t\t  var playbook = \"playbook\";\r\n\r\n\t\t\t  matched.browser = playbook;\r\n\t\t\t  browser[playbook] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// BB10 is a newer OS version of BlackBerry\r\n\t\t\tif ( browser.bb ) {\r\n\t\t\t  var bb = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = bb;\r\n\t\t\t  browser[bb] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 15+ are identified as opr\r\n\t\t\tif ( browser.opr ) {\r\n\t\t\t  var opera = \"opera\";\r\n\r\n\t\t\t  matched.browser = opera;\r\n\t\t\t  browser[opera] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Stock Android browsers are marked as Safari on Android.\r\n\t\t\tif ( browser.safari && browser.android ) {\r\n\t\t\t  var android = \"android\";\r\n\r\n\t\t\t  matched.browser = android;\r\n\t\t\t  browser[android] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Kindle browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.kindle ) {\r\n\t\t\t  var kindle = \"kindle\";\r\n\r\n\t\t\t  matched.browser = kindle;\r\n\t\t\t  browser[kindle] = true;\r\n\t\t\t}\r\n\r\n\t\t\t // Kindle Silk browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.silk ) {\r\n\t\t\t  var silk = \"silk\";\r\n\r\n\t\t\t  matched.browser = silk;\r\n\t\t\t  browser[silk] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Assign the name and platform variable\r\n\t\t\tbrowser.name = matched.browser;\r\n\t\t\tbrowser.platform = matched.platform;\r\n\t\t\treturn browser;\r\n\t\t}\r\n\r\n\r\n\t    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\n\r\n\t    if (isBrowser) {\r\n\t\t    return uaMatch( navigator.userAgent );\r\n\t    } else {\r\n\t    \treturn null;\r\n\t    }\r\n\t}\r\n\r\n\r\n\treturn hoster.detects.browser = detectBrowser;\r\n});\ndefine('skylark-langx-hoster/isBrowser',[\r\n    \"./hoster\",\r\n    \"./detects/browser\"\r\n],function(hoster,detectBrowser){\r\n\tif (hoster.isBrowser == undefined) {\r\n\t\thoster.isBrowser = detectBrowser();\r\n\t}\r\n\r\n    return hoster.isBrowser;\r\n});\r\n\ndefine('skylark-domx-layouts/oriented',[\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-finder\",\r\n\t\"./Orientation\"\r\n],function(\r\n\tgeom,\r\n\tstyler,\r\n\tfinder,\r\n\tOrientation\r\n){\r\n\r\n\t/**\r\n\t * Detects children orientation.\r\n\t */\r\n\tfunction oriented(el, options) {\r\n\t\tvar elCSS = styler.css(el),\r\n\r\n\t\t\telWidth = geom.contentRect(el).width,\r\n\r\n\t\t\tchild1 = finder.childAt(el, 0, options),\r\n\t\t\tchild2 = finder.childAt(el, 1, options),\r\n\t\t\tfirstChildCSS = child1 && styler.css(child1),\r\n\t\t\tsecondChildCSS = child2 && styler.css(child2),\r\n\r\n\t\t\tfirstChildWidth = child1 && geom.marginSize(child1).width,\r\n\t\t\tsecondChildWidth = child2 && geom.marginSize(child2).width;\r\n\r\n\t\tif (elCSS.display === 'flex') {\r\n\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\r\n\t\t\t? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (elCSS.display === 'grid') {\r\n\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (child1 && firstChildCSS.float !== 'none') {\r\n\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\r\n\r\n\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\r\n\t\t\t\tOrientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\treturn (child1 &&\r\n\t\t\t(\r\n\t\t\t\tfirstChildCSS.display === 'block' ||\r\n\t\t\t\tfirstChildCSS.display === 'flex' ||\r\n\t\t\t\tfirstChildCSS.display === 'table' ||\r\n\t\t\t\tfirstChildCSS.display === 'grid' ||\r\n\t\t\t\tfirstChildWidth >= elWidth &&\r\n\t\t\t\telCSS[CSSFloatProperty] === 'none' ||\r\n\t\t\t\tchild2 &&\r\n\t\t\t\telCSS[CSSFloatProperty] === 'none' &&\r\n\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\r\n\t\t\t) ?\r\n\t\t\tOrientation.Vertical : Orientation.Horizontal\r\n\t\t);\r\n\t}\r\n\r\n\treturn oriented;\r\n});\ndefine('skylark-sortable/autoscroll',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-scrolls/scrollingElement\"\r\n],function(\r\n\tlangx,\r\n\tisBrowser,\r\n\tgeom,\r\n\tstyler,\r\n\tscrollingElement\r\n){\r\n\tvar autoScrolls = [],\r\n\t\tscrolling = false;\r\n\r\n\tvar\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari;\r\n\r\n\r\n\t/**\r\n\t * Checks if a side of an element is scrolled past a side of it's parents\r\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\r\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\r\n\t * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n\t */\r\n\tfunction _isScrolledPast(el, side) {\r\n\t\tvar parent = _getParentAutoScrollElement(el, true),\r\n\t\t\telSide = geom.boundingRect(el)[side];\r\n\r\n\t\t/* jshint boss:true */\r\n\t\twhile (parent) {\r\n\t\t\tvar parentSide = geom.boundingRect(parent)[side],\r\n\t\t\t\tvisible;\r\n\r\n\t\t\tif (side === 'top' || side === 'left') {\r\n\t\t\t\tvisible = elSide >= parentSide;\r\n\t\t\t} else {\r\n\t\t\t\tvisible = elSide <= parentSide;\r\n\t\t\t}\r\n\r\n\t\t\tif (!visible) return parent;\r\n\r\n\t\t\tif (parent === scrollingElement()) break;\r\n\r\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n\t * The value is returned in real pixels.\r\n\t * @param  {HTMLElement} el\r\n\t * @return {Array}             Offsets in the format of [left, top]\r\n\t */\r\n\tfunction _getRelativeScrollOffset(el) {\r\n\t\tvar offsetLeft = 0,\r\n\t\t\toffsetTop = 0,\r\n\t\t\twinScroller = scrollingElement();\r\n\r\n\t\tif (el) {\r\n\t\t\tdo {\r\n\t\t\t\tvar matrix = transforms.matrix(el),\r\n\t\t\t\t\tscaleX = matrix.a,\r\n\t\t\t\t\tscaleY = matrix.d;\r\n\r\n\t\t\t\toffsetLeft += el.scrollLeft * scaleX;\r\n\t\t\t\toffsetTop += el.scrollTop * scaleY;\r\n\t\t\t} while (el !== winScroller && (el = el.parentNode));\r\n\t\t}\r\n\r\n\t\treturn [offsetLeft, offsetTop];\r\n\t}\r\n\r\n\tvar _getParentAutoScrollElement = function(el, includeSelf) {\r\n\t\t// skip to window\r\n\t\tif (!el || !el.getBoundingClientRect) return scrollingElement();\r\n\r\n\t\tvar elem = el;\r\n\t\tvar gotSelf = false;\r\n\t\tdo {\r\n\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\r\n\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\r\n\t\t\t\tvar elemCSS = styler.css(elem);\r\n\t\t\t\tif (\r\n\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\r\n\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return scrollingElement();\r\n\r\n\t\t\t\t\tif (gotSelf || includeSelf) return elem;\r\n\t\t\t\t\tgotSelf = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t/* jshint boss:true */\r\n\t\t} while (elem = elem.parentNode);\r\n\r\n\t\treturn scrollingElement();\r\n\t},\r\n\r\n\r\n\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {\r\n\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\r\n\t\tif (options.scroll) {\r\n\t\t\tvar _this = rootEl ? rootEl[expando] : window,\r\n\t\t\t\tsens = options.scrollSensitivity,\r\n\t\t\t\tspeed = options.scrollSpeed,\r\n\r\n\t\t\t\tx = evt.clientX,\r\n\t\t\t\ty = evt.clientY,\r\n\r\n\t\t\t\twinScroller = scrollingElement(),\r\n\r\n\t\t\t\tscrollThisInstance = false;\r\n\r\n\t\t\t// Detect scrollEl\r\n\t\t\tif (scrollParentEl !== rootEl) {\r\n\t\t\t\t_clearAutoScrolls();\r\n\r\n\t\t\t\tscrollEl = options.scroll;\r\n\t\t\t\tscrollCustomFn = options.scrollFn;\r\n\r\n\t\t\t\tif (scrollEl === true) {\r\n\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\r\n\t\t\t\t\tscrollParentEl = scrollEl;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar layersOut = 0;\r\n\t\t\tvar currentParent = scrollEl;\r\n\t\t\tdo {\r\n\t\t\t\tvar\tel = currentParent,\r\n\t\t\t\t\trect = geom.boundingRect(el),\r\n\r\n\t\t\t\t\ttop = rect.top,\r\n\t\t\t\t\tbottom = rect.bottom,\r\n\t\t\t\t\tleft = rect.left,\r\n\t\t\t\t\tright = rect.right,\r\n\r\n\t\t\t\t\twidth = rect.width,\r\n\t\t\t\t\theight = rect.height,\r\n\r\n\t\t\t\t\tscrollWidth,\r\n\t\t\t\t\tscrollHeight,\r\n\r\n\t\t\t\t\tcss,\r\n\r\n\t\t\t\t\tvx,\r\n\t\t\t\t\tvy,\r\n\r\n\t\t\t\t\tcanScrollX,\r\n\t\t\t\t\tcanScrollY,\r\n\r\n\t\t\t\t\tscrollPosX,\r\n\t\t\t\t\tscrollPosY;\r\n\r\n\r\n\t\t\t\tscrollWidth = el.scrollWidth;\r\n\t\t\t\tscrollHeight = el.scrollHeight;\r\n\r\n\t\t\t\tcss = styler.css(el);\r\n\r\n\t\t\t\tscrollPosX = el.scrollLeft;\r\n\t\t\t\tscrollPosY = el.scrollTop;\r\n\r\n\t\t\t\tif (el === winScroller) {\r\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\r\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\r\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);\r\n\r\n\t\t\t\tvy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);\r\n\r\n\r\n\t\t\t\tif (!autoScrolls[layersOut]) {\r\n\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\r\n\t\t\t\t\t\tif (!autoScrolls[i]) {\r\n\t\t\t\t\t\t\tautoScrolls[i] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\r\n\t\t\t\t\tautoScrolls[layersOut].el = el;\r\n\t\t\t\t\tautoScrolls[layersOut].vx = vx;\r\n\t\t\t\t\tautoScrolls[layersOut].vy = vy;\r\n\r\n\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\r\n\r\n\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\r\n\t\t\t\t\t\tscrollThisInstance = true;\r\n\t\t\t\t\t\t/* jshint loopfunc:true */\r\n\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\r\n\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\r\n\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\r\n\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\r\n\t\t\t\t\t\t\t\tSortable.active._onTouchMove(touchEvt, true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\r\n\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\r\n\r\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\r\n\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeom.scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\r\n\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlayersOut++;\r\n\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = _getParentAutoScrollElement(currentParent, false)));\r\n\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\r\n\t\t}\r\n\t}, 30),\r\n\r\n\t_clearAutoScrolls = function () {\r\n\t\tautoScrolls.forEach(function(autoScroll) {\r\n\t\t\tclearInterval(autoScroll.pid);\r\n\t\t});\r\n\t\tautoScrolls = [];\r\n\t},\r\n\r\n\t_handleAutoScroll = function(evt, options,fallback) {\r\n\t\tvar x = evt.clientX,\r\n\t\t\ty = evt.clientY,\r\n\r\n\t\t\telem = document.elementFromPoint(x, y);\r\n\r\n\t\t// IE does not seem to have native autoscroll,\r\n\t\t// Edge's autoscroll seems too conditional,\r\n\t\t// MACOS Safari does not have autoscroll,\r\n\t\t// Firefox and Chrome are good\r\n\t\tif (fallback || Edge || IE11OrLess || Safari) {\r\n\t\t\t_throttleTimeout = _autoScroll(evt, options, elem, fallback);\r\n\r\n\t\t\t// Listener for pointer element change\r\n\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\r\n\t\t\tif (\r\n\t\t\t\tscrolling &&\r\n\t\t\t\t(\r\n\t\t\t\t\t!pointerElemChangedInterval ||\r\n\t\t\t\t\tx !== lastPointerElemX ||\r\n\t\t\t\t\ty !== lastPointerElemY\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\r\n\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\r\n\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\r\n\t\t\t\tpointerElemChangedInterval = setInterval(function() {\r\n\t\t\t\t\tif (!dragEl) return;\r\n\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\r\n\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\r\n\t\t\t\t\tif (newElem !== ogElemScroller) {\r\n\t\t\t\t\t\togElemScroller = newElem;\r\n\t\t\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\t\t\t_throttleTimeout = _autoScroll(evt, options, ogElemScroller, fallback);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 10);\r\n\t\t\t\tlastPointerElemX = x;\r\n\t\t\t\tlastPointerElemY = y;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\r\n\t\t\tif (!options.bubbleScroll || _getParentAutoScrollElement(elem, true) === scrollingElement()) {\r\n\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t_throttleTimeout = _autoScroll(evt, options, _getParentAutoScrollElement(elem, false), false);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tvar _throttleTimeout;\r\n\tfunction _throttle(callback, ms) {\r\n\t\treturn langx.debounce(callback,ms);\r\n\t}\r\n\r\n\tfunction _cancelThrottle() {\r\n\t\t//clearTimeout(_throttleTimeout);\r\n\t\t//_throttleTimeout = void 0;\r\n\t\tif (_throttleTimeout && _throttleTimeout.stop) {\r\n\t\t\t_throttleTimeout.stop();\r\n\t\t\t_throttleTimeout = void 0;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\treturn {\r\n\t\tautoScrolls,\r\n\t\t\r\n\t\t_isScrolledPast,\r\n\t\t_getRelativeScrollOffset,\r\n\t\t_autoScroll,\r\n\r\n\t\t_clearAutoScrolls,\r\n\t\t_handleAutoScroll,\r\n\r\n\t\t_throttle,\r\n\t\t_cancelThrottle\r\n\t}\r\n});\ndefine('skylark-sortable/Sortable',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll\r\n){\r\n\tfunction log(category,message) {\r\n\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\r\n\t}\t\r\n\r\n\r\n\tvar dragEl,\r\n\t\tparentEl,\r\n\t\tghostEl,\r\n\t\tcloneEl,\r\n\t\trootEl,\r\n\t\tnextEl,\r\n\t\tlastDownEl,\r\n\r\n\t\tscrollEl,\r\n\t\tscrollParentEl,\r\n\t\tscrollCustomFn,\r\n\r\n\t\toldIndex,\r\n\t\tnewIndex,\r\n\t\toldDraggableIndex,\r\n\t\tnewDraggableIndex,\r\n\r\n\t\tactiveGroup,\r\n\t\tputSortable,\r\n\r\n\t\tawaitingDragStarted = false,\r\n\t\tignoreNextClick = false,\r\n\t\tsortables = [],\r\n\r\n\t\tpointerElemChangedInterval,\r\n\t\tlastPointerElemX,\r\n\t\tlastPointerElemY,\r\n\r\n\t\ttapEvt,\r\n\t\ttouchEvt,\r\n\r\n\t\tmoved,\r\n\r\n\r\n\t\tlastTarget,\r\n\t\tlastDirection,\r\n\t\tpastFirstInvertThresh = false,\r\n\t\tisCircumstantialInvert = false,\r\n\t\tlastMode, // 'swap' or 'insert'\r\n\r\n\t\ttargetMoveDistance,\r\n\r\n\t\t// For positioning ghost absolutely\r\n\t\tghostRelativeParent,\r\n\t\tghostRelativeParentInitialScroll = [], // (left, top)\r\n\r\n\t\trealDragElRect, // dragEl rect after current animation\r\n\r\n\t\t/** @const */\r\n\t\tR_SPACE = /\\s+/g,\r\n\r\n\t\texpando = 'Sortable' + (new Date).getTime(),\r\n\r\n\t\twin = window,\r\n\t\tdocument = win.document,\r\n\t\tparseInt = win.parseInt,\r\n\t\tsetTimeout = win.setTimeout,\r\n\r\n\t\tPolymer = win.Polymer,\r\n\r\n\t\tcaptureMode = {\r\n\t\t\tcapture: false,\r\n\t\t\tpassive: false\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\r\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\r\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\r\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\r\n\r\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\r\n\t\t*/\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari,\r\n\r\n\t\tIOS = isMobile && isMobile.apple.device,\r\n\t\tPositionGhostAbsolutely = isMobile.apple.device, //IOS\r\n\r\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\r\n\r\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\r\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\r\n\r\n\t\t/*\r\n\t\tsupportCssPointerEvents = (function() {\r\n\t\t\t// false when <= IE11\r\n\t\t\tif (IE11OrLess) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar el = document.createElement('x');\r\n\t\t\tel.style.cssText = 'pointer-events:auto';\r\n\t\t\treturn el.style.pointerEvents === 'auto';\r\n\t\t})(),\r\n\t\t*/\r\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents;\r\n\r\n\t\t_silent = false,\r\n\t\t_alignedSilent = false,\r\n\r\n\t\tabs = Math.abs,\r\n\t\tmin = Math.min,\r\n\t\tmax = Math.max,\r\n\r\n\t\tsavedInputChecked = [],\r\n\r\n\t\t/**\r\n\t\t * Detects children direction.\r\n\t\t */\r\n\t\t_detectDirection = function(el, options) {\r\n\t\t\toptions.excluding = [ghostEl,dragEl];\r\n\t\t\treturn oriented(el,options);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n\t\t * @param  {Number} x      X position\r\n\t\t * @param  {Number} y      Y position\r\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\r\n\t\t */\r\n\t\t_detectNearestEmptySortable = function(x, y) {\r\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\r\n\t\t\t\tif (_lastChild(sortables[i])) continue;\r\n\r\n\t\t\t\tvar rect = geom.boundingRect(sortables[i]),\r\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\r\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\r\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\r\n\r\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\r\n\t\t\t\t\treturn sortables[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\r\n\t\t\tvar targetRect = geom.boundingRect(el),\r\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\r\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\r\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\r\n\r\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\r\n\t\t},\r\n\r\n\t\t_isElInRowColumn = function(el1, el2, axis) {\r\n\t\t\tvar el1Rect = el1 === dragEl && realDragElRect || geom.boundingRect(el1),\r\n\t\t\t\tel2Rect = el2 === dragEl && realDragElRect || geom.boundingRect(el2),\r\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\r\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\r\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\r\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\r\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\r\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\r\n\r\n\t\t\treturn (\r\n\t\t\t\tel1S1Opp === el2S1Opp ||\r\n\t\t\t\tel1S2Opp === el2S2Opp ||\r\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\r\n\t\t_prepareGroup = function (options) {\r\n\t\t\tfunction toFn(value, pull) {\r\n\t\t\t\treturn function(to, from, dragEl, evt) {\r\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\r\n\r\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\r\n\t\t\t\t\t\t// Default pull value\r\n\t\t\t\t\t\t// Default pull and put value if same group\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (value == null || value === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (pull && value === 'clone') {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t} else if (typeof value === 'function') {\r\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\r\n\r\n\t\t\t\t\t\treturn (value === true ||\r\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\r\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar group = {};\r\n\t\t\tvar originalGroup = options.group;\r\n\r\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\r\n\t\t\t\toriginalGroup = {name: originalGroup};\r\n\t\t\t}\r\n\r\n\t\t\tgroup.name = originalGroup.name;\r\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\r\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\r\n\t\t\tgroup.revertClone = originalGroup.revertClone;\r\n\r\n\t\t\toptions.group = group;\r\n\t\t},\r\n\r\n\t\t_checkAlignment = function(evt) {\r\n\t\t\tif (!dragEl || !dragEl.parentNode) return;\r\n\t\t\tdragEl.parentNode[expando] && dragEl.parentNode[expando]._computeIsAligned(evt);\r\n\t\t},\r\n\r\n\t\t_hideGhostForTarget = function() {\r\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t\t\tstyler.css(ghostEl, 'display', 'none');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_unhideGhostForTarget = function() {\r\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t\t\tstyler.css(ghostEl, 'display', '');\r\n\t\t\t}\r\n\t\t};\r\n\r\n\r\n\r\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\r\n\tdocument.addEventListener('click', function(evt) {\r\n\t\tif (ignoreNextClick) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation && evt.stopPropagation();\r\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\r\n\t\t\tignoreNextClick = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, true);\r\n\r\n\tvar nearestEmptyInsertDetectEvent = function(evt) {\r\n\t\tif (dragEl) {\r\n\t\t\tevt = evt.touches ? evt.touches[0] : evt;\r\n\t\t\tvar nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\r\n\r\n\t\t\tif (nearest) {\r\n\t\t\t\t// Create imitation event\r\n\t\t\t\tvar event = {};\r\n\t\t\t\tfor (var i in evt) {\r\n\t\t\t\t\tevent[i] = evt[i];\r\n\t\t\t\t}\r\n\t\t\t\tevent.target = event.rootEl = nearest;\r\n\t\t\t\tevent.preventDefault = void 0;\r\n\t\t\t\tevent.stopPropagation = void 0;\r\n\t\t\t\tnearest[expando]._onDragOver(event);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tfunction _find(ctx, tagName, iterator) {\r\n\t\tif (ctx) {\r\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\r\n\r\n\t\t\tif (iterator) {\r\n\t\t\t\tfor (; i < n; i++) {\r\n\t\t\t\t\titerator(list[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n\t * @param  {HTMLElement} el       Parent element\r\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\r\n\t */\r\n\tfunction _lastChild(el) {\r\n\t\t/*\r\n\t\tvar last = el.lastElementChild;\r\n\r\n\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\r\n\t\t\tlast = last.previousElementSibling;\r\n\t\t}\r\n\r\n\t\treturn last || null;\r\n\t\t*/\r\n\t\treturn finder.lastChild(el,{\r\n\t\t\tignoreHidden : true,\r\n\t\t\texcluding : [ghostEl]\r\n\t\t})\r\n\t}\r\n\r\n\tfunction _ghostIsLast(evt, axis, el) {\r\n\t\tvar elRect = geom.boundingRect(_lastChild(el)),\r\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\r\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\r\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\r\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\r\n\t\t\tspacer = 10;\r\n\r\n\t\treturn (\r\n\t\t\taxis === 'vertical' ?\r\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\r\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Generate id\r\n\t * @param   {HTMLElement} el\r\n\t * @returns {String}\r\n\t * @private\r\n\t */\r\n\tfunction _generateId(el) {\r\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n\t\t\ti = str.length,\r\n\t\t\tsum = 0;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tsum += str.charCodeAt(i);\r\n\t\t}\r\n\r\n\t\treturn sum.toString(36);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the index of an element within its parent for a selected set of\r\n\t * elements\r\n\t * @param  {HTMLElement} el\r\n\t * @param  {selector} selector\r\n\t * @return {number}\r\n\t */\r\n\tfunction _index(el, selector) {\r\n\t\treturn finder.index(el,function(el){\r\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== cloneEl && (!selector || finder.matches(el, selector))) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\t\t\t\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tfunction _saveInputCheckedState(root) {\r\n\t\tsavedInputChecked.length = 0;\r\n\r\n\t\tvar inputs = root.getElementsByTagName('input');\r\n\t\tvar idx = inputs.length;\r\n\r\n\t\twhile (idx--) {\r\n\t\t\tvar el = inputs[idx];\r\n\t\t\tel.checked && savedInputChecked.push(el);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _nextTick(fn) {\r\n\t\t//return setTimeout(fn, 0);\r\n\t\treturn langx.defer(fn);\r\n\t}\r\n\r\n\tfunction _cancelNextTick(id) {\r\n\t\t//return clearTimeout(id);\r\n\t\treturn id && id.stop();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the \"bounding client rect\" of given element\r\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\r\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\r\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\r\n\t * @return {Object}                        The boundingClientRect of el\r\n\t */\r\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\r\n\t\tif (!el.getBoundingClientRect && el !== win) return;\r\n\t\tvar {\r\n\t\t\ttop,\r\n\t\t\tleft,\r\n\t\t\tbottom,\r\n\t\t\tright,\r\n\t\t\twidth,\r\n\t\t\theight\r\n\t\t} = geom.boundingRect(el);\r\n\t\t\r\n\t\tif (adjustForTransform && el !== win) {\r\n\t\t\t// Adjust for scale()\r\n\t\t\tvar matrix = transforms.matrix(container || el),\r\n\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\tif (matrix) {\r\n\t\t\t\ttop /= scaleY;\r\n\t\t\t\tleft /= scaleX;\r\n\r\n\t\t\t\twidth /= scaleX;\r\n\t\t\t\theight /= scaleY;\r\n\r\n\t\t\t\tbottom = top + height;\r\n\t\t\t\tright = left + width;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: top,\r\n\t\t\tleft: left,\r\n\t\t\tbottom: bottom,\r\n\t\t\tright: right,\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\t// Fixed #973:\r\n\teventer.on(document, 'touchmove', function(evt) {\r\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\r\n\t\t\tevt.preventDefault();\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t/**\r\n\t * @class  Sortable\r\n\t * @param  {HTMLElement}  el\r\n\t * @param  {Object}       [options]\r\n\t */\r\n\tfunction Sortable(el, options) {\r\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\r\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\r\n\t\t}\r\n\r\n\t\tthis.el = el; // root element\r\n\t\tthis.options = options = langx.mixin({}, options);\r\n\r\n\r\n\t\t// Export instance\r\n\t\tel[expando] = this;\r\n\r\n\t\t// Default options\r\n\t\tvar defaults = {\r\n\t\t\tgroup: null,\r\n\t\t\tsort: true,\r\n\t\t\tdisabled: false,\r\n\t\t\tstore: null,\r\n\t\t\thandle: null,\r\n\t\t\tscroll: true,\r\n\t\t\tscrollSensitivity: 30,\r\n\t\t\tscrollSpeed: 10,\r\n\t\t\tbubbleScroll: true,\r\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\r\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\r\n\t\t\tinvertSwap: false, // invert always\r\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\r\n\t\t\tremoveCloneOnHide: true,\r\n\t\t\tdirection: function() {\r\n\t\t\t\treturn _detectDirection(el, this.options);\r\n\t\t\t},\r\n\t\t\tghostClass: 'sortable-ghost',\r\n\t\t\tchosenClass: 'sortable-chosen',\r\n\t\t\tdragClass: 'sortable-drag',\r\n\t\t\tignore: 'a, img',\r\n\t\t\tfilter: null,\r\n\t\t\tpreventOnFilter: true,\r\n\t\t\tanimation: 0,\r\n\t\t\teasing: null,\r\n\t\t\tsetData: function (dataTransfer, dragEl) {\r\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\r\n\t\t\t},\r\n\t\t\tdropBubble: false,\r\n\t\t\tdragoverBubble: false,\r\n\t\t\tdataIdAttr: 'data-id',\r\n\t\t\tdelay: 0,\r\n\t\t\tdelayOnTouchOnly: false,\r\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\r\n\t\t\tforceFallback: false,\r\n\t\t\tfallbackClass: 'sortable-fallback',\r\n\t\t\tfallbackOnBody: false,\r\n\t\t\tfallbackTolerance: 0,\r\n\t\t\tfallbackOffset: {x: 0, y: 0},\r\n\t\t\tsupportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\r\n\t\t\temptyInsertThreshold: 5\r\n\t\t};\r\n\r\n\r\n\t\t// Set default options\r\n\t\tfor (var name in defaults) {\r\n\t\t\t!(name in options) && (options[name] = defaults[name]);\r\n\t\t}\r\n\r\n\t\t_prepareGroup(options);\r\n\r\n\t\t// Bind all private methods\r\n\t\tfor (var fn in this) {\r\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n\t\t\t\tthis[fn] = this[fn].bind(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Setup drag mode\r\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\r\n\t\t\tthis.options.touchStartThreshold = 1;\r\n\t\t}\r\n\r\n\t\t// Bind events\r\n\t\ttouch.mousy(el);\r\n\r\n\t\teventer.on(el, 'mousedown', this._onTapStart);\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\teventer.on(el, 'dragover', this);\r\n\t\t\teventer.on(el, 'dragenter', this);\r\n\t\t}\r\n\r\n\t\tsortables.push(this.el);\r\n\r\n\t\t// Restore sorting\r\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\r\n\t}\r\n\r\n\tSortable.prototype = /** @lends Sortable.prototype */ {\r\n\t\tconstructor: Sortable,\r\n\r\n\t\t_computeIsAligned: function(evt) {\r\n\t\t\tvar target;\r\n\r\n\t\t\tif (ghostEl && !supportCssPointerEvents) {\r\n\t\t\t\t_hideGhostForTarget();\r\n\t\t\t\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\r\n\t\t\t\t_unhideGhostForTarget();\r\n\t\t\t} else {\r\n\t\t\t\ttarget = evt.target;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\r\n\t\t\tif (_alignedSilent) return;\r\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\r\n\r\n\t\t\tvar children = this.el.children;\r\n\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\r\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\r\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\r\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\r\n\t\t\t\tlastTarget = null;\r\n\t\t\t}\r\n\r\n\t\t\t_alignedSilent = true;\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t_alignedSilent = false;\r\n\t\t\t}, 30);\r\n\r\n\t\t},\r\n\r\n\t\t_getDirection: function(evt, target) {\r\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\r\n\t\t},\r\n\r\n\r\n\t\t// handle moudedown event\r\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\r\n\t\t\t//if (!evt.cancelable) return;\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\r\n\t\t\t\ttype = evt.type,\r\n\t\t\t\ttouch = evt.touches && evt.touches[0],\r\n\t\t\t\ttarget = (touch || evt).target,\r\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\r\n\t\t\t\tfilter = options.filter,\r\n\t\t\t\tstartIndex,\r\n\t\t\t\tstartDraggableIndex;\r\n\r\n\t\t\t_saveInputCheckedState(el);\r\n\r\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\r\n\t\t\tif (dragEl) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\r\n\t\t\t\treturn; // only left button and enabled\r\n\t\t\t}\r\n\r\n\t\t\t// cancel dnd if original target is content editable\r\n\t\t\tif (originalTarget.isContentEditable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, false);\r\n\r\n\r\n\t\t\tif (lastDownEl === target) {\r\n\t\t\t\t// Ignoring duplicate `down`\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlog(\"_onTapStart\",target.tagName+\",\"+target.className);\r\n\r\n\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\tstartIndex = _index(target);\r\n\t\t\tstartDraggableIndex = _index(target, options.draggable);\r\n\r\n\t\t\t// Check filter\r\n\t\t\tif (typeof filter === 'function') {\r\n\t\t\t\tif (filter.call(this, evt, target, this)) {\r\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (filter) {\r\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\r\n\t\t\t\t\tcriteria = finder.closest(originalTarget, criteria.trim(), el, false);\r\n\r\n\t\t\t\t\tif (criteria) {\r\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (filter) {\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Prepare `dragstart`\r\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\r\n\t\t},\r\n\r\n\r\n\t\t_handleAutoScroll: function(evt, fallback) {\r\n\r\n\t\t\tif (!dragEl || !this.options.scroll) return;\r\n\r\n\t\t\treturn autoscroll._handleAutoScroll(evt,this.options,fallback);\r\n\t\t},\r\n\r\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = _this.el,\r\n\t\t\t\toptions = _this.options,\r\n\t\t\t\townerDocument = el.ownerDocument,\r\n\t\t\t\tdragStartFn;\r\n\t\t\tlog(\"_prepareDragStart\",\"start\");\r\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\r\n\t\t\t\trootEl = el;\r\n\t\t\t\tdragEl = target;\r\n\t\t\t\tparentEl = dragEl.parentNode;\r\n\t\t\t\tnextEl = dragEl.nextSibling;\r\n\t\t\t\tlastDownEl = target;\r\n\t\t\t\tactiveGroup = options.group;\r\n\t\t\t\toldIndex = startIndex;\r\n\t\t\t\toldDraggableIndex = startDraggableIndex;\r\n\r\n\t\t\t\ttapEvt = {\r\n\t\t\t\t\ttarget: dragEl,\r\n\t\t\t\t\tclientX: (touch || evt).clientX,\r\n\t\t\t\t\tclientY: (touch || evt).clientY\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._lastX = (touch || evt).clientX;\r\n\t\t\t\tthis._lastY = (touch || evt).clientY;\r\n\r\n\t\t\t\tdragEl.style['will-change'] = 'all';\r\n\t\t\t\t// undo animation if needed\r\n\t\t\t\tdragEl.style.transition = '';\r\n\t\t\t\tdragEl.style.transform = '';\r\n\r\n\t\t\t\tdragStartFn = function () {\r\n\t\t\t\t\t// Delayed drag has been triggered\r\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\r\n\t\t\t\t\t_this._disableDelayedDragEvents();\r\n\r\n\t\t\t\t\tif (!FireFox && _this.nativeDraggable) {\r\n\t\t\t\t\t\tdragEl.draggable = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Bind the events: dragstart/dragend\r\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\r\n\r\n\t\t\t\t\t// Drag start event\r\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\r\n\r\n\t\t\t\t\t// Chosen item\r\n\t\t\t\t\tstyler.toggleClass(dragEl, options.chosenClass, true);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Disable \"draggable\"\r\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\r\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\r\n\t\t\t\t});\r\n\r\n\t\t\t\teventer.on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\r\n\t\t\t\teventer.on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\r\n\r\n\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._onDrop);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchend', _this._onDrop);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\r\n\r\n\t\t\t\t// Make dragEl draggable (must be before delay for FireFox)\r\n\t\t\t\tif (FireFox && this.nativeDraggable) {\r\n\t\t\t\t\tthis.options.touchStartThreshold = 4;\r\n\t\t\t\t\tdragEl.draggable = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Delay is impossible for native DnD in Edge or IE\r\n\t\t\t\tif (options.delay && (options.delayOnTouchOnly ? touch : true) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\r\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\r\n\t\t\t\t\t// before the delay has been reached:\r\n\t\t\t\t\t// disable the delayed drag\r\n\t\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchend', _this._disableDelayedDrag);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\r\n\t\t\t\t\teventer.on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t//options.supportPointer && eventer.on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\r\n\r\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdragStartFn();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\r\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\r\n\t\t\tif (max(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\r\n\t\t\t\t\t>= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))\r\n\t\t\t) {\r\n\t\t\t\tthis._disableDelayedDrag();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_disableDelayedDrag: function () {\r\n\t\t\tdragEl && _disableDraggable(dragEl);\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\tthis._disableDelayedDragEvents();\r\n\t\t},\r\n\r\n\t\t_disableDelayedDragEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._disableDelayedDrag);\r\n\t\t\teventer.off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\r\n\t\t},\r\n\r\n\t\t//native dnd mode : register _OnDragStart for dragstart event handler \r\n\t\t//moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\r\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\r\n\t\t\tlog(\"_triggerDragStart\",\"start\");\r\n\t\t\tlog(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\r\n\t\t\tif (!this.nativeDraggable) {\r\n\t\t\t\teventer.on(document, 'mousemove', this._onTouchMove);\r\n\t\t\t} else {\r\n\t\t\t\teventer.on(dragEl, 'dragend', this);\r\n\t\t\t\teventer.on(rootEl, 'dragstart', this._onDragStart);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (document.selection) {\r\n\t\t\t\t\t// Timeout neccessary for IE9\r\n\t\t\t\t\t_nextTick(function () {\r\n\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//\r\n\t\t//\r\n\t\t_dragStarted: function (fallback, evt) {\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tif (rootEl && dragEl) {\r\n\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\teventer.on(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\t\teventer.on(document, 'dragover', _checkAlignment);\r\n\t\t\t\t}\r\n\t\t\t\tvar options = this.options;\r\n\r\n\t\t\t\t// Apply effect\r\n\t\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, false);\r\n\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\r\n\t\t\t\t// In case dragging an animated element\r\n\t\t\t\tstyler.css(dragEl, 'transform', '');\r\n\r\n\t\t\t\tSortable.active = this;\r\n\r\n\t\t\t\tfallback && this._appendGhost();\r\n\r\n\t\t\t\t// Drag start event\r\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\r\n\t\t\t} else {\r\n\t\t\t\tthis._nulling();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_emulateDragOver: function (forAutoScroll) {\r\n\t\t\tif (touchEvt) {\r\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._lastX = touchEvt.clientX;\r\n\t\t\t\tthis._lastY = touchEvt.clientY;\r\n\r\n\t\t\t\t_hideGhostForTarget();\r\n\r\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n\t\t\t\tvar parent = target;\r\n\r\n\t\t\t\twhile (target && target.shadowRoot) {\r\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n\t\t\t\t\tif (target === parent) break;\r\n\t\t\t\t\tparent = target;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tif (parent[expando]) {\r\n\t\t\t\t\t\t\tvar inserted;\r\n\r\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\r\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\r\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\r\n\t\t\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\t\t\trootEl: parent\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tif (inserted && !this.options.dragoverBubble) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttarget = parent; // store last element\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* jshint boss:true */\r\n\t\t\t\t\twhile (parent = parent.parentNode);\r\n\t\t\t\t}\r\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\r\n\r\n\t\t\t\t_unhideGhostForTarget();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t_onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\r\n\t\t\tlog(\"_onTouchMove\",\"start\");\r\n\t\t\tif (tapEvt) {\r\n\t\t\t\tvar\toptions = this.options,\r\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\r\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\r\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\r\n\t\t\t\t\tmatrix = ghostEl && transforms.matrix(ghostEl),\r\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\r\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\r\n\t\t\t\t\trelativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && _getRelativeScrollOffset(ghostRelativeParent),\r\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX)\r\n\t\t\t\t\t\t\t+ fallbackOffset.x) / (scaleX || 1)\r\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\r\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY)\r\n\t\t\t\t\t\t\t+ fallbackOffset.y) / (scaleY || 1)\r\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\r\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\r\n\r\n\t\t\t\t// only set the status to dragging, when we are actually dragging\r\n\t\t\t\tif (!Sortable.active && !awaitingDragStarted) {\r\n\t\t\t\t\tif (fallbackTolerance &&\r\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._onDragStart(evt, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!forAutoScroll && this._handleAutoScroll(touch, true);\r\n\r\n\t\t\t\tmoved = true;\r\n\t\t\t\ttouchEvt = touch;\r\n\r\n\t\t\t\tif (ghostEl) {\r\n\t\t\t\t\tstyler.css(ghostEl, 'webkitTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'mozTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'msTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'transform', translate3d);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//evt.cancelable && evt.preventDefault();\r\n\t\t\t\tevt.preventDefault()\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_appendGhost: function () {\r\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\r\n\t\t\t// Not being adjusted for\r\n\t\t\tif (!ghostEl) {\r\n\t\t\t\tvar container = this.options.fallbackOnBody ? document.body : rootEl,\r\n\t\t\t\t\trect = _getRect(dragEl, true, container, !PositionGhostAbsolutely),\r\n\t\t\t\t\tcss = styler.css(dragEl),\r\n\t\t\t\t\toptions = this.options;\r\n\r\n\t\t\t\t// Position absolutely\r\n\t\t\t\tif (PositionGhostAbsolutely) {\r\n\t\t\t\t\t// Get relatively positioned parent\r\n\t\t\t\t\tghostRelativeParent = container;\r\n\r\n\t\t\t\t\twhile (\r\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'position') === 'static' &&\r\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'transform') === 'none' &&\r\n\t\t\t\t\t\tghostRelativeParent !== document\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ghostRelativeParent !== document) {\r\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\r\n\r\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\r\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\r\n\t\t\t\t\t\tif (ghostRelativeParent === document) ghostRelativeParent = scrollingElement();\r\n\r\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\r\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tghostRelativeParent = scrollingElement();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tghostRelativeParentInitialScroll = _getRelativeScrollOffset(ghostRelativeParent);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tghostEl = dragEl.cloneNode(true);\r\n\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.ghostClass, false);\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.fallbackClass, true);\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.dragClass, true);\r\n\r\n\t\t\t\tstyler.css(ghostEl, 'box-sizing', 'border-box');\r\n\t\t\t\tstyler.css(ghostEl, 'margin', 0);\r\n\t\t\t\tstyler.css(ghostEl, 'top', rect.top);\r\n\t\t\t\tstyler.css(ghostEl, 'left', rect.left);\r\n\t\t\t\tstyler.css(ghostEl, 'width', rect.width);\r\n\t\t\t\tstyler.css(ghostEl, 'height', rect.height);\r\n\t\t\t\tstyler.css(ghostEl, 'opacity', '0.8');\r\n\t\t\t\tstyler.css(ghostEl, 'position', (PositionGhostAbsolutely ? 'absolute' : 'fixed'));\r\n\t\t\t\tstyler.css(ghostEl, 'zIndex', '100000');\r\n\t\t\t\tstyler.css(ghostEl, 'pointerEvents', 'none');\r\n\r\n\t\t\t\tcontainer.appendChild(ghostEl);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t_animate: function (prevRect, target) {\r\n\t\t\tvar ms = this.options.animation;\r\n\r\n\t\t\tif (ms) {\r\n\t\t\t\tvar currentRect = geom.boundingRect(target);\r\n\r\n\t\t\t\tif (target === dragEl) {\r\n\t\t\t\t\trealDragElRect = currentRect;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (prevRect.nodeType === 1) {\r\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if actually moving position\r\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\r\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\r\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\r\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\r\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis._repaint(target);\r\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\r\n\t\t\t\ttarget.animated = setTimeout(function () {\r\n\t\t\t\t\tstyler.css(target, 'transition', '');\r\n\t\t\t\t\tstyler.css(target, 'transform', '');\r\n\t\t\t\t\ttarget.animated = false;\r\n\t\t\t\t}, ms);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_repaint: function(target) {\r\n\t\t\treturn target.offsetWidth;\r\n\t\t},\r\n\r\n\t\t_offMoveEvents: function() {\r\n\t\t\teventer.off(document, 'dragover', nearestEmptyInsertDetectEvent);\r\n\t\t\teventer.off(document, 'mousemove', nearestEmptyInsertDetectEvent);\r\n\t\t},\r\n\r\n\t\t_offUpEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\r\n\t\t\teventer.off(document, 'selectstart', this);\r\n\t\t},\r\n\r\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\r\n\t\t\tvar _this = this;\r\n\t\t\tvar dataTransfer = evt.dataTransfer;\r\n\t\t\tvar options = _this.options;\r\n\r\n\t\t\t// Setup clone\r\n\t\t\tcloneEl = noder.clone(dragEl,true);\r\n\r\n\t\t\tcloneEl.draggable = false;\r\n\t\t\tcloneEl.style['will-change'] = '';\r\n\r\n\t\t\tthis._hideClone();\r\n\r\n\t\t\tstyler.toggleClass(cloneEl, _this.options.chosenClass, false);\r\n\r\n\r\n\t\t\t// #1143: IFrame support workaround\r\n\t\t\t_this._cloneId = _nextTick(function () {\r\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\r\n\t\t\t\t}\r\n\t\t\t\t_dispatchEvent(_this, rootEl, 'clone', dragEl);\r\n\t\t\t});\r\n\r\n\r\n\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, true);\r\n\r\n\t\t\t// Set proper drop events\r\n\t\t\tif (fallback) {\r\n\t\t\t\tignoreNextClick = true;\r\n\t\t\t\t_this._loopId = setInterval(_this._emulateDragOver, 50);\r\n\t\t\t} else {\r\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\r\n\t\t\t\teventer.off(document, 'mouseup', _this._onDrop);\r\n\t\t\t\t///eventer.off(document, 'touchend', _this._onDrop);\r\n\t\t\t\t///eventer.off(document, 'touchcancel', _this._onDrop);\r\n\r\n\t\t\t\tif (dataTransfer) {\r\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\r\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\teventer.on(document, 'drop', _this);\r\n\r\n\t\t\t\t// #1276 fix:\r\n\t\t\t\tstyler.css(dragEl, 'transform', 'translateZ(0)');\r\n\t\t\t}\r\n\r\n\t\t\tawaitingDragStarted = true;\r\n\r\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\r\n\t\t\teventer.on(document, 'selectstart', _this);\r\n\t\t\tif (Safari) {\r\n\t\t\t\tstyler.css(document.body, 'user-select', 'none');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\r\n\t\t_onDragOver: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\ttarget = evt.target,\r\n\t\t\t\tdragRect,\r\n\t\t\t\ttargetRect,\r\n\t\t\t\trevert,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tgroup = options.group,\r\n\t\t\t\tactiveSortable = Sortable.active,\r\n\t\t\t\tisOwner = (activeGroup === group),\r\n\t\t\t\tcanSort = options.sort,\r\n\t\t\t\t_this = this;\r\n\r\n\t\t\tif (_silent) return;\r\n\r\n\t\t\t// Return invocation when dragEl is inserted (or completed)\r\n\t\t\tfunction completed(insertion) {\r\n\t\t\t\tif (insertion) {\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(_this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (activeSortable) {\r\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (putSortable !== _this && _this !== Sortable.active) {\r\n\t\t\t\t\t\tputSortable = _this;\r\n\t\t\t\t\t} else if (_this === Sortable.active) {\r\n\t\t\t\t\t\tputSortable = null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Animation\r\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\r\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\r\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\r\n\t\t\t\t\tlastTarget = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// no bubbling and not fallback\r\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\r\n\t\t\t\t\t_this._handleAutoScroll(evt);\r\n\t\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(evt);\r\n\r\n\t\t\t\t\t// Do not detect for empty insert if already inserted\r\n\t\t\t\t\t!insertion && nearestEmptyInsertDetectEvent(evt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Call when dragEl has been inserted\r\n\t\t\tfunction changed() {\r\n\t\t\t\t_dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl), oldDraggableIndex, _index(dragEl, options.draggable), evt);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\r\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\r\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\r\n\t\t\t */\r\n\t\t\tfunction _getInsertDirection(target) {\r\n\t\t\t\tvar dragElIndex = _index(dragEl),\r\n\t\t\t\t\ttargetIndex = _index(target);\r\n\r\n\t\t\t\tif (dragElIndex < targetIndex) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\r\n\t\t\t\tvar targetRect = geom.boundingRect(target),\r\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\r\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\r\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\r\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\r\n\t\t\t\t\tinvert = false;\r\n\r\n\r\n\t\t\t\tif (!invertSwap) {\r\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\r\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\r\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\r\n\t\t\t\t\t\t\t(lastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\r\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\r\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\r\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\r\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinvert = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Regular\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\r\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinvert = invert || invertSwap;\r\n\r\n\t\t\t\tif (invert) {\r\n\t\t\t\t\t// Invert of regular\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\r\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (evt.preventDefault !== void 0) {\r\n\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tmoved = true;\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\r\n\r\n\t\t\t// target is dragEl or target is animated\r\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\r\n\t\t\t\treturn completed(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (target !== dragEl) {\r\n\t\t\t\tignoreNextClick = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (activeSortable && !options.disabled &&\r\n\t\t\t\t(isOwner\r\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\tputSortable === this ||\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\r\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tvar axis = this._getDirection(evt, target);\r\n\r\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\r\n\r\n\t\t\t\tif (revert) {\r\n\t\t\t\t\tthis._hideClone();\r\n\t\t\t\t\tparentEl = rootEl; // actualization\r\n\r\n\t\t\t\t\tif (nextEl) {\r\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trootEl.appendChild(dragEl);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn completed(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar elLastChild = _lastChild(el);\r\n\r\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\r\n\t\t\t\t\t// assign target only if condition is true\r\n\t\t\t\t\tif (elLastChild && el === evt.target) {\r\n\t\t\t\t\t\ttarget = elLastChild;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\r\n\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\tparentEl = el; // actualization\r\n\t\t\t\t\t\trealDragElRect = null;\r\n\r\n\t\t\t\t\t\tchanged();\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\r\n\t\t\t\t\tvar direction = 0,\r\n\t\t\t\t\t\ttargetBeforeFirstSwap,\r\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\r\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\r\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\r\n\t\t\t\t\t\tscrolledPastTop = autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\r\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\r\n\r\n\r\n\t\t\t\t\tif (lastTarget !== target) {\r\n\t\t\t\t\t\tlastMode = null;\r\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\r\n\t\t\t\t\t\tpastFirstInvertThresh = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\r\n\t\t\t\t\t\tdifferentLevel ||\r\n\t\t\t\t\t\tscrolledPastTop ||\r\n\t\t\t\t\t\toptions.invertSwap ||\r\n\t\t\t\t\t\tlastMode === 'insert' ||\r\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\r\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\r\n\t\t\t\t\t\tlastMode === 'swap'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// New target that we will be inside\r\n\t\t\t\t\t\tif (lastMode !== 'swap') {\r\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\r\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\r\n\t\t\t\t\t\t\tisCircumstantialInvert,\r\n\t\t\t\t\t\t\tlastTarget === target);\r\n\t\t\t\t\t\tlastMode = 'swap';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Insert at position\r\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\r\n\t\t\t\t\t\tlastMode = 'insert';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (direction === 0) return completed(false);\r\n\r\n\t\t\t\t\trealDragElRect = null;\r\n\t\t\t\t\tlastTarget = target;\r\n\r\n\t\t\t\t\tlastDirection = direction;\r\n\r\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\r\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\r\n\t\t\t\t\t\tafter = false;\r\n\r\n\t\t\t\t\tafter = direction === 1;\r\n\r\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\r\n\r\n\t\t\t\t\tif (moveVector !== false) {\r\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\r\n\t\t\t\t\t\t\tafter = (moveVector === 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_silent = true;\r\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\r\n\r\n\t\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (after && !nextSibling) {\r\n\t\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\r\n\t\t\t\t\t\tif (scrolledPastTop) {\r\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\r\n\r\n\t\t\t\t\t\t// must be done before animation\r\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\r\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchanged();\r\n\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el.contains(dragEl)) {\r\n\t\t\t\t\treturn completed(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onDrop: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\toptions = this.options;\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tscrolling = false;\r\n\t\t\tisCircumstantialInvert = false;\r\n\t\t\tpastFirstInvertThresh = false;\r\n\r\n\t\t\tclearInterval(this._loopId);\r\n\r\n\t\t\tclearInterval(pointerElemChangedInterval);\r\n\t\t\t\r\n\t\t\tautoscroll._clearAutoScrolls();\r\n\t\t\tautoscroll._cancelThrottle();\r\n\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\t_cancelNextTick(this._cloneId);\r\n\t\t\t_cancelNextTick(this._dragStartId);\r\n\r\n\t\t\t// Unbind events\r\n\t\t\teventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(document, 'drop', this);\r\n\t\t\t\teventer.off(el, 'dragstart', this._onDragStart);\r\n\t\t\t\teventer.off(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\teventer.off(document, 'dragover', _checkAlignment);\r\n\t\t\t}\r\n\r\n\t\t\tif (Safari) {\r\n\t\t\t\tstyler.css(document.body, 'user-select', '');\r\n\t\t\t}\r\n\r\n\t\t\tthis._offMoveEvents();\r\n\t\t\tthis._offUpEvents();\r\n\r\n\t\t\tif (evt) {\r\n\t\t\t\tif (moved) {\r\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\r\n\r\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\r\n\t\t\t\t\t// Remove clone\r\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dragEl) {\r\n\t\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\t\teventer.off(dragEl, 'dragend', this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_disableDraggable(dragEl);\r\n\t\t\t\t\tdragEl.style['will-change'] = '';\r\n\r\n\t\t\t\t\t// Remove class's\r\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\r\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\r\n\r\n\t\t\t\t\t// Drag stop event\r\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\r\n\r\n\t\t\t\t\tif (rootEl !== parentEl) {\r\n\t\t\t\t\t\tnewIndex = _index(dragEl);\r\n\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t// Add event\r\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// Remove event\r\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// drag from one list and drop into another\r\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tputSortable && putSortable.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\r\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\t\t\t\t\tnewIndex = _index(dragEl);\r\n\t\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t\t// drag & drop within the same list\r\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (Sortable.active) {\r\n\t\t\t\t\t\t/* jshint eqnull:true */\r\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\r\n\t\t\t\t\t\t\tnewIndex = oldIndex;\r\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t// Save sorting\r\n\t\t\t\t\t\tthis.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis._nulling();\r\n\t\t},\r\n\r\n\t\t_nulling: function() {\r\n\t\t\trootEl =\r\n\t\t\tdragEl =\r\n\t\t\tparentEl =\r\n\t\t\tghostEl =\r\n\t\t\tnextEl =\r\n\t\t\tcloneEl =\r\n\t\t\tlastDownEl =\r\n\r\n\t\t\tscrollEl =\r\n\t\t\tscrollParentEl =\r\n\t\t\tautoscroll.autoScrolls.length =\r\n\r\n\t\t\tpointerElemChangedInterval =\r\n\t\t\tlastPointerElemX =\r\n\t\t\tlastPointerElemY =\r\n\r\n\t\t\ttapEvt =\r\n\t\t\ttouchEvt =\r\n\r\n\t\t\tmoved =\r\n\t\t\tnewIndex =\r\n\t\t\toldIndex =\r\n\r\n\t\t\tlastTarget =\r\n\t\t\tlastDirection =\r\n\r\n\t\t\trealDragElRect =\r\n\r\n\t\t\tputSortable =\r\n\t\t\tactiveGroup =\r\n\t\t\tSortable.active = null;\r\n\r\n\t\t\tsavedInputChecked.forEach(function (el) {\r\n\t\t\t\tel.checked = true;\r\n\t\t\t});\r\n\r\n\t\t\tsavedInputChecked.length = 0;\r\n\t\t},\r\n\r\n\t\thandleEvent: function (/**Event*/evt) {\r\n\t\t\tswitch (evt.type) {\r\n\t\t\t\tcase 'drop':\r\n\t\t\t\tcase 'dragend':\r\n\t\t\t\t\tthis._onDrop(evt);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'dragenter':\r\n\t\t\t\tcase 'dragover':\r\n\t\t\t\t\tif (dragEl) {\r\n\t\t\t\t\t\tthis._onDragOver(evt);\r\n\t\t\t\t\t\t_globalDragOver(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selectstart':\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Serializes the item into an array of string.\r\n\t\t * @returns {String[]}\r\n\t\t */\r\n\t\ttoArray: function () {\r\n\t\t\tvar order = [],\r\n\t\t\t\tel,\r\n\t\t\t\tchildren = this.el.children,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tn = children.length,\r\n\t\t\t\toptions = this.options;\r\n\r\n\t\t\tfor (; i < n; i++) {\r\n\t\t\t\tel = children[i];\r\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\r\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn order;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Sorts the elements according to the array.\r\n\t\t * @param  {String[]}  order  order of the items\r\n\t\t */\r\n\t\tsort: function (order) {\r\n\t\t\tvar items = {}, rootEl = this.el;\r\n\r\n\t\t\tthis.toArray().forEach(function (id, i) {\r\n\t\t\t\tvar el = rootEl.children[i];\r\n\r\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\r\n\t\t\t\t\titems[id] = el;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\torder.forEach(function (id) {\r\n\t\t\t\tif (items[id]) {\r\n\t\t\t\t\trootEl.removeChild(items[id]);\r\n\t\t\t\t\trootEl.appendChild(items[id]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Save the current sorting\r\n\t\t */\r\n\t\tsave: function () {\r\n\t\t\tvar store = this.options.store;\r\n\t\t\tstore && store.set && store.set(this);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n\t\t * @param   {HTMLElement}  el\r\n\t\t * @param   {String}       [selector]  default: `options.draggable`\r\n\t\t * @returns {HTMLElement|null}\r\n\t\t */\r\n\t\tclosest: function (el, selector) {\r\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set/get option\r\n\t\t * @param   {string} name\r\n\t\t * @param   {*}      [value]\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\toption: function (name, value) {\r\n\t\t\tvar options = this.options;\r\n\r\n\t\t\tif (value === void 0) {\r\n\t\t\t\treturn options[name];\r\n\t\t\t} else {\r\n\t\t\t\toptions[name] = value;\r\n\r\n\t\t\t\tif (name === 'group') {\r\n\t\t\t\t\t_prepareGroup(options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Destroy\r\n\t\t */\r\n\t\tdestroy: function () {\r\n\t\t\tvar el = this.el;\r\n\r\n\t\t\tel[expando] = null;\r\n\r\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(el, 'dragover', this);\r\n\t\t\t\teventer.off(el, 'dragenter', this);\r\n\t\t\t}\r\n\t\t\t// Remove draggable attributes\r\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\r\n\t\t\t\tel.removeAttribute('draggable');\r\n\t\t\t});\r\n\r\n\t\t\tthis._onDrop();\r\n\r\n\t\t\tsortables.splice(sortables.indexOf(this.el), 1);\r\n\r\n\t\t\tthis.el = el = null;\r\n\t\t},\r\n\r\n\t\t_hideClone: function() {\r\n\t\t\tif (!cloneEl.cloneHidden) {\r\n\t\t\t\tstyler.css(cloneEl, 'display', 'none');\r\n\t\t\t\tcloneEl.cloneHidden = true;\r\n\t\t\t\tif (cloneEl.parentNode && this.options.removeCloneOnHide) {\r\n\t\t\t\t\tcloneEl.parentNode.removeChild(cloneEl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_showClone: function(putSortable) {\r\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\r\n\t\t\t\tthis._hideClone();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (cloneEl.cloneHidden) {\r\n\t\t\t\t// show clone at dragEl or original position\r\n\t\t\t\tif (rootEl.contains(dragEl) && !this.options.group.revertClone) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\r\n\t\t\t\t} else if (nextEl) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trootEl.appendChild(cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.options.group.revertClone) {\r\n\t\t\t\t\tthis._animate(dragEl, cloneEl);\r\n\t\t\t\t}\r\n\t\t\t\tstyler.css(cloneEl, 'display', '');\r\n\t\t\t\tcloneEl.cloneHidden = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n    function _globalDragOver(/**Event*/evt) {\r\n\t\tif (evt.dataTransfer) {\r\n\t\t\tevt.dataTransfer.dropEffect = 'move';\r\n\t\t}\r\n\t\tevt.cancelable && evt.preventDefault();\r\n\t}\r\n\r\n\tfunction _dispatchEvent(\r\n\t\tsortable, rootEl, name,\r\n\t\ttargetEl, toEl, fromEl,\r\n\t\tstartIndex, newIndex,\r\n\t\tstartDraggableIndex, newDraggableIndex,\r\n\t\toriginalEvt\r\n\t) {\r\n\t\tsortable = (sortable || rootEl[expando]);\r\n\t\tvar evt,\r\n\t\t\toptions = sortable.options,\r\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\r\n\r\n\t\tevt = eventer.create(name,{\r\n\t\t\tto : toEl || rootEl,\r\n\t\t\tfrom : fromEl || rootEl,\r\n\t\t\titem : targetEl || rootEl,\r\n\t\t\tclone : cloneEl,\r\n\t\t\toldIndex : startIndex,\r\n\t\t\tnewIndex : newIndex,\r\n\t\t\toldDraggableIndex : startDraggableIndex,\r\n\t\t\tnewDraggableIndex : newDraggableIndex,\r\n\t\t\toriginalEvent : originalEvt,\r\n\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\r\n\t\t});\r\n\t\tif (rootEl) {\r\n\t\t\trootEl.dispatchEvent(evt);\r\n\t\t}\r\n\r\n\t\tif (options[onName]) {\r\n\t\t\toptions[onName].call(sortable, evt);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\r\n\t\tvar evt,\r\n\t\t\tsortable = fromEl[expando],\r\n\t\t\tonMoveFn = sortable.options.onMove,\r\n\t\t\tretVal;\r\n\r\n\t\tevt = eventer.create(\"move\",{\r\n\t\t\tto : toEl,\r\n\t\t\tfrom : fromEl,\r\n\t\t\tdragged : dragEl,\r\n\t\t\tdraggedRect: dragRect,\r\n\t\t\trelated : targetEl || toEl,\r\n\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\r\n\t\t\twillInsertAfter : willInsertAfter,\r\n\t\t\toriginalEvent : originalEvt\r\n\t\t});\r\n\r\n\t\tfromEl.dispatchEvent(evt);\r\n\r\n\t\tif (onMoveFn) {\r\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\r\n\t\t}\r\n\r\n\t\treturn retVal;\r\n\t}\r\n\r\n\tfunction _disableDraggable(el) {\r\n\t\tel.draggable = false;\r\n\t}\r\n\r\n\tfunction _unsilent() {\r\n\t\t_silent = false;\r\n\t}\r\n\r\n\r\n\t// Export utils\r\n\tSortable.utils = {\r\n\t\ton: eventer.on,\r\n\t\toff: eventer.off,\r\n\t\tcss: styler.css,\r\n\t\tfind: _find,\r\n\t\tis: function (el, selector) {\r\n\t\t\treturn !!finder.closest(el, selector, el, false);\r\n\t\t},\r\n\t\textend: langx.mixin,\r\n\t\tthrottle: autoscroll._throttle,\r\n\t\tclosest: finder.closest,\r\n\t\ttoggleClass: styler.toggleClass,\r\n\t\tclone: \tfunction (el) {\r\n\t\t\t\t\treturn noder.clone(el,true);\r\n\t\t\t\t},\r\n\t\tindex: _index,\r\n\t\tnextTick: _nextTick,\r\n\t\tcancelNextTick: _cancelNextTick,\r\n\t\tdetectDirection: _detectDirection,\r\n\t\tgetChild: function(el, childNum, options) {\r\n\t\t\toptions.excluding = [];\r\n\t\t\toptions.closesting = options.draggable;\r\n\t\t\treturn finder.childAt(el,childNum,options);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Create sortable instance\r\n\t * @param {HTMLElement}  el\r\n\t * @param {Object}      [options]\r\n\t */\r\n\tSortable.create = function (el, options) {\r\n\t\treturn new Sortable(el, options);\r\n\t};\r\n\r\n\r\n\t// Export\r\n\tSortable.version = '1.9.0';\r\n\r\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\r\n});\ndefine('skylark-sortable/main',[\r\n\t\"./Sortable\"\r\n],function(Sortable){\r\n\treturn Sortable;\r\n});\ndefine('skylark-sortable', ['skylark-sortable/main'], function (main) { return main; });\n\n"]}