{"version":3,"sources":["skylark-sortable.js"],"names":["define","hoster","detects","browser","window","document","ua","toLowerCase","match","exec","indexOf","platform_match","matched","version","versionNumber","platform","parseInt","android","bb","blackberry","ipad","iphone","ipod","kindle","playbook","silk","mobile","cros","mac","linux","win","desktop","chrome","opr","safari","webkit","rv","iemobile","edge","name","uaMatch","navigator","userAgent","detectBrowser","undefined","isBrowser","langx","geom","styler","scrollingElement","scrollEl","scrollCustomFn","pointerElemChangedInterval","autoScrolls","scrolling","scrollParentEl","IE11OrLess","ie","Edge","Safari","firefox","_throttleTimeout","_getParentAutoScrollElement","el","includeSelf","getBoundingClientRect","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","css","overflowX","overflowY","body","parentNode","_autoScroll","_throttle","evt","options","rootEl","isFallback","expando","scroll","_this","sens","scrollSensitivity","speed","scrollSpeed","x","clientX","y","clientY","winScroller","scrollThisInstance","_clearAutoScrolls","scrollFn","layersOut","currentParent","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","rect","boundingRect","top","bottom","left","right","width","height","scrollLeft","scrollTop","Math","abs","i","clearInterval","pid","setInterval","this","layer","Sortable","active","_emulateDragOver","_onTouchMove","touchEvt","scrollOffsetY","scrollOffsetX","call","scrollBy","bind","bubbleScroll","forEach","autoScroll","callback","ms","debounce","_isScrolledPast","side","parent","elSide","parentSide","_getRelativeScrollOffset","offsetLeft","offsetTop","matrix","transforms","scaleX","a","scaleY","d","_handleAutoScroll","fallback","elementFromPoint","ogElemScroller","lastPointerElemX","lastPointerElemY","dragEl","newElem","_cancelThrottle","stop","_nulling","finder","Orientation","elCSS","elWidth","contentRect","child1","childAt","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginSize","secondChildWidth","display","flexDirection","Vertical","Horizontal","gridTemplateColumns","split","length","float","touchingSideChild2","clear","skylark","isMobile","$","noder","eventer","oriented","touch","_getRect","adjustForTransform","container","adjustForFixed","ghoster","ghostEl","PositionGhostAbsolutely","apple","device","ghostRelativeParent","ghostRelativeParentInitialScroll","_ghostIsLast","axis","elRect","lastChild","ignoreHidden","excluding","mouseOnAxis","mouseOnOppAxis","targetS2","targetS1Opp","targetS2Opp","_lastChild","_appendGhost","ghostRelativeParentRect","documentElement","autoscroll","cloneNode","toggleClass","ghostClass","fallbackClass","dragClass","box-sizing","margin","opacity","position","zIndex","pointerEvents","appendChild","getRelativeScrollOffset","remove","Date","getTime","dnd","log","category","message","append","activeGroup","putSortable","sortables","cloneEl","ignoreNextClick","awaitingDragStarted","prepare","draggable","nativeDraggable","on","off","_onDrop","_onDragEnd","_loopId","start","event","elm","ownerDocument","nearestEmptyInsertDetectEvent","_checkAlignment","over","end","dropped","touches","nearest","_detectNearestEmptySortable","target","preventDefault","stopPropagation","_onDragOver","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_computeIsAligned","forAutoScroll","_lastX","_lastY","shadowRoot","_onMove","fromEl","toEl","dragRect","targetEl","targetRect","originalEvt","willInsertAfter","retVal","sortable","onMoveFn","onMove","create","to","from","dragged","draggedRect","related","relatedRect","originalEvent","dispatchEvent","_dispatchEvent","startIndex","newIndex","startDraggableIndex","newDraggableIndex","onName","charAt","toUpperCase","substr","item","clone","oldIndex","oldDraggableIndex","pullMode","lastPutMode","_disableDraggable","tapEvt","fallbackTolerance","fallbackOffset","relativeScrollOffset","dx","dy","translate3d","min","_onDragStart","parentEl","nextEl","_index","selector","index","nodeName","matches","_isElInRowColumn","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_isClientInRowColumn","plugins","containers","lastDownEl","savedInputChecked","Draggable","Plugin","inherit","klassName","pluginName","draggingClass","chosenClass","_construct","overrided","_elm","fn","touchStartThreshold","mousy","_onTapStart","preventOnFilter","type","originalTarget","path","composedPath","filter","root","inputs","getElementsByTagName","idx","checked","push","_saveInputCheckedState","test","button","disabled","isContentEditable","closest","tagName","className","cancelable","some","criteria","trim","handle","_prepareDragStart","dragStartFn","nextSibling","group","style","transition","transform","_triggerDragStart","ignore","ctx","iterator","list","n","_find","selection","defer","empty","getSelection","removeAllRanges","err","dataTransfer","_hideClone","_cloneId","removeCloneOnHide","insertBefore","effectAllowed","setData","_dragStartId","_dragStarted","fallbackOnBody","cloneHidden","hide","_showClone","contains","revertClone","_animate","show","clearTimeout","_dragStartTimer","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","pastFirstInvertThresh","isCircumstantialInvert","setTimeout","supportDraggable","Polymer","createElement","_silent","support","cssPointerEvents","_alignedSilent","_prepareGroup","toFn","value","pull","sameGroup","otherGroup","join","originalGroup","checkPull","checkPut","put","sort","store","swapThreshold","invertSwap","invertedSwapThreshold","direction","mixin","animation","easing","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","devicePixelRatio","forceFallback","get","children","sortableMouseAligned","_getDirection","prevRect","currentRect","nodeType","_repaint","animated","offsetWidth","_offUpEvents","revert","activeSortable","isOwner","canSort","completed","elLastChild","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","scrollBefore","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","_unsilent","insertion","dragElIndex","targetIndex","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","generateId","items","id","set","option","destroy","Array","prototype","querySelectorAll","removeAttribute","splice","attach","utils","is","extend","throttle","nextTick","cancelNextTick","getChild","childNum","closesting","main"],"mappings":"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","file":"../skylark-sortable.js","sourcesContent":["define('skylark-langx-hoster/detects/browser',[\r\n    \"../hoster\"\r\n],function(hoster){\r\n\t//refer : https://github.com/gabceb/jquery-browser-plugin\r\n\r\n\tfunction detectBrowser() {\r\n\r\n\t\tfunction uaMatch( ua ) {\r\n\t\t\tua = ua.toLowerCase();\r\n\r\n\t\t\tvar match = /(edge)\\/([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opr)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(iemobile)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"trident\") >= 0 && /(rv)(?::| )([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar platform_match = /(ipad)/.exec( ua ) ||\r\n\t\t\t    /(ipod)/.exec( ua ) ||\r\n\t\t\t    /(windows phone)/.exec( ua ) ||\r\n\t\t\t    /(iphone)/.exec( ua ) ||\r\n\t\t\t    /(kindle)/.exec( ua ) ||\r\n\t\t\t    /(silk)/.exec( ua ) ||\r\n\t\t\t    /(android)/.exec( ua ) ||\r\n\t\t\t    /(win)/.exec( ua ) ||\r\n\t\t\t    /(mac)/.exec( ua ) ||\r\n\t\t\t    /(linux)/.exec( ua ) ||\r\n\t\t\t    /(cros)/.exec( ua ) ||\r\n\t\t\t    /(playbook)/.exec( ua ) ||\r\n\t\t\t    /(bb)/.exec( ua ) ||\r\n\t\t\t    /(blackberry)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar browser = {},\r\n\t\t\t    matched = {\r\n\t\t\t      browser: match[ 5 ] || match[ 3 ] || match[ 1 ] || \"\",\r\n\t\t\t      version: match[ 2 ] || match[ 4 ] || \"0\",\r\n\t\t\t      versionNumber: match[ 4 ] || match[ 2 ] || \"0\",\r\n\t\t\t      platform: platform_match[ 0 ] || \"\"\r\n\t\t\t    };\r\n\r\n\t\t\tif ( matched.browser ) {\r\n\t\t\t\tbrowser[ matched.browser ] = true;\r\n\t\t\t  \tbrowser.version = matched.version;\r\n\t\t\t  \tbrowser.versionNumber = parseInt(matched.versionNumber, 10);\r\n\t\t\t}\r\n\r\n\t\t\tif ( matched.platform ) {\r\n\t\t\t \tbrowser[ matched.platform ] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered mobile platforms, meaning they run a mobile browser\r\n\t\t\tif ( browser.android || browser.bb || browser.blackberry || browser.ipad || browser.iphone ||\r\n\t\t\t\tbrowser.ipod || browser.kindle || browser.playbook || browser.silk || browser[ \"windows phone\" ]) {\r\n\t\t\t\tbrowser.mobile = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered desktop platforms, meaning they run a desktop browser\r\n\t\t\tif ( browser.cros || browser.mac || browser.linux || browser.win ) {\r\n\t\t\t\tbrowser.desktop = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Chrome, Opera 15+ and Safari are webkit based browsers\r\n\t\t\tif ( browser.chrome || browser.opr || browser.safari ) {\r\n\t\t\t\tbrowser.webkit = true;\r\n\t\t\t}\r\n\r\n\t\t\t// IE11 has a new token so we will assign it msie to avoid breaking changes\r\n\t\t\tif ( browser.rv || browser.iemobile) {\r\n\t\t\t  var ie = \"ie\";\r\n\r\n\t\t\t  matched.browser = ie;\r\n\t\t\t  browser[ie] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Edge is officially known as Microsoft Edge, so rewrite the key to match\r\n\t\t\tif ( browser.edge ) {\r\n\t\t\t  delete browser.edge;\r\n\t\t\t  var msedge = \"edge\";\r\n\r\n\t\t\t  matched.browser = msedge;\r\n\t\t\t  browser[msedge] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Blackberry browsers are marked as Safari on BlackBerry\r\n\t\t\tif ( browser.safari && browser.blackberry ) {\r\n\t\t\t  var blackberry = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = blackberry;\r\n\t\t\t  browser[blackberry] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Playbook browsers are marked as Safari on Playbook\r\n\t\t\tif ( browser.safari && browser.playbook ) {\r\n\t\t\t  var playbook = \"playbook\";\r\n\r\n\t\t\t  matched.browser = playbook;\r\n\t\t\t  browser[playbook] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// BB10 is a newer OS version of BlackBerry\r\n\t\t\tif ( browser.bb ) {\r\n\t\t\t  var bb = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = bb;\r\n\t\t\t  browser[bb] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 15+ are identified as opr\r\n\t\t\tif ( browser.opr ) {\r\n\t\t\t  var opera = \"opera\";\r\n\r\n\t\t\t  matched.browser = opera;\r\n\t\t\t  browser[opera] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Stock Android browsers are marked as Safari on Android.\r\n\t\t\tif ( browser.safari && browser.android ) {\r\n\t\t\t  var android = \"android\";\r\n\r\n\t\t\t  matched.browser = android;\r\n\t\t\t  browser[android] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Kindle browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.kindle ) {\r\n\t\t\t  var kindle = \"kindle\";\r\n\r\n\t\t\t  matched.browser = kindle;\r\n\t\t\t  browser[kindle] = true;\r\n\t\t\t}\r\n\r\n\t\t\t // Kindle Silk browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.silk ) {\r\n\t\t\t  var silk = \"silk\";\r\n\r\n\t\t\t  matched.browser = silk;\r\n\t\t\t  browser[silk] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Assign the name and platform variable\r\n\t\t\tbrowser.name = matched.browser;\r\n\t\t\tbrowser.platform = matched.platform;\r\n\t\t\treturn browser;\r\n\t\t}\r\n\r\n\r\n\t    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\n\r\n\t    if (isBrowser) {\r\n\t\t    return uaMatch( navigator.userAgent );\r\n\t    } else {\r\n\t    \treturn null;\r\n\t    }\r\n\t}\r\n\r\n\r\n\treturn hoster.detects.browser = detectBrowser;\r\n});\ndefine('skylark-langx-hoster/isBrowser',[\r\n    \"./hoster\",\r\n    \"./detects/browser\"\r\n],function(hoster,detectBrowser){\r\n\tif (hoster.isBrowser == undefined) {\r\n\t\thoster.isBrowser = detectBrowser();\r\n\t}\r\n\r\n    return hoster.isBrowser;\r\n});\r\n\ndefine('skylark-sortable/autoscroll',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-scrolls/scrollingElement\"\r\n],function(\r\n\tlangx,\r\n\tisBrowser,\r\n\tgeom,\r\n\tstyler,\r\n\tscrollingElement\r\n){\r\n    'use strict';\r\n\r\n\tvar autoScrolls = [],\r\n\t\tscrolling = false,\r\n\t\tscrollEl,\r\n\t\tscrollCustomFn,\r\n\t\tpointerElemChangedInterval,\r\n\r\n\t\tscrollParentEl = null;\r\n\r\n\tvar\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari;\r\n\r\n\r\n\t/**\r\n\t * Checks if a side of an element is scrolled past a side of it's parents\r\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\r\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\r\n\t * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n\t */\r\n\tfunction _isScrolledPast(el, side) {\r\n\t\tvar parent = _getParentAutoScrollElement(el, true),\r\n\t\t\telSide = geom.boundingRect(el)[side];\r\n\r\n\t\t/* jshint boss:true */\r\n\t\twhile (parent) {\r\n\t\t\tvar parentSide = geom.boundingRect(parent)[side],\r\n\t\t\t\tvisible;\r\n\r\n\t\t\tif (side === 'top' || side === 'left') {\r\n\t\t\t\tvisible = elSide >= parentSide;\r\n\t\t\t} else {\r\n\t\t\t\tvisible = elSide <= parentSide;\r\n\t\t\t}\r\n\r\n\t\t\tif (!visible) return parent;\r\n\r\n\t\t\tif (parent === scrollingElement()) break;\r\n\r\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n\t * The value is returned in real pixels.\r\n\t * @param  {HTMLElement} el\r\n\t * @return {Array}             Offsets in the format of [left, top]\r\n\t */\r\n\tfunction _getRelativeScrollOffset(el) {\r\n\t\tvar offsetLeft = 0,\r\n\t\t\toffsetTop = 0,\r\n\t\t\twinScroller = scrollingElement();\r\n\r\n\t\tif (el) {\r\n\t\t\tdo {\r\n\t\t\t\tvar matrix = transforms.matrix(el),\r\n\t\t\t\t\tscaleX = matrix.a,\r\n\t\t\t\t\tscaleY = matrix.d;\r\n\r\n\t\t\t\toffsetLeft += el.scrollLeft * scaleX;\r\n\t\t\t\toffsetTop += el.scrollTop * scaleY;\r\n\t\t\t} while (el !== winScroller && (el = el.parentNode));\r\n\t\t}\r\n\r\n\t\treturn [offsetLeft, offsetTop];\r\n\t}\r\n\r\n\tvar _getParentAutoScrollElement = function(el, includeSelf) {\r\n\t\t// skip to window\r\n\t\tif (!el || !el.getBoundingClientRect) return scrollingElement();\r\n\r\n\t\tvar elem = el;\r\n\t\tvar gotSelf = false;\r\n\t\tdo {\r\n\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\r\n\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\r\n\t\t\t\tvar elemCSS = styler.css(elem);\r\n\t\t\t\tif (\r\n\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\r\n\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return scrollingElement();\r\n\r\n\t\t\t\t\tif (gotSelf || includeSelf) return elem;\r\n\t\t\t\t\tgotSelf = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t/* jshint boss:true */\r\n\t\t} while (elem = elem.parentNode);\r\n\r\n\t\treturn scrollingElement();\r\n\t},\r\n\r\n\r\n\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback,expando) {\r\n\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\r\n\t\tif (options.scroll) {\r\n\t\t\tvar _this = rootEl ? rootEl[expando] : window,\r\n\t\t\t\tsens = options.scrollSensitivity,\r\n\t\t\t\tspeed = options.scrollSpeed,\r\n\r\n\t\t\t\tx = evt.clientX,\r\n\t\t\t\ty = evt.clientY,\r\n\r\n\t\t\t\twinScroller = scrollingElement(),\r\n\r\n\t\t\t\tscrollThisInstance = false;\r\n\r\n\t\t\t// Detect scrollEl\r\n\t\t\tif (scrollParentEl !== rootEl) {\r\n\t\t\t\t_clearAutoScrolls();\r\n\r\n\t\t\t\tscrollEl = options.scroll;\r\n\t\t\t\tscrollCustomFn = options.scrollFn;\r\n\r\n\t\t\t\tif (scrollEl === true) {\r\n\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\r\n\t\t\t\t\tscrollParentEl = scrollEl;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar layersOut = 0;\r\n\t\t\tvar currentParent = scrollEl;\r\n\t\t\tdo {\r\n\t\t\t\tvar\tel = currentParent,\r\n\t\t\t\t\trect = geom.boundingRect(el),\r\n\r\n\t\t\t\t\ttop = rect.top,\r\n\t\t\t\t\tbottom = rect.bottom,\r\n\t\t\t\t\tleft = rect.left,\r\n\t\t\t\t\tright = rect.right,\r\n\r\n\t\t\t\t\twidth = rect.width,\r\n\t\t\t\t\theight = rect.height,\r\n\r\n\t\t\t\t\tscrollWidth,\r\n\t\t\t\t\tscrollHeight,\r\n\r\n\t\t\t\t\tcss,\r\n\r\n\t\t\t\t\tvx,\r\n\t\t\t\t\tvy,\r\n\r\n\t\t\t\t\tcanScrollX,\r\n\t\t\t\t\tcanScrollY,\r\n\r\n\t\t\t\t\tscrollPosX,\r\n\t\t\t\t\tscrollPosY;\r\n\r\n\r\n\t\t\t\tscrollWidth = el.scrollWidth;\r\n\t\t\t\tscrollHeight = el.scrollHeight;\r\n\r\n\t\t\t\tcss = styler.css(el);\r\n\r\n\t\t\t\tscrollPosX = el.scrollLeft;\r\n\t\t\t\tscrollPosY = el.scrollTop;\r\n\r\n\t\t\t\tif (el === winScroller) {\r\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\r\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\r\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvx = canScrollX && (Math.abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\r\n\r\n\t\t\t\tvy = canScrollY && (Math.abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\r\n\r\n\r\n\t\t\t\tif (!autoScrolls[layersOut]) {\r\n\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\r\n\t\t\t\t\t\tif (!autoScrolls[i]) {\r\n\t\t\t\t\t\t\tautoScrolls[i] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\r\n\t\t\t\t\tautoScrolls[layersOut].el = el;\r\n\t\t\t\t\tautoScrolls[layersOut].vx = vx;\r\n\t\t\t\t\tautoScrolls[layersOut].vy = vy;\r\n\r\n\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\r\n\r\n\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\r\n\t\t\t\t\t\tscrollThisInstance = true;\r\n\t\t\t\t\t\t/* jshint loopfunc:true */\r\n\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\r\n\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\r\n\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\r\n\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\r\n\t\t\t\t\t\t\t\tSortable.active._onTouchMove(touchEvt, true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\r\n\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\r\n\r\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\r\n\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeom.scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\r\n\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlayersOut++;\r\n\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = _getParentAutoScrollElement(currentParent, false)));\r\n\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\r\n\t\t}\r\n\t}, 30),\r\n\r\n\t_clearAutoScrolls = function () {\r\n\t\tautoScrolls.forEach(function(autoScroll) {\r\n\t\t\tclearInterval(autoScroll.pid);\r\n\t\t});\r\n\t\tautoScrolls = [];\r\n\t},\r\n\r\n\t_handleAutoScroll = function(evt, options,fallback) {\r\n\t\tvar x = evt.clientX,\r\n\t\t\ty = evt.clientY,\r\n\r\n\t\t\telem = document.elementFromPoint(x, y);\r\n\r\n\t\t// IE does not seem to have native autoscroll,\r\n\t\t// Edge's autoscroll seems too conditional,\r\n\t\t// MACOS Safari does not have autoscroll,\r\n\t\t// Firefox and Chrome are good\r\n\t\tif (fallback || Edge || IE11OrLess || Safari) {\r\n\t\t\t_throttleTimeout = _autoScroll(evt, options, elem, fallback);\r\n\r\n\t\t\t// Listener for pointer element change\r\n\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\r\n\t\t\tif (\r\n\t\t\t\tscrolling &&\r\n\t\t\t\t(\r\n\t\t\t\t\t!pointerElemChangedInterval ||\r\n\t\t\t\t\tx !== lastPointerElemX ||\r\n\t\t\t\t\ty !== lastPointerElemY\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\r\n\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\r\n\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\r\n\t\t\t\tpointerElemChangedInterval = setInterval(function() {\r\n\t\t\t\t\tif (!dragEl) return;\r\n\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\r\n\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\r\n\t\t\t\t\tif (newElem !== ogElemScroller) {\r\n\t\t\t\t\t\togElemScroller = newElem;\r\n\t\t\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\t\t\t_throttleTimeout = _autoScroll(evt, options, ogElemScroller, fallback);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 10);\r\n\t\t\t\tlastPointerElemX = x;\r\n\t\t\t\tlastPointerElemY = y;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\r\n\t\t\tif (!options.bubbleScroll || _getParentAutoScrollElement(elem, true) === scrollingElement()) {\r\n\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t_throttleTimeout = _autoScroll(evt, options, _getParentAutoScrollElement(elem, false), false);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tvar _throttleTimeout;\r\n\tfunction _throttle(callback, ms) {\r\n\t\treturn langx.debounce(callback,ms);\r\n\t}\r\n\r\n\tfunction _cancelThrottle() {\r\n\t\t//clearTimeout(_throttleTimeout);\r\n\t\t//_throttleTimeout = void 0;\r\n\t\tif (_throttleTimeout && _throttleTimeout.stop) {\r\n\t\t\t_throttleTimeout.stop();\r\n\t\t\t_throttleTimeout = void 0;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\tfunction _nulling() {\r\n\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\r\n\t\tpointerElemChangedInterval = null;\r\n\r\n\t}\r\n\treturn {\r\n\t\tautoScrolls,\r\n\t\t\r\n\t\t_isScrolledPast,\r\n\t\t_getRelativeScrollOffset,\r\n\t\t_autoScroll,\r\n\r\n\t\t_clearAutoScrolls,\r\n\t\t_handleAutoScroll,\r\n\r\n\t\t_throttle,\r\n\t\t_cancelThrottle,\r\n\t\t_nulling\r\n\t}\r\n});\ndefine('skylark-domx-layouts/oriented',[\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-finder\",\r\n\t\"./Orientation\"\r\n],function(\r\n\tgeom,\r\n\tstyler,\r\n\tfinder,\r\n\tOrientation\r\n){\r\n\r\n\t/**\r\n\t * Detects children orientation.\r\n\t */\r\n\tfunction oriented(el, options) {\r\n\t\tvar elCSS = styler.css(el),\r\n\r\n\t\t\telWidth = geom.contentRect(el).width,\r\n\r\n\t\t\tchild1 = finder.childAt(el, 0, options),\r\n\t\t\tchild2 = finder.childAt(el, 1, options),\r\n\t\t\tfirstChildCSS = child1 && styler.css(child1),\r\n\t\t\tsecondChildCSS = child2 && styler.css(child2),\r\n\r\n\t\t\tfirstChildWidth = child1 && geom.marginSize(child1).width,\r\n\t\t\tsecondChildWidth = child2 && geom.marginSize(child2).width;\r\n\r\n\t\tif (elCSS.display === 'flex') {\r\n\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\r\n\t\t\t? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (elCSS.display === 'grid') {\r\n\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (child1 && firstChildCSS.float !== 'none') {\r\n\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\r\n\r\n\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\r\n\t\t\t\tOrientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\treturn (child1 &&\r\n\t\t\t(\r\n\t\t\t\tfirstChildCSS.display === 'block' ||\r\n\t\t\t\tfirstChildCSS.display === 'flex' ||\r\n\t\t\t\tfirstChildCSS.display === 'table' ||\r\n\t\t\t\tfirstChildCSS.display === 'grid' ||\r\n\t\t\t\tfirstChildWidth >= elWidth &&\r\n\t\t\t\telCSS.float === 'none' ||\r\n\t\t\t\tchild2 &&\r\n\t\t\t\telCSS.float === 'none' &&\r\n\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\r\n\t\t\t) ?\r\n\t\t\tOrientation.Vertical : Orientation.Horizontal\r\n\t\t);\r\n\t}\r\n\r\n\treturn oriented;\r\n});\ndefine('skylark-sortable/ghoster',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch\r\n){\r\n    'use strict';\r\n\r\n\t/**\r\n\t * Returns the \"bounding client rect\" of given element\r\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\r\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\r\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\r\n\t * @return {Object}                        The boundingClientRect of el\r\n\t */\r\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\r\n\t\tif (!el.getBoundingClientRect && el !== window) return;\r\n\t\tvar {\r\n\t\t\ttop,\r\n\t\t\tleft,\r\n\t\t\tbottom,\r\n\t\t\tright,\r\n\t\t\twidth,\r\n\t\t\theight\r\n\t\t} = geom.boundingRect(el);\r\n\t\t\r\n\t\tif (adjustForTransform && el !== window) {\r\n\t\t\t// Adjust for scale()\r\n\t\t\tvar matrix = transforms.matrix(container || el),\r\n\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\tif (matrix) {\r\n\t\t\t\ttop /= scaleY;\r\n\t\t\t\tleft /= scaleX;\r\n\r\n\t\t\t\twidth /= scaleX;\r\n\t\t\t\theight /= scaleY;\r\n\r\n\t\t\t\tbottom = top + height;\r\n\t\t\t\tright = left + width;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: top,\r\n\t\t\tleft: left,\r\n\t\t\tbottom: bottom,\r\n\t\t\tright: right,\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tvar ghoster = {\r\n\t\tghostEl : null,\r\n\r\n\t\tPositionGhostAbsolutely : isMobile.apple.device, //IOS\r\n\t\t// For positioning ghost absolutely\r\n\t\tghostRelativeParent : null,\r\n\t\tghostRelativeParentInitialScroll : [], // (left, top)\r\n\r\n\t\t_ghostIsLast : function (evt, axis, el) {\r\n\t\t\tvar elRect = geom.boundingRect(finder.lastChild(el,{ignoreHidden : true,excluding : [this.ghostEl]})),\r\n\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\r\n\t\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\r\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\r\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\r\n\t\t\t\tspacer = 10;\r\n\r\n\t\t\treturn (\r\n\t\t\t\taxis === 'vertical' ?\r\n\t\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\r\n\t\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\r\n\t\t\t);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n\t\t * @param  {HTMLElement} el       Parent element\r\n\t\t * @return {HTMLElement}          The last child, ignoring ghostEl\r\n\t\t */\r\n\t\t_lastChild : function (el) {\r\n\t\t\t/*\r\n\t\t\tvar last = el.lastElementChild;\r\n\r\n\t\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\r\n\t\t\t\tlast = last.previousElementSibling;\r\n\t\t\t}\r\n\r\n\t\t\treturn last || null;\r\n\t\t\t*/\r\n\t\t\treturn finder.lastChild(el,{\r\n\t\t\t\tignoreHidden : true,\r\n\t\t\t\texcluding : [this.ghostEl]\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t_appendGhost: function (dragEl,container,options) {\r\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\r\n\t\t\t// Not being adjusted for\r\n\t\t\tvar /// dragEl = dnd.dragEl,\r\n\t\t\t\tghostEl = this.ghostEl;\r\n\r\n\t\t\tif (!ghostEl) {\r\n\t\t\t\tvar ///container = this.options.fallbackOnBody ? document.body : rootEl,\r\n\t\t\t\t\trect = _getRect(dragEl, true, container, !this.PositionGhostAbsolutely),\r\n\t\t\t\t\tcss = styler.css(dragEl);\r\n\t\t\t\t\t///options = this.options;\r\n\r\n\t\t\t\t// Position absolutely\r\n\t\t\t\tif (this.PositionGhostAbsolutely) {\r\n\t\t\t\t\t// Get relatively positioned parent\r\n\t\t\t\t\tvar ghostRelativeParent = this.ghostRelativeParent = container;\r\n\r\n\t\t\t\t\twhile (\r\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'position') === 'static' &&\r\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'transform') === 'none' &&\r\n\t\t\t\t\t\tghostRelativeParent !== document\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ghostRelativeParent !== document) {\r\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\r\n\r\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\r\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\r\n\t\t\t\t\t\tif (ghostRelativeParent === document) {\r\n\t\t\t\t\t\t\tghostRelativeParent = this.ghostRelativeParent = scrollingElement();\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\r\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tghostRelativeParent = this.ghostRelativeParent = scrollingElement();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tghostRelativeParentInitialScroll = autoscroll._getRelativeScrollOffset(ghostRelativeParent);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tghostEl =this.ghostEl = dragEl.cloneNode(true);\r\n\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.ghostClass, false);\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.fallbackClass, true);\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.dragClass, true);\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tstyler.css(ghostEl, 'box-sizing', 'border-box');\r\n\t\t\t\tstyler.css(ghostEl, 'margin', 0);\r\n\t\t\t\tstyler.css(ghostEl, 'top', rect.top);\r\n\t\t\t\tstyler.css(ghostEl, 'left', rect.left);\r\n\t\t\t\tstyler.css(ghostEl, 'width', rect.width);\r\n\t\t\t\tstyler.css(ghostEl, 'height', rect.height);\r\n\t\t\t\tstyler.css(ghostEl, 'opacity', '0.8');\r\n\t\t\t\tstyler.css(ghostEl, 'position', (this.PositionGhostAbsolutely ? 'absolute' : 'fixed'));\r\n\t\t\t\tstyler.css(ghostEl, 'zIndex', '100000');\r\n\t\t\t\tstyler.css(ghostEl, 'pointerEvents', 'none');\r\n\t\t\t\t*/\r\n\r\n\t\t\t\tstyler.css(ghostEl, {\r\n\t\t\t\t\t'box-sizing': 'border-box',\r\n\t\t\t\t\t'margin': 0,\r\n\t\t\t\t\t'top': rect.top,\r\n\t\t\t\t\t'left': rect.left,\r\n\t\t\t\t\t'width': rect.width,\r\n\t\t\t\t\t'height': rect.height,\r\n\t\t\t\t\t'opacity': '0.8',\r\n\t\t\t\t\t'position': (this.PositionGhostAbsolutely ? 'absolute' : 'fixed'),\r\n\t\t\t\t\t'zIndex': '100000',\r\n\t\t\t\t\t'pointerEvents': 'none'\t\r\n\t\t\t\t});\r\n\t\t\t\tcontainer.appendChild(ghostEl);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetRelativeScrollOffset : function(){\r\n\t\t\treturn this.PositionGhostAbsolutely && this.ghostRelativeParent && autoscroll._getRelativeScrollOffset(this.ghostRelativeParent);\r\n\t\t},\r\n\r\n\t\tremove : function() {\r\n\t\t\tif (this.ghostEl) {\r\n\t\t\t\tnoder.remove(this.ghostEl);\r\n\t\t\t} \r\n\t\t\tthis.ghostEl = null;\r\n\r\n\t\t}\r\n\r\n\r\n\t};\r\n\r\n\treturn ghoster;\r\n\t\r\n});\ndefine('skylark-sortable/dnd',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./ghoster\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll,\r\n\tghoster\r\n){\r\n    'use strict';\r\n\r\n\r\n\tvar expando = 'Sortable' + (new Date).getTime();\r\n\r\n\r\n\tvar dnd = {\r\n\t\tlog : function log(category,message) {\r\n\t\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\r\n\t\t},\r\n\r\n\t\texpando,\r\n\r\n\t\tactiveGroup : null,\r\n\t\tactive : null,\r\n\t\tputSortable : null,\r\n\t\tsortables : [],\r\n\r\n\r\n\t\tdragEl : null,\r\n\t\tcloneEl : null,\r\n\r\n\t\tignoreNextClick : false,\r\n        awaitingDragStarted : false,\r\n\r\n\r\n\t\ttouchEvt : null,\r\n\r\n        prepare: function(draggable) {\r\n        \tthis.draggable = draggable;\r\n            if (!draggable.nativeDraggable) {\r\n                eventer.on(document, 'mousemove', this._onTouchMove);\r\n                eventer.on(document, 'mouseup',function(evt){\r\n                \teventer.off(document,'mousemove', this._onTouchMove);\r\n                \tif (dnd.putSortable) {\r\n                \t\tdnd.putSortable._onDrop(evt)\r\n                \t}\r\n                \tif (dnd.draggable) {\r\n                \t\tdnd.draggable._onDragEnd(evt);\r\n                \t}\r\n                \tghoster.remove();\r\n                \tif (dnd._loopId) {\r\n                \t\tclearInterval(dnd._loopId);\r\n                \t}\r\n                \tdnd._loopId = null\r\n                })\r\n            }\r\n\r\n\t\t},\r\n\r\n        start: function(draggable, event) {\r\n        \tthis.draggable = draggable;\r\n\r\n\r\n\t\t\tvar el = draggable.elm(),\r\n\t\t\t\townerDocument = el.ownerDocument;\r\n\r\n\r\n\t\t\teventer.on(ownerDocument, 'dragover', this.nearestEmptyInsertDetectEvent);\r\n\t\t\teventer.on(ownerDocument, 'mousemove', this.nearestEmptyInsertDetectEvent);\r\n\t\t\t///eventer.on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\r\n\r\n\t\t\tif (this.draggable.nativeDraggable) {\r\n                eventer.on(document, 'dragover', this._handleAutoScroll);\r\n                eventer.on(document, 'dragover', this._checkAlignment);\r\n            } else {\r\n                eventer.on(document, 'mousemove', this._onTouchMove);\r\n            }\r\n        },\r\n\r\n        over : function(evt) {\r\n\t\t\tthis._handleAutoScroll(evt);\r\n        },\r\n\r\n        end: function(dropped) {\r\n\t  \t\teventer.off(document, 'dragover', this.nearestEmptyInsertDetectEvent);\r\n\t  \t\teventer.off(document, 'mousemove', this.nearestEmptyInsertDetectEvent);\r\n\t\r\n\t\t\tif (this.draggable.nativeDraggable) {\r\n\t\t\t\teventer.off(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\teventer.off(document, 'dragover', this._checkAlignment);\r\n\t\t\t} else {\r\n\t\t        // Unbind events\r\n\t            eventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\t\t\t}\r\n\r\n        \tthis.draggable = null;\r\n\r\n        \tthis._nulling();\r\n \t\t},\r\n\r\n\t\tnearestEmptyInsertDetectEvent :function (evt) {\r\n\t\t\tif (dnd.dragEl) {\r\n\t\t\t\tevt = evt.touches ? evt.touches[0] : evt;\r\n\t\t\t\tvar nearest = dnd._detectNearestEmptySortable(evt.clientX, evt.clientY);\r\n\r\n\t\t\t\tif (nearest) {\r\n\t\t\t\t\t// Create imitation event\r\n\t\t\t\t\tvar event = {};\r\n\t\t\t\t\tfor (var i in evt) {\r\n\t\t\t\t\t\tevent[i] = evt[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.target = event.rootEl = nearest;\r\n\t\t\t\t\tevent.preventDefault = void 0;\r\n\t\t\t\t\tevent.stopPropagation = void 0;\r\n\t\t\t\t\tnearest[expando]._onDragOver(event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\t/**\r\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n\t\t * @param  {Number} x      X position\r\n\t\t * @param  {Number} y      Y position\r\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\r\n\t\t */\r\n\t\t_detectNearestEmptySortable : function(x, y) {\r\n\t\t\tvar sortables = this.sortables;\r\n\r\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\r\n\t\t\t\tif (finder.lastChild(sortables[i],{ignoreHidden : true,excluding : [this.ghostEl]})) continue;\r\n\r\n\t\t\t\tvar rect = geom.boundingRect(sortables[i]),\r\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\r\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\r\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\r\n\r\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\r\n\t\t\t\t\treturn sortables[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_checkAlignment : function(evt) {\r\n\t\t\tif (!this.dragEl || !this.dragEl.parentNode) return;\r\n\t\t\tthis.dragEl.parentNode[expando] && this.dragEl.parentNode[expando]._computeIsAligned(evt);\r\n\t\t},\r\n\r\n\t\t_emulateDragOver: function (forAutoScroll) {\r\n\t\t\tvar dragEl = this.dragEl,\r\n\t\t\t\ttouchEvt = this.touchEvt;\r\n\r\n\t\t\tif (touchEvt) {\r\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._lastX = touchEvt.clientX;\r\n\t\t\t\tthis._lastY = touchEvt.clientY;\r\n\r\n\t\t\t\t//_hideGhostForTarget();\r\n\r\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n\t\t\t\tvar parent = target;\r\n\r\n\t\t\t\twhile (target && target.shadowRoot) {\r\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n\t\t\t\t\tif (target === parent) break;\r\n\t\t\t\t\tparent = target;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tif (parent[expando]) {\r\n\t\t\t\t\t\t\tvar inserted;\r\n\r\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\r\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\r\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\r\n\t\t\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\t\t\trootEl: parent\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t//if (inserted && !this.options.dragoverBubble) {\r\n\t\t\t\t\t\t\tif (inserted) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttarget = parent; // store last element\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* jshint boss:true */\r\n\t\t\t\t\twhile (parent = parent.parentNode);\r\n\t\t\t\t}\r\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\r\n\r\n\t\t\t\t//_unhideGhostForTarget();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onMove : function (fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\r\n\t\t\tvar evt,\r\n\t\t\t\tsortable = fromEl[expando],\r\n\t\t\t\tonMoveFn = sortable.options.onMove,\r\n\t\t\t\tretVal;\r\n\r\n\t\t\tevt = eventer.create(\"move\",{\r\n\t\t\t\tto : toEl,\r\n\t\t\t\tfrom : fromEl,\r\n\t\t\t\tdragged : dragEl,\r\n\t\t\t\tdraggedRect: dragRect,\r\n\t\t\t\trelated : targetEl || toEl,\r\n\t\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\r\n\t\t\t\twillInsertAfter : willInsertAfter,\r\n\t\t\t\toriginalEvent : originalEvt\r\n\t\t\t});\r\n\r\n\t\t\tfromEl.dispatchEvent(evt);\r\n\r\n\t\t\tif (onMoveFn) {\r\n\t\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\r\n\t\t\t}\r\n\r\n\t\t\treturn retVal;\r\n\t\t},\r\n\r\n\t\t_dispatchEvent : function (\r\n\t\t\tsortable, rootEl, name,\r\n\t\t\ttargetEl, toEl, fromEl,\r\n\t\t\tstartIndex, newIndex,\r\n\t\t\tstartDraggableIndex, newDraggableIndex,\r\n\t\t\toriginalEvt\r\n\t\t) {\r\n\t\t\tsortable = (sortable || rootEl[expando]);\r\n\t\t\tvar evt,\r\n\t\t\t\toptions = sortable.options,\r\n\t\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1),\r\n\t\t\t\tputSortable = this.putSortable;\r\n\r\n\t\t\tevt = eventer.create(name,{\r\n\t\t\t\tto : toEl || rootEl,\r\n\t\t\t\tfrom : fromEl || rootEl,\r\n\t\t\t\titem : targetEl || rootEl,\r\n\t\t\t\tclone : this.cloneEl,\r\n\t\t\t\toldIndex : startIndex,\r\n\t\t\t\tnewIndex : newIndex,\r\n\t\t\t\toldDraggableIndex : startDraggableIndex,\r\n\t\t\t\tnewDraggableIndex : newDraggableIndex,\r\n\t\t\t\toriginalEvent : originalEvt,\r\n\t\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\r\n\t\t\t});\r\n\t\t\tif (rootEl) {\r\n\t\t\t\trootEl.dispatchEvent(evt);\r\n\t\t\t}\r\n\r\n\t\t\tif (options[onName]) {\r\n\t\t\t\toptions[onName].call(sortable, evt);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_disableDraggable : function (el) {\r\n\t\t\tel.draggable = false;\r\n\t\t},\r\n\r\n\t\t_handleAutoScroll: function(evt, fallback) {\r\n\r\n\t\t\tif (!dnd.dragEl || !dnd.draggable.options.scroll) return;\r\n\r\n\t\t\treturn autoscroll._handleAutoScroll(evt,dnd.draggable.options,fallback);\r\n\t\t},\r\n\r\n        _onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\r\n            //dnd.log(\"_onTouchMove\",\"start\");\r\n            var ghostEl = ghoster.ghostEl,\r\n            \tdraggable = dnd.draggable,\r\n            \ttapEvt = dnd.tapEvt;\r\n            if (tapEvt) {\r\n                var options =  draggable.options,\r\n                    fallbackTolerance = options.fallbackTolerance,\r\n                    fallbackOffset = options.fallbackOffset,\r\n                    touch = evt.touches ? evt.touches[0] : evt,\r\n                    matrix = ghostEl && transforms.matrix(ghostEl),\r\n                    scaleX = ghostEl && matrix && matrix.a,\r\n                    scaleY = ghostEl && matrix && matrix.d,\r\n                    relativeScrollOffset = ghoster.getRelativeScrollOffset(),\r\n                    dx = ((touch.clientX - tapEvt.clientX)\r\n                            + fallbackOffset.x) / (scaleX || 1)\r\n                            + (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\r\n                    dy = ((touch.clientY - tapEvt.clientY)\r\n                            + fallbackOffset.y) / (scaleY || 1)\r\n                            + (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\r\n                    translate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\r\n\r\n                // only set the status to dragging, when we are actually dragging\r\n                if (!dnd.active && !dnd.awaitingDragStarted) {\r\n                    if (fallbackTolerance &&\r\n                        Math.min( Math.abs(touch.clientX - draggable._lastX),  Math.abs(touch.clientY - draggable._lastY)) < fallbackTolerance\r\n                    ) {\r\n                        return;\r\n                    }\r\n                    draggable._onDragStart(evt, true);\r\n                \tdnd.ignoreNextClick = true;\r\n                \tdnd._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\r\n\r\n                }\r\n\r\n                !forAutoScroll && dnd._handleAutoScroll(touch, true);\r\n\r\n                ///moved = true;\r\n                dnd.touchEvt = touch;\r\n\r\n                if (ghostEl) {\r\n                    //styler.css(ghostEl, 'webkitTransform', translate3d);\r\n                    //styler.css(ghostEl, 'mozTransform', translate3d);\r\n                    //styler.css(ghostEl, 'msTransform', translate3d);\r\n                    styler.css(ghostEl, 'transform', translate3d);\r\n\r\n                }\r\n\r\n                //evt.cancelable && evt.preventDefault();\r\n                evt.preventDefault()\r\n            }\r\n        },\r\n\r\n\t\t_nulling: function() {\r\n\r\n\t\t\tdnd.rootEl =\r\n\t\t\tdnd.dragEl =\r\n\t\t\tdnd.parentEl =\r\n\t\t\t//ghoster.ghostEl =\r\n\t\t\tdnd.nextEl =\r\n\t\t\tdnd.cloneEl =\r\n\t\t\t///lastDownEl =\r\n\r\n\t\t\tautoscroll.scrollEl =\r\n\t\t\tautoscroll.scrollParentEl =\r\n\t\t\tautoscroll.autoScrolls.length =\r\n\r\n\r\n\t\t\tdnd.tapEvt =\r\n\t\t\tdnd.touchEvt =\r\n\r\n\t\t\tdnd.oldIndex =\r\n\r\n\t\t\tdnd.putSortable =\r\n\t\t\tdnd.activeGroup =\r\n\t\t\tdnd.active = null;\r\n\r\n\t\t},\r\n\r\n\r\n\t};\r\n\r\n\r\n\treturn dnd;\r\n\t\r\n});\ndefine('skylark-sortable/containers',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./dnd\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll,\r\n\tdnd\r\n){\r\n    'use strict';\r\n\r\n\tvar\r\n\t\t/**\r\n\t\t * Returns the index of an element within its parent for a selected set of\r\n\t\t * elements\r\n\t\t * @param  {HTMLElement} el\r\n\t\t * @param  {selector} selector\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\t_index = function (el, selector) {\r\n\t\t\treturn finder.index(el,function(el){\r\n\t\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\r\n\t\t\tvar targetRect = geom.boundingRect(el),\r\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\r\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\r\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\r\n\r\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\r\n\t\t},\r\n\r\n\t\t_isElInRowColumn = function(el1, el2, axis) {\r\n\t\t\tvar dragEl = dnd.dragEl;\r\n\r\n\t\t\tvar el1Rect = geom.boundingRect(el1),//el1 === dragEl && realDragElRect || geom.boundingRect(el1),\r\n\t\t\t\tel2Rect = geom.boundingRect(el2),//el2 === dragEl && realDragElRect || geom.boundingRect(el2),\r\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\r\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\r\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\r\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\r\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\r\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\r\n\r\n\t\t\treturn (\r\n\t\t\t\tel1S1Opp === el2S1Opp ||\r\n\t\t\t\tel1S2Opp === el2S2Opp ||\r\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\treturn {\r\n\t\t_index,\r\n\t\t_isElInRowColumn,\r\n\t\t_isClientInRowColumn\r\n\t}\r\n\t\r\n});\ndefine('skylark-sortable/Draggable',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-langx-hoster/isBrowser\",\r\n    \"skylark-langx-hoster/isMobile\",\r\n    \"skylark-domx-query\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-transforms\",\r\n    \"skylark-domx-scrolls/scrollingElement\",\r\n    \"skylark-domx-layouts/oriented\",\r\n    \"skylark-domx-plugins\",\r\n    \"skylark-devices-points/touch\",\r\n    \"./autoscroll\",\r\n    \"./containers\",\r\n    \"./dnd\",\r\n    \"./ghoster\"\r\n],function(\r\n    skylark,\r\n    langx,\r\n    isBrowser,\r\n    isMobile,\r\n    $,\r\n    browser,\r\n    noder,\r\n    finder,\r\n    geom,\r\n    styler,\r\n    eventer,\r\n    transforms,\r\n    scrollingElement,\r\n    oriented,\r\n    plugins,\r\n    touch,\r\n    autoscroll,\r\n    containers,\r\n    dnd,\r\n    ghoster\r\n){\r\n\r\n    'use strict';\r\n\r\n    var \r\n        lastDownEl,\r\n        scrolling,\r\n\r\n        savedInputChecked = [];\r\n\r\n\r\n    function _find(ctx, tagName, iterator) {\r\n        if (ctx) {\r\n            var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\r\n\r\n            if (iterator) {\r\n                for (; i < n; i++) {\r\n                    iterator(list[i], i);\r\n                }\r\n            }\r\n\r\n            return list;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n\r\n    function _saveInputCheckedState(root) {\r\n        savedInputChecked.length = 0;\r\n\r\n        var inputs = root.getElementsByTagName('input');\r\n        var idx = inputs.length;\r\n\r\n        while (idx--) {\r\n            var el = inputs[idx];\r\n            el.checked && savedInputChecked.push(el);\r\n        }\r\n    }\r\n\r\n\r\n    var Draggable = plugins.Plugin.inherit({\r\n        klassName: \"Draggable\",\r\n        \r\n        pluginName : \"intg.sortable.draggable\",\r\n\r\n        options : {\r\n            draggingClass : \"dragging\",\r\n            chosenClass : null\r\n\r\n        },\r\n\r\n        _construct: function(elm, options) {\r\n            this.overrided(elm,options);\r\n            var el = this._elm;\r\n\r\n            // Setup drag mode\r\n            this.nativeDraggable = options.nativeDraggable;\r\n            this.sortable = options.sortable;\r\n\r\n            if (this.nativeDraggable) {\r\n                // Touch start threshold cannot be greater than the native dragstart threshold\r\n                this.options.touchStartThreshold = 1;\r\n            }\r\n\r\n\r\n            // Bind all private methods\r\n            for (var fn in this) {\r\n                if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n                    this[fn] = this[fn].bind(this);\r\n                }\r\n            }\r\n\r\n\r\n            // Bind events\r\n            touch.mousy(el);\r\n            eventer.on(el, 'mousedown', this._onTapStart);\r\n\r\n        },\r\n\r\n        // handle moudedown event\r\n        _onTapStart: function (/** Event|TouchEvent */evt) {\r\n            //if (!evt.cancelable) return;\r\n            var _this = this,\r\n                el = this._elm,\r\n                options = this.options,\r\n                preventOnFilter = options.preventOnFilter,\r\n                type = evt.type,\r\n                touch = evt.touches && evt.touches[0],\r\n                target = (touch || evt).target,\r\n                originalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\r\n                filter = options.filter,\r\n                startIndex,\r\n                startDraggableIndex;\r\n\r\n            _saveInputCheckedState(el);\r\n\r\n            // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\r\n            if (dnd.dragEl) {\r\n                return;\r\n            }\r\n\r\n            if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\r\n                return; // only left button and enabled\r\n            }\r\n\r\n            // cancel dnd if original target is content editable\r\n            if (originalTarget.isContentEditable) {\r\n                return;\r\n            }\r\n\r\n            target = finder.closest(target, options.draggable, el, false);\r\n\r\n\r\n            if (lastDownEl === target) {\r\n                // Ignoring duplicate `down`\r\n                return;\r\n            }\r\n\r\n            dnd.log(\"_onTapStart\",target.tagName+\",\"+target.className);\r\n\r\n            // Get the index of the dragged element within its parent\r\n            startIndex = containers._index(target);\r\n            startDraggableIndex = containers._index(target, options.draggable);\r\n\r\n            // Check filter\r\n            if (typeof filter === 'function') {\r\n                if (filter.call(this, evt, target, this)) {\r\n                    dnd._dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\r\n                    return; // cancel dnd\r\n                }\r\n            }\r\n            else if (filter) {\r\n                filter = filter.split(',').some(function (criteria) {\r\n                    criteria = finder.closest(originalTarget, criteria.trim(), el, false);\r\n\r\n                    if (criteria) {\r\n                        dnd._dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n                        return true;\r\n                    }\r\n                });\r\n\r\n                if (filter) {\r\n                    preventOnFilter && evt.cancelable && evt.preventDefault();\r\n                    return; // cancel dnd\r\n                }\r\n            }\r\n\r\n            if (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\r\n                return;\r\n            }\r\n\r\n            // Prepare `dragstart`\r\n            this._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\r\n        },\r\n\r\n        _prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\r\n            var _this = this,\r\n                el = _this._elm,\r\n                options = _this.options,\r\n                ownerDocument = el.ownerDocument,\r\n                dragStartFn,\r\n                dragEl = dnd.dragEl,\r\n                rootEl,\r\n                parentEl = dnd.parentEl,\r\n                nextEl = dnd.nextEl,\r\n                oldIndex = dnd.oldIndex,\r\n                oldDraggableIndex = dnd.oldDraggableIndex,\r\n                tapEvt = dnd.tapEvt;\r\n\r\n            dnd.log(\"_prepareDragStart\",\"start\");\r\n            if (target && !dragEl && (target.parentNode === el)) {\r\n                rootEl = el;\r\n                dragEl = dnd.dragEl = target;\r\n                parentEl = dnd.parentEl= dragEl.parentNode;\r\n                nextEl = dnd.nextEl = dragEl.nextSibling;\r\n                lastDownEl = target;\r\n                dnd.activeGroup = this.sortable.options.group;\r\n                oldIndex = dnd.oldIndex = startIndex;\r\n                oldDraggableIndex = dnd.oldDraggableIndex =  startDraggableIndex;\r\n\r\n                tapEvt = dnd.tapEvt = {\r\n                    target: dragEl,\r\n                    clientX: (touch || evt).clientX,\r\n                    clientY: (touch || evt).clientY\r\n                };\r\n\r\n                this._lastX = (touch || evt).clientX;\r\n                this._lastY = (touch || evt).clientY;\r\n\r\n                dragEl.style['will-change'] = 'all';\r\n                // undo animation if needed\r\n                dragEl.style.transition = '';\r\n                dragEl.style.transform = '';\r\n\r\n                dragStartFn = function () {\r\n                    if ( _this.nativeDraggable) {\r\n                        dragEl.draggable = true;\r\n                    }\r\n\r\n                    // Bind the events: dragstart/dragend\r\n                    _this._triggerDragStart(evt, touch);\r\n\r\n                    // Drag start event\r\n                    dnd._dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\r\n\r\n                    // Chosen item\r\n                    styler.toggleClass(dragEl, options.chosenClass, true);\r\n                };\r\n\r\n                // Disable \"draggable\"\r\n                options.ignore.split(',').forEach(function (criteria) {\r\n                    _find(dragEl, criteria.trim(), dnd._disableDraggable);\r\n                });\r\n\r\n                //eventer.on(ownerDocument, 'mouseup', _this._onDrop); // TODO : lwf\r\n                ///eventer.on(ownerDocument, 'touchend', _this._onDrop);\r\n                ///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\r\n\r\n                // Make dragEl draggable (must be before delay for FireFox)\r\n                ///if (FireFox && this.nativeDraggable) {\r\n                if (this.nativeDraggable) {\r\n                   this.options.touchStartThreshold = 4;\r\n                    dragEl.draggable = true;\r\n                }\r\n\r\n                dragStartFn();\r\n            }\r\n        },\r\n\r\n        //native dnd mode : register _OnDragStart for dragstart event handler \r\n        //moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\r\n        _triggerDragStart: function (/** Event */evt, /** Touch */touch) {\r\n            dnd.log(\"_triggerDragStart\",\"start\");\r\n            dnd.log(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\r\n\r\n            dnd.prepare(this);\r\n\r\n            if (!this.nativeDraggable) {\r\n                ////eventer.on(document, 'mousemove', this._onTouchMove);\r\n            } else {\r\n                eventer.on(dnd.dragEl, 'dragend', this._onDragEnd);\r\n                eventer.on(dnd.dragEl, 'dragstart', this._onDragStart);\r\n            }\r\n\r\n            try {\r\n                if (document.selection) {\r\n                    // Timeout neccessary for IE9\r\n                    langx.defer(function () {\r\n                        document.selection.empty();\r\n                    });\r\n                } else {\r\n                    window.getSelection().removeAllRanges();\r\n                }\r\n            } catch (err) {\r\n            }\r\n        },\r\n\r\n        _onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\r\n            var _this = this,\r\n                dragEl = dnd.dragEl,\r\n                rootEl = this._elm;\r\n\r\n            var dataTransfer = evt.dataTransfer;\r\n            var options = _this.options;\r\n\r\n            // Setup clone\r\n            var cloneEl = dnd.cloneEl = noder.clone(dragEl,true);\r\n\r\n            cloneEl.draggable = false;\r\n            cloneEl.style['will-change'] = '';\r\n\r\n            this._hideClone();\r\n\r\n            styler.toggleClass(cloneEl, _this.options.chosenClass, false);\r\n\r\n\r\n            // #1143: IFrame support workaround\r\n            _this._cloneId = langx.defer(function () {\r\n                if (!_this.options.removeCloneOnHide) {\r\n                    rootEl.insertBefore(cloneEl, dragEl);\r\n                }\r\n                dnd._dispatchEvent(_this, rootEl, 'clone', dragEl);\r\n            });\r\n\r\n\r\n            !fallback && styler.toggleClass(dragEl, options.dragClass, true);\r\n\r\n            // Set proper drop events\r\n            if (fallback) {\r\n                dnd.ignoreNextClick = true;\r\n                _this._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\r\n            } else {\r\n                // Undo what was set in _prepareDragStart before drag started\r\n                //eventer.off(document, 'mouseup', _this._onDrop); //TODO : lwf\r\n                ///eventer.off(document, 'touchend', _this._onDrop);\r\n                ///eventer.off(document, 'touchcancel', _this._onDrop);\r\n\r\n                if (dataTransfer) {\r\n                    dataTransfer.effectAllowed = 'move';\r\n                    options.setData && options.setData.call(_this, dataTransfer, dragEl);\r\n                }\r\n\r\n                ////eventer.on(document, 'drop', _this);\r\n\r\n                // #1276 fix:\r\n                styler.css(dragEl, 'transform', 'translateZ(0)');\r\n            }\r\n\r\n            dnd.awaitingDragStarted = true;\r\n\r\n            _this._dragStartId = langx.defer(_this._dragStarted.bind(_this, fallback, evt));\r\n            ///eventer.on(document, 'selectstart', _this);\r\n            ///if (Safari) {\r\n            ///    styler.css(document.body, 'user-select', 'none');\r\n            ///}\r\n        },\r\n\r\n        //\r\n        //\r\n        _dragStarted: function (fallback, evt) {\r\n            dnd.awaitingDragStarted = false;\r\n            var dragEl = dnd.dragEl,\r\n                rootEl = this._elm,\r\n                oldIndex = dnd.oldIndex,\r\n                oldDraggableIndex = dnd.oldDraggableIndex;\r\n\r\n            if (rootEl && dragEl) {\r\n                //if (this.nativeDraggable) {\r\n                //    eventer.on(document, 'dragover', this._handleAutoScroll);\r\n                //    eventer.on(document, 'dragover', dnd._checkAlignment);\r\n                //}\r\n                dnd.start(this);\r\n                var options = this.options;\r\n\r\n                // Apply effect\r\n                !fallback && styler.toggleClass(dragEl, options.dragClass, false);\r\n                styler.toggleClass(dragEl, options.ghostClass, true);\r\n\r\n                // In case dragging an animated element\r\n                styler.css(dragEl, 'transform', '');\r\n\r\n                dnd.active = this.sortable;\r\n\r\n                fallback && this._appendGhost();\r\n\r\n                // Drag start event\r\n                dnd._dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\r\n            } else {\r\n                this._nulling();\r\n            }\r\n        },\r\n\r\n        _appendGhost: function () {\r\n            // Bug if using scale(): https://stackoverflow.com/questions/2637058\r\n            // Not being adjusted for\r\n            var rootEl =  this.elm();\r\n            var container = this.options.fallbackOnBody ? document.body : rootEl;\r\n            return ghoster._appendGhost(dnd.dragEl,container,this.options);\r\n        },\r\n\r\n\r\n\r\n        _nulling: function() {\r\n            lastDownEl = null;\r\n\r\n            savedInputChecked.forEach(function (el) {\r\n                el.checked = true;\r\n            });\r\n\r\n\r\n            savedInputChecked.length = 0;\r\n\r\n        },\r\n\r\n        _hideClone: function() {\r\n            if (!dnd.cloneEl.cloneHidden) {\r\n                styler.hide(dnd.cloneEl);\r\n                dnd.cloneEl.cloneHidden = true;\r\n                if (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\r\n                    noder.remove(dnd.cloneEl);\r\n                }\r\n            }\r\n        },\r\n\r\n        _showClone: function(putSortable) {\r\n            var rootEl = dnd.active.el,\r\n                nextEl = dnd.nextEl;\r\n\r\n            if (putSortable.lastPutMode !== 'clone') {\r\n                this._hideClone();\r\n                return;\r\n            }\r\n\r\n            if (dnd.cloneEl.cloneHidden) {\r\n                // show clone at dragEl or original position\r\n                if (rootEl.contains(dnd.dragEl) && !this.options.group.revertClone) {\r\n                    rootEl.insertBefore(dnd.cloneEl, dnd.dragEl);\r\n                } else if (nextEl) {\r\n                    rootEl.insertBefore(dnd.cloneEl, nextEl);\r\n                } else {\r\n                    rootEl.appendChild(dnd.cloneEl);\r\n                }\r\n\r\n                if (this.options.group.revertClone) {\r\n                    this._animate(dnd.dragEl, dnd.cloneEl);\r\n                }\r\n                styler.show(dnd.cloneEl);\r\n                dnd.cloneEl.cloneHidden = false;\r\n            }\r\n        },\r\n\r\n        _onDragEnd: function (/**Event*/evt) {\r\n            var el = this._elm,\r\n                options = this.options,\r\n                dragEl = dnd.dragEl,\r\n                putSortable = dnd.putSortable;\r\n\r\n            dnd.awaitingDragStarted = false;\r\n            scrolling = false;\r\n            //isCircumstantialInvert = false;\r\n            //pastFirstInvertThresh = false;\r\n\r\n            clearInterval(this._loopId);\r\n\r\n            //clearInterval(pointerElemChangedInterval);\r\n            autoscroll._nulling();\r\n            \r\n            autoscroll._clearAutoScrolls();\r\n            autoscroll._cancelThrottle();\r\n\r\n            clearTimeout(this._dragStartTimer);\r\n\r\n\r\n            if (this._cloneId) {\r\n                this._cloneId.stop();\r\n                this._cloneId = null;\r\n            }\r\n\r\n            if (this._dragStartId) {\r\n                this._dragStartId.stop();\r\n                this._dragStartId = null;\r\n            }\r\n\r\n            // Unbind events\r\n            ///eventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\r\n\r\n            ///if (Safari) {\r\n            ///    styler.css(document.body, 'user-select', '');\r\n           /// }\r\n\r\n\r\n\r\n            if (this.nativeDraggable) {\r\n                eventer.off(dnd.dragEl, 'dragstart', this._onDragStart);\r\n                eventer.off(dnd.dragEl, 'dragend', this._onDragEnd);\r\n            }\r\n            dnd.end();\r\n            this._nulling();\r\n\r\n        }\r\n\r\n    });\r\n\r\n\r\n    return Draggable;\r\n\r\n});\ndefine('skylark-sortable/Sortable',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n    \"skylark-domx-plugins\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./containers\",\r\n\t\"./dnd\",\r\n\t\"./ghoster\",\r\n\t\"./Draggable\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\tplugins,\r\n\ttouch,\r\n\tautoscroll,\r\n\tcontainers,\r\n\tdnd,\r\n\tghoster,\r\n\tDraggable\r\n){\r\n\r\n\t'use strict';\r\n\r\n\tvar \r\n\t\t//parentEl,\r\n\t\t//ghostEl,\r\n\t\t//cloneEl,\r\n\t\t///rootEl,\r\n\t\t///nextEl,\r\n\t\t//lastDownEl,\r\n\r\n\t\t//scrollEl,\r\n\t\t//scrollParentEl,\r\n\t\t//scrollCustomFn,\r\n\r\n\t\t//oldIndex,\r\n\t\tnewIndex,\r\n\t\t//oldDraggableIndex,\r\n\t\tnewDraggableIndex,\r\n\r\n\t\t///activeGroup,\r\n\t\t//putSortable,\r\n\r\n\t\t//awaitingDragStarted = false,\r\n\t\t//ignoreNextClick = false,\r\n\t\t//sortables = [],\r\n\r\n\t\t//pointerElemChangedInterval,\r\n\t\tlastPointerElemX,\r\n\t\tlastPointerElemY,\r\n\r\n\t\t//tapEvt,\r\n\t\t//touchEvt,\r\n\r\n\t\tmoved,\r\n\r\n\t\tlastTarget,\r\n\t\tlastDirection,\r\n\t\tpastFirstInvertThresh = false,\r\n\t\tisCircumstantialInvert = false,\r\n\t\tlastMode, // 'swap' or 'insert'\r\n\r\n\t\ttargetMoveDistance,\r\n\r\n\r\n\t\trealDragElRect, // dragEl rect after current animation\r\n\r\n\t\t/** @const */\r\n\t\tR_SPACE = /\\s+/g,\r\n\r\n\t\twin = window,\r\n\t\tdocument = win.document,\r\n\t\tparseInt = win.parseInt,\r\n\t\tsetTimeout = win.setTimeout,\r\n\r\n\t\tPolymer = win.Polymer,\r\n\r\n\t\tcaptureMode = {\r\n\t\t\tcapture: false,\r\n\t\t\tpassive: false\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\r\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\r\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\r\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\r\n\r\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\r\n\t\t*/\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari,\r\n\r\n\t\tIOS = isMobile && isMobile.apple.device,\r\n\r\n\t\t//CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\r\n\r\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\r\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\r\n\r\n\t\t/*\r\n\t\tsupportCssPointerEvents = (function() {\r\n\t\t\t// false when <= IE11\r\n\t\t\tif (IE11OrLess) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar el = document.createElement('x');\r\n\t\t\tel.style.cssText = 'pointer-events:auto';\r\n\t\t\treturn el.style.pointerEvents === 'auto';\r\n\t\t})(),\r\n\t\t*/\r\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents,\r\n\r\n\t\t_silent = false,\r\n\t\t_alignedSilent = false,\r\n\r\n\t\t//savedInputChecked = [],\r\n\r\n\r\n\t\t_prepareGroup = function (options) {\r\n\t\t\tfunction toFn(value, pull) {\r\n\t\t\t\treturn function(to, from, dragEl, evt) {\r\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\r\n\r\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\r\n\t\t\t\t\t\t// Default pull value\r\n\t\t\t\t\t\t// Default pull and put value if same group\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (value == null || value === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (pull && value === 'clone') {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t} else if (typeof value === 'function') {\r\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\r\n\r\n\t\t\t\t\t\treturn (value === true ||\r\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\r\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar group = {};\r\n\t\t\tvar originalGroup = options.group;\r\n\r\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\r\n\t\t\t\toriginalGroup = {name: originalGroup};\r\n\t\t\t}\r\n\r\n\t\t\tgroup.name = originalGroup.name;\r\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\r\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\r\n\t\t\tgroup.revertClone = originalGroup.revertClone;\r\n\r\n\t\t\toptions.group = group;\r\n\t\t};\r\n\r\n\r\n\t\t//_hideGhostForTarget = function() {\r\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t//\t\tstyler.css(ghostEl, 'display', 'none');\r\n\t\t//\t}\r\n\t\t//},\r\n\r\n\t\t//_unhideGhostForTarget = function() {\r\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t//\t\tstyler.css(ghostEl, 'display', '');\r\n\t\t//\t}\r\n\t\t//};\r\n\r\n\r\n\t/*\r\n\r\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\r\n\tdocument.addEventListener('click', function(evt) {\r\n\t\tif (ignoreNextClick) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation && evt.stopPropagation();\r\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\r\n\t\t\tignoreNextClick = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, true);\r\n\r\n\r\n\t// Fixed #973:\r\n\teventer.on(document, 'touchmove', function(evt) {\r\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\r\n\t\t\tevt.preventDefault();\r\n\t\t}\r\n\t});\r\n\t*/\r\n\r\n\r\n\tvar Sortable =  plugins.Plugin.inherit({\r\n        klassName: \"Sortable\",\r\n        \r\n        pluginName : \"intg.sortable\",\r\n\r\n\r\n\t\toptions : {\r\n\t\t\tgroup: null,\r\n\t\t\tsort: true,\r\n\t\t\tdisabled: false,\r\n\t\t\tstore: null,\r\n\t\t\thandle: null,\r\n\t\t\tscroll: true,\r\n\t\t\tscrollSensitivity: 30,\r\n\t\t\tscrollSpeed: 10,\r\n\t\t\tbubbleScroll: true,\r\n\t\t\t//draggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\r\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\r\n\t\t\tinvertSwap: false, // invert always\r\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\r\n\t\t\tremoveCloneOnHide: true,\r\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\r\n\t\t\t\treturn oriented(this.el, langx.mixin({\r\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\r\n\t\t\t\t\t\t\t\t},this.options));\r\n\t\t\t},\r\n\t\t\tghostClass: 'sortable-ghost',\r\n\t\t\tchosenClass: 'sortable-chosen',\r\n\t\t\tdragClass: 'sortable-drag',\r\n\t\t\tignore: 'a, img',\r\n\t\t\tfilter: null,\r\n\t\t\tpreventOnFilter: true,\r\n\t\t\tanimation: 0,\r\n\t\t\teasing: null,\r\n\t\t\tsetData: function (dataTransfer, dragEl) {\r\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\r\n\t\t\t},\r\n\t\t\tdropBubble: false,\r\n\t\t\tdragoverBubble: false,\r\n\t\t\tdataIdAttr: 'data-id',\r\n\t\t\tdelay: 0,\r\n\t\t\tdelayOnTouchOnly: false,\r\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\r\n\t\t\tforceFallback: false,\r\n\t\t\tfallbackClass: 'sortable-fallback',\r\n\t\t\tfallbackOnBody: false,\r\n\t\t\tfallbackTolerance: 0,\r\n\t\t\tfallbackOffset: {x: 0, y: 0},\r\n\t\t\t//supportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\r\n\t\t\temptyInsertThreshold: 5\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * @class  Sortable\r\n\t\t * @param  {HTMLElement}  el\r\n\t\t * @param  {Object}       [options]\r\n\t\t */\r\n\t\t_construct : function Sortable(el, options) {\r\n            this.overrided(el,options);\r\n\r\n\t\t\tthis.el = el; // root element\r\n\r\n\t\t\t// Export instance\r\n\t\t\tel[dnd.expando] = this;\r\n\r\n\t\t\toptions = this.options;\r\n\r\n\t\t\toptions.draggable = options.draggable || /[uo]l/i.test(el.nodeName) ? '>li' : '>*';\r\n\r\n\r\n\t\t\t_prepareGroup(options);\r\n\r\n\t\t\t// Bind all private methods\r\n\t\t\tfor (var fn in this) {\r\n\t\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n\t\t\t\t\tthis[fn] = this[fn].bind(this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Setup drag mode\r\n\t\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\r\n\r\n\t\t\t///if (this.nativeDraggable) {\r\n\t\t\t///\t// Touch start threshold cannot be greater than the native dragstart threshold\r\n\t\t\t///\tthis.options.touchStartThreshold = 1;\r\n\t\t\t///}\r\n\r\n\t\t\t// Bind events\r\n\t\t\t///touch.mousy(el);\r\n\r\n\t\t\t///eventer.on(el, 'mousedown', this._onTapStart);\r\n\r\n\t\t\tthis.draggable = new Draggable(this.el,langx.mixin({\r\n\t\t\t\tnativeDraggable : this.nativeDraggable,\r\n\t\t\t\tsortable : this\r\n\t\t\t},this.options));\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.on(el, 'dragover', this);\r\n\t\t\t\teventer.on(el, 'dragenter', this);\r\n\t\t        eventer.on(el, 'drop', this);\r\n\t\t\t}\r\n\r\n\t\t\tdnd.sortables.push(this.el);\r\n\r\n\t\t\t// Restore sorting\r\n\t\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\r\n\r\n\r\n\t        eventer.on(el, 'selectstart', this);\r\n\r\n\t\t},\r\n\r\n\r\n\t\t_computeIsAligned: function(evt) {\r\n\t\t\tvar target,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\t//if (ghostEl && !supportCssPointerEvents) {\r\n\t\t\t//\t_hideGhostForTarget();\r\n\t\t\t//\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\r\n\t\t\t//\t_unhideGhostForTarget();\r\n\t\t\t//} else {\r\n\t\t\t\ttarget = evt.target;\r\n\t\t\t//}\r\n\r\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\r\n\t\t\tif (_alignedSilent) return;\r\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\r\n\r\n\t\t\tvar children = this.el.children;\r\n\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\r\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\r\n\t\t\t\t\tchildren[i].sortableMouseAligned = containers._isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\r\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\r\n\t\t\t\tlastTarget = null;\r\n\t\t\t}\r\n\r\n\t\t\t_alignedSilent = true;\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t_alignedSilent = false;\r\n\t\t\t}, 30);\r\n\r\n\t\t},\r\n\r\n\t\t_getDirection: function(evt, target) {\r\n\t\t\tvar  dragEl = dnd.dragEl;\r\n\r\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,ghoster.ghostEl) : this.options.direction;\r\n\t\t},\r\n\r\n\r\n\r\n\t\t_animate: function (prevRect, target) {\r\n\t\t\tvar ms = this.options.animation,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\tif (ms) {\r\n\t\t\t\tvar currentRect = geom.boundingRect(target);\r\n\r\n\t\t\t\tif (target === dragEl) {\r\n\t\t\t\t\trealDragElRect = currentRect;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (prevRect.nodeType === 1) {\r\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if actually moving position\r\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\r\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\r\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\r\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\r\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis._repaint(target);\r\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\r\n\t\t\t\ttarget.animated = setTimeout(function () {\r\n\t\t\t\t\tstyler.css(target, 'transition', '');\r\n\t\t\t\t\tstyler.css(target, 'transform', '');\r\n\t\t\t\t\ttarget.animated = false;\r\n\t\t\t\t}, ms);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_repaint: function(target) {\r\n\t\t\treturn target.offsetWidth;\r\n\t\t},\r\n\r\n\t\t//_offMoveEvents: function() {\r\n\t   //\t\teventer.off(document, 'dragover', dnd.nearestEmptyInsertDetectEvent);\r\n\t   //\t\teventer.off(document, 'mousemove', dnd.nearestEmptyInsertDetectEvent);\r\n       //\t},\r\n\r\n\t\t_offUpEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\r\n\t\t\teventer.off(document, 'selectstart', this);\r\n\t\t},\r\n\r\n\r\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\r\n\t\t_onDragOver: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\ttarget = evt.target,\r\n\t\t\t\tdragRect,\r\n\t\t\t\ttargetRect,\r\n\t\t\t\trevert,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tgroup = options.group,\r\n\t\t\t\tactiveSortable = dnd.active,\r\n\t\t\t\tisOwner = (dnd.activeGroup === group),\r\n\t\t\t\tcanSort = options.sort,\r\n\t\t\t\t_this = this,\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\trootEl = dnd.draggable.elm(),\r\n\t\t\t\tputSortable = dnd.putSortable,\r\n\t\t\t\tnextEl = dnd.nextEl,\r\n\t\t\t\toldIndex = dnd.oldIndex,\r\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex;\r\n            //dnd.log(\"_onDragOver\",\"start\");\r\n\r\n\t\t\tif (_silent) return;\r\n\r\n\t\t\t// Return invocation when dragEl is inserted (or completed)\r\n\t\t\tfunction completed(insertion) {\r\n\t\t\t\tif (insertion) {\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable.draggable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable.draggable._showClone(_this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (activeSortable) {\r\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (putSortable !== _this && _this !== dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable = _this;\r\n\t\t\t\t\t} else if (_this === dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Animation\r\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\r\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\r\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\r\n\t\t\t\t\tlastTarget = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// no bubbling and not fallback\r\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\r\n\t\t\t\t\t//_this._handleAutoScroll(evt);\r\n\t\t\t\t\tdnd.over(evt);\r\n\t\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(evt);\r\n\r\n\t\t\t\t\t// Do not detect for empty insert if already inserted\r\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Call when dragEl has been inserted\r\n\t\t\tfunction changed() {\r\n\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, containers._index(dragEl), oldDraggableIndex, containers._index(dragEl, options.draggable), evt);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\r\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\r\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\r\n\t\t\t */\r\n\t\t\tfunction _getInsertDirection(target) {\r\n\t\t\t\tvar dragElIndex = containers._index(dragEl),\r\n\t\t\t\t\ttargetIndex = containers._index(target);\r\n\r\n\t\t\t\tif (dragElIndex < targetIndex) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\r\n\t\t\t\tvar targetRect = geom.boundingRect(target),\r\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\r\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\r\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\r\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\r\n\t\t\t\t\tinvert = false;\r\n\r\n\r\n\t\t\t\tif (!invertSwap) {\r\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\r\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\r\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\r\n\t\t\t\t\t\t\t(lastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\r\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\r\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\r\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\r\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinvert = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Regular\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\r\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinvert = invert || invertSwap;\r\n\r\n\t\t\t\tif (invert) {\r\n\t\t\t\t\t// Invert of regular\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\r\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (evt.preventDefault !== void 0) {\r\n\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tmoved = true;\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\r\n\r\n\t\t\t// target is dragEl or target is animated\r\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\r\n\t\t\t\treturn completed(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (target !== dragEl) {\r\n\t\t\t\tdnd.ignoreNextClick = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (activeSortable && !options.disabled &&\r\n\t\t\t\t(isOwner\r\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\tputSortable === this ||\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(this.lastPutMode = dnd.activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\r\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tvar axis = this._getDirection(evt, target);\r\n\r\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\r\n\r\n\t\t\t\tif (revert) {\r\n\t\t\t\t\tthis._hideClone();\r\n\t\t\t\t\tdnd.parentEl = rootEl; // actualization\r\n\r\n\t\t\t\t\tif (nextEl) {\r\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trootEl.appendChild(dragEl);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn completed(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar elLastChild = ghoster._lastChild(el);\r\n\r\n\t\t\t\tif (!elLastChild || ghoster._ghostIsLast(evt, axis, el) && !elLastChild.animated) {\r\n\t\t\t\t\t// assign target only if condition is true\r\n\t\t\t\t\tif (elLastChild && el === evt.target) {\r\n\t\t\t\t\t\ttarget = elLastChild;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable.draggable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable.draggable._showClone(this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\r\n\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\tdnd.parentEl = el; // actualization\r\n\t\t\t\t\t\trealDragElRect = null;\r\n\r\n\t\t\t\t\t\tchanged();\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\r\n\t\t\t\t\tvar direction = 0,\r\n\t\t\t\t\t\ttargetBeforeFirstSwap,\r\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\r\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\r\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\r\n\t\t\t\t\t\tscrolledPastTop = autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\r\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\r\n\r\n\r\n\t\t\t\t\tif (lastTarget !== target) {\r\n\t\t\t\t\t\tlastMode = null;\r\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\r\n\t\t\t\t\t\tpastFirstInvertThresh = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tcontainers._isElInRowColumn(dragEl, target, axis) && aligned ||\r\n\t\t\t\t\t\tdifferentLevel ||\r\n\t\t\t\t\t\tscrolledPastTop ||\r\n\t\t\t\t\t\toptions.invertSwap ||\r\n\t\t\t\t\t\tlastMode === 'insert' ||\r\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\r\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\r\n\t\t\t\t\t\tlastMode === 'swap'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// New target that we will be inside\r\n\t\t\t\t\t\tif (lastMode !== 'swap') {\r\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\r\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\r\n\t\t\t\t\t\t\tisCircumstantialInvert,\r\n\t\t\t\t\t\t\tlastTarget === target);\r\n\t\t\t\t\t\tlastMode = 'swap';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Insert at position\r\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\r\n\t\t\t\t\t\tlastMode = 'insert';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (direction === 0) return completed(false);\r\n\r\n\t\t\t\t\trealDragElRect = null;\r\n\t\t\t\t\tlastTarget = target;\r\n\r\n\t\t\t\t\tlastDirection = direction;\r\n\r\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\r\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\r\n\t\t\t\t\t\tafter = false;\r\n\r\n\t\t\t\t\tafter = direction === 1;\r\n\r\n\t\t\t\t\tvar moveVector = dnd._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\r\n\r\n\t\t\t\t\tif (moveVector !== false) {\r\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\r\n\t\t\t\t\t\t\tafter = (moveVector === 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_silent = true;\r\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\r\n\r\n\t\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\t\tactiveSortable.draggable._hideClone();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tactiveSortable.draggable._showClone(this);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (after && !nextSibling) {\r\n\t\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\r\n\t\t\t\t\t\tif (scrolledPastTop) {\r\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdnd.parentEl = dragEl.parentNode; // actualization\r\n\r\n\t\t\t\t\t\t// must be done before animation\r\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\r\n\t\t\t\t\t\t\ttargetMoveDistance =  Math.abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchanged();\r\n\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el.contains(dragEl)) {\r\n\t\t\t\t\treturn completed(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onDrop: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\trootEl = dnd.draggable.elm(),\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\tputSortable = dnd.putSortable,\r\n\t\t\t\tparentEl = dnd.parentEl,\r\n\t\t\t\toldIndex = dnd.oldIndex,\r\n\t\t\t\toldDraggableIndex = dnd.oldDraggableIndex,\r\n\t\t\t\tnextEl = dnd.nextEl;\r\n\r\n\t\t\t/*\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tscrolling = false;\r\n\r\n\t\t\tclearInterval(this._loopId);\r\n\r\n\t\t\tclearInterval(pointerElemChangedInterval);\r\n\t\t\t\r\n\t\t\tautoscroll._clearAutoScrolls();\r\n\t\t\tautoscroll._cancelThrottle();\r\n\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\t_cancelNextTick(this._cloneId);\r\n\t\t\t_cancelNextTick(this._dragStartId);\r\n\t\t\t*/\r\n\r\n\t\t\tisCircumstantialInvert = false;\r\n\t\t\tpastFirstInvertThresh = false;\r\n\t\t\t// Unbind events\r\n\t\t\t//eventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(document, 'drop', this);\r\n\t\t\t\t///eventer.off(el, 'dragstart', this._onDragStart);\r\n\t\t\t\t//eventer.off(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\t//eventer.off(document, 'dragover', dnd._checkAlignment);\r\n\t\t\t}\r\n\r\n\t\t\t///if (Safari) {\r\n\t\t\t///\tstyler.css(document.body, 'user-select', '');\r\n\t\t\t///}\r\n\r\n\t\t\t//this._offMoveEvents();\r\n\t\t\tthis._offUpEvents();\r\n\r\n\t\t\tif (evt) {\r\n\t\t\t\tif (moved) {\r\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tghoster.remove();\r\n\r\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\r\n\t\t\t\t\t// Remove clone\r\n\t\t\t\t\tdnd.cloneEl && dnd.cloneEl.parentNode && dnd.cloneEl.parentNode.removeChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dragEl) {\r\n\t\t\t\t\t///if (this.nativeDraggable) {\r\n\t\t\t\t\t///\teventer.off(dragEl, 'dragend', this);\r\n\t\t\t\t\t///}\r\n\r\n\t\t\t\t\tdnd._disableDraggable(dragEl);\r\n\t\t\t\t\tdragEl.style['will-change'] = '';\r\n\r\n\t\t\t\t\t// Remove class'sd\r\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\r\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\r\n\r\n\t\t\t\t\t// Drag stop event\r\n\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\r\n\r\n\t\t\t\t\tif (rootEl !== parentEl) {\r\n\t\t\t\t\t\tnewIndex = containers._index(dragEl);\r\n\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t// Add event\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// Remove event\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// drag from one list and drop into another\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tputSortable && putSortable.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\r\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\t\t\t\t\tnewIndex = containers._index(dragEl);\r\n\t\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t\t// drag & drop within the same list\r\n\t\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd.active) {\r\n\t\t\t\t\t\t/* jshint eqnull:true */\r\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\r\n\t\t\t\t\t\t\tnewIndex = oldIndex;\r\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t// Save sorting\r\n\t\t\t\t\t\tthis.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis._nulling();\r\n\t\t},\r\n\r\n\t\t_nulling: function() {\r\n\t\t\t/*\r\n\t\t\tdnd.rootEl =\r\n\t\t\tdnd.dragEl =\r\n\t\t\tdnd.parentEl =\r\n\t\t\tghoster.ghostEl =\r\n\t\t\tdnd.nextEl =\r\n\t\t\tdnd.cloneEl =\r\n\t\t\t///lastDownEl =\r\n\r\n\t\t\tautoscroll.scrollEl =\r\n\t\t\tautoscroll.scrollParentEl =\r\n\t\t\tautoscroll.autoScrolls.length =\r\n\t\t\t*/\r\n\t\t\t//pointerElemChangedInterval =\r\n\t\t\tlastPointerElemX =\r\n\t\t\tlastPointerElemY =\r\n\r\n\t\t\t//tapEvt =\r\n\t\t\t//dnd.touchEvt =\r\n\r\n\t\t\tmoved =\r\n\t\t\tnewIndex =\r\n\t\t\t//dnd.oldIndex =\r\n\r\n\t\t\tlastTarget =\r\n\t\t\tlastDirection =\r\n\r\n\t\t\trealDragElRect =\r\n\r\n\t\t\t//dnd.putSortable =\r\n\t\t\t//dnd.activeGroup =\r\n\t\t\t//dnd.active = \r\n\t\t\tnull;\r\n\r\n\t\t},\r\n\r\n\t\thandleEvent: function (/**Event*/evt) {\r\n\t\t\tswitch (evt.type) {\r\n\t\t\t\tcase 'drop':\r\n\t\t\t\t\tthis._onDrop(evt);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'dragenter':\r\n\t\t\t\tcase 'dragover':\r\n\t\t\t\t\tif (dnd.dragEl) {\r\n\t\t\t\t\t\tthis._onDragOver(evt);\r\n\t\t\t\t\t\t_globalDragOver(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selectstart':\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Serializes the item into an array of string.\r\n\t\t * @returns {String[]}\r\n\t\t */\r\n\t\ttoArray: function () {\r\n\t\t\tvar order = [],\r\n\t\t\t\tel,\r\n\t\t\t\tchildren = this.el.children,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tn = children.length,\r\n\t\t\t\toptions = this.options;\r\n\r\n\t\t\tfor (; i < n; i++) {\r\n\t\t\t\tel = children[i];\r\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\r\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || noder.generateId(el));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn order;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Sorts the elements according to the array.\r\n\t\t * @param  {String[]}  order  order of the items\r\n\t\t */\r\n\t\tsort: function (order) {\r\n\t\t\tvar items = {}, rootEl = this.el;\r\n\r\n\t\t\tthis.toArray().forEach(function (id, i) {\r\n\t\t\t\tvar el = rootEl.children[i];\r\n\r\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\r\n\t\t\t\t\titems[id] = el;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\torder.forEach(function (id) {\r\n\t\t\t\tif (items[id]) {\r\n\t\t\t\t\trootEl.removeChild(items[id]);\r\n\t\t\t\t\trootEl.appendChild(items[id]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Save the current sorting\r\n\t\t */\r\n\t\tsave: function () {\r\n\t\t\tvar store = this.options.store;\r\n\t\t\tstore && store.set && store.set(this);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n\t\t * @param   {HTMLElement}  el\r\n\t\t * @param   {String}       [selector]  default: `options.draggable`\r\n\t\t * @returns {HTMLElement|null}\r\n\t\t */\r\n\t\tclosest: function (el, selector) {\r\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * Set/get option\r\n\t\t * @param   {string} name\r\n\t\t * @param   {*}      [value]\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\toption: function (name, value) {\r\n\t\t\tvar options = this.options;\r\n\r\n\t\t\tif (value === void 0) {\r\n\t\t\t\treturn options[name];\r\n\t\t\t} else {\r\n\t\t\t\toptions[name] = value;\r\n\r\n\t\t\t\tif (name === 'group') {\r\n\t\t\t\t\t_prepareGroup(options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Destroy\r\n\t\t */\r\n\t\tdestroy: function () {\r\n\t\t\tvar el = this.el;\r\n\r\n\t\t\tel[dnd.expando] = null;\r\n\r\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(el, 'dragover', this);\r\n\t\t\t\teventer.off(el, 'dragenter', this);\r\n\t\t\t}\r\n\t\t\t// Remove draggable attributes\r\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\r\n\t\t\t\tel.removeAttribute('draggable');\r\n\t\t\t});\r\n\r\n\t\t\tthis._onDrop();\r\n\r\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\r\n\r\n\t\t\tthis.el = el = null;\r\n\t\t}\r\n\t});\r\n\r\n\r\n    function _globalDragOver(/**Event*/evt) {\r\n\t\tif (evt.dataTransfer) {\r\n\t\t\tevt.dataTransfer.dropEffect = 'move';\r\n\t\t}\r\n\t\tevt.cancelable && evt.preventDefault();\r\n\t}\r\n\r\n\r\n\tfunction _unsilent() {\r\n\t\t_silent = false;\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Create sortable instance\r\n\t * @param {HTMLElement}  el\r\n\t * @param {Object}      [options]\r\n\t */\r\n\tSortable.create = function (el, options) {\r\n\t\treturn new Sortable(el, options);\r\n\t};\r\n\r\n\r\n\t// Export\r\n\tSortable.version = '1.9.0';\r\n\r\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\r\n});\ndefine('skylark-sortable/main',[\r\n\t\"skylark-langx\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-styler\",\r\n\t\"./autoscroll\",\r\n\t\"./containers\",\r\n\t\"./Sortable\"\r\n],function(\r\n\tlangx,\r\n\teventer,\r\n\tfinder,\r\n\tnoder,\r\n\tstyler,\r\n\tautoscroll,\r\n\tcontainers,\r\n\tSortable\r\n){\r\n\t// Export utils\r\n\tSortable.utils = {\r\n\t\ton: eventer.on,\r\n\t\toff: eventer.off,\r\n\t\tcss: styler.css,\r\n\t\t///find: _find,\r\n\t\tis: function (el, selector) {\r\n\t\t\treturn !!finder.closest(el, selector, el, false);\r\n\t\t},\r\n\t\textend: langx.mixin,\r\n\t\tthrottle: autoscroll._throttle,\r\n\t\tclosest: finder.closest,\r\n\t\ttoggleClass: styler.toggleClass,\r\n\t\tclone: \tfunction (el) {\r\n\t\t\t\t\treturn noder.clone(el,true);\r\n\t\t\t\t},\r\n\t\tindex: containers._index,\r\n\t\tnextTick: \tfunction _nextTick(fn) {\r\n\t\t\t//return setTimeout(fn, 0);\r\n\t\t\treturn langx.defer(fn);\r\n\t\t},\r\n\t\tcancelNextTick: \tfunction _cancelNextTick(id) {\r\n\t\t\t//return clearTimeout(id);\r\n\t\t\treturn id && id.stop();\r\n\t\t},\r\n\t\t//detectDirection: _detectDirection,\r\n\t\tgetChild: function(el, childNum, options) {\r\n\t\t\toptions.excluding = [];\r\n\t\t\toptions.closesting = options.draggable;\r\n\t\t\treturn finder.childAt(el,childNum,options);\r\n\t\t}\r\n\t};\r\n\r\n\treturn Sortable;\r\n});\ndefine('skylark-sortable', ['skylark-sortable/main'], function (main) { return main; });\n\n"]}