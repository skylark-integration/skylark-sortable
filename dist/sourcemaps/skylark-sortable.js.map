{"version":3,"sources":["skylark-sortable.js"],"names":["define","hoster","detects","browser","window","document","ua","toLowerCase","match","exec","indexOf","platform_match","matched","version","versionNumber","platform","parseInt","android","bb","blackberry","ipad","iphone","ipod","kindle","playbook","silk","mobile","cros","mac","linux","win","desktop","chrome","opr","safari","webkit","rv","iemobile","edge","name","uaMatch","navigator","userAgent","detectBrowser","undefined","isBrowser","geom","styler","finder","Orientation","el","options","elCSS","css","elWidth","contentRect","width","child1","childAt","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginSize","secondChildWidth","display","flexDirection","Vertical","Horizontal","gridTemplateColumns","split","length","float","touchingSideChild2","clear","skylark","langx","isMobile","$","noder","eventer","transforms","scrollingElement","oriented","touch","expando","Date","getTime","dnd","active","putSortable","sortables","dragEl","cloneEl","touchEvt","prepare","draggable","ownerDocument","on","this","nearestEmptyInsertDetectEvent","start","event","over","end","dropped","evt","touches","nearest","_detectNearestEmptySortable","clientX","clientY","i","target","rootEl","preventDefault","stopPropagation","_onDragOver","x","y","lastChild","ignoreHidden","excluding","ghostEl","rect","boundingRect","threshold","emptyInsertThreshold","insideHorizontally","left","right","insideVertically","top","bottom","_checkAlignment","parentNode","_computeIsAligned","_emulateDragOver","forAutoScroll","_lastX","_lastY","elementFromPoint","parent","shadowRoot","_onMove","fromEl","toEl","dragRect","targetEl","targetRect","originalEvt","willInsertAfter","retVal","sortable","onMoveFn","onMove","create","to","from","dragged","draggedRect","related","relatedRect","originalEvent","dispatchEvent","call","_dispatchEvent","startIndex","newIndex","startDraggableIndex","newDraggableIndex","onName","charAt","toUpperCase","substr","item","clone","oldIndex","oldDraggableIndex","pullMode","lastPutMode","autoScrolls","scrolling","scrollParentEl","IE11OrLess","ie","Edge","Safari","firefox","_throttleTimeout","_getParentAutoScrollElement","includeSelf","getBoundingClientRect","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","_autoScroll","_throttle","isFallback","scroll","_this","sens","scrollSensitivity","speed","scrollSpeed","winScroller","scrollThisInstance","_clearAutoScrolls","scrollEl","scrollCustomFn","scrollFn","layersOut","currentParent","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","height","scrollLeft","scrollTop","abs","clearInterval","pid","setInterval","layer","Sortable","_onTouchMove","scrollOffsetY","scrollOffsetX","scrollBy","bind","bubbleScroll","forEach","autoScroll","callback","ms","debounce","_isScrolledPast","side","elSide","parentSide","_getRelativeScrollOffset","offsetLeft","offsetTop","matrix","scaleX","a","scaleY","d","_handleAutoScroll","fallback","ogElemScroller","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","newElem","_cancelThrottle","stop","autoscroll","_index","selector","index","nodeName","matches","_isElInRowColumn","el1","el2","axis","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_isClientInRowColumn","targetS1Opp","targetS2Opp","mouseOnOppAxis","containers","log","category","message","append","parentEl","nextEl","lastDownEl","activeGroup","tapEvt","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","setTimeout","Polymer","FireFox","PositionGhostAbsolutely","apple","device","supportDraggable","createElement","support","cssPointerEvents","_find","ctx","tagName","iterator","list","getElementsByTagName","n","_lastChild","_generateId","str","className","src","href","textContent","sum","charCodeAt","toString","_nextTick","fn","defer","_cancelNextTick","id","_getRect","adjustForTransform","container","adjustForFixed","nodeType","mixin","defaults","group","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","_prepareGroup","nativeDraggable","mousy","_onTapStart","push","get","_disableDraggable","_unsilent","_silent","_alignedSilent","Math","min","max","savedInputChecked","toFn","value","pull","sameGroup","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","addEventListener","stopImmediatePropagation","cancelable","prototype","constructor","closest","children","sortableMouseAligned","_getDirection","type","originalTarget","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","some","criteria","trim","_prepareDragStart","dragStartFn","nextSibling","style","transition","transform","_disableDelayedDragEvents","_triggerDragStart","toggleClass","_onDrop","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","e","floor","clearTimeout","off","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_appendGhost","_nulling","relativeScrollOffset","dx","dy","translate3d","ghostRelativeParentRect","documentElement","cloneNode","appendChild","_animate","prevRect","currentRect","_repaint","animated","offsetWidth","_offMoveEvents","_offUpEvents","_hideClone","_cloneId","insertBefore","_loopId","effectAllowed","_dragStartId","revert","activeSortable","isOwner","canSort","contains","completed","elLastChild","elRect","mouseOnAxis","targetS2","_ghostIsLast","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","scrollBefore","isLastTarget","targetLength","targetS1","invert","_getInsertDirection","_getSwapDirection","nextElementSibling","after","moveVector","insertion","dragElIndex","targetIndex","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","items","set","option","destroy","Array","querySelectorAll","removeAttribute","splice","cloneHidden","utils","find","is","extend","throttle","nextTick","cancelNextTick","getChild","childNum","closesting","attach","main"],"mappings":"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","file":"../skylark-sortable.js","sourcesContent":["define('skylark-langx-hoster/detects/browser',[\r\n    \"../hoster\"\r\n],function(hoster){\r\n\t//refer : https://github.com/gabceb/jquery-browser-plugin\r\n\r\n\tfunction detectBrowser() {\r\n\r\n\t\tfunction uaMatch( ua ) {\r\n\t\t\tua = ua.toLowerCase();\r\n\r\n\t\t\tvar match = /(edge)\\/([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opr)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(iemobile)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"trident\") >= 0 && /(rv)(?::| )([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar platform_match = /(ipad)/.exec( ua ) ||\r\n\t\t\t    /(ipod)/.exec( ua ) ||\r\n\t\t\t    /(windows phone)/.exec( ua ) ||\r\n\t\t\t    /(iphone)/.exec( ua ) ||\r\n\t\t\t    /(kindle)/.exec( ua ) ||\r\n\t\t\t    /(silk)/.exec( ua ) ||\r\n\t\t\t    /(android)/.exec( ua ) ||\r\n\t\t\t    /(win)/.exec( ua ) ||\r\n\t\t\t    /(mac)/.exec( ua ) ||\r\n\t\t\t    /(linux)/.exec( ua ) ||\r\n\t\t\t    /(cros)/.exec( ua ) ||\r\n\t\t\t    /(playbook)/.exec( ua ) ||\r\n\t\t\t    /(bb)/.exec( ua ) ||\r\n\t\t\t    /(blackberry)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar browser = {},\r\n\t\t\t    matched = {\r\n\t\t\t      browser: match[ 5 ] || match[ 3 ] || match[ 1 ] || \"\",\r\n\t\t\t      version: match[ 2 ] || match[ 4 ] || \"0\",\r\n\t\t\t      versionNumber: match[ 4 ] || match[ 2 ] || \"0\",\r\n\t\t\t      platform: platform_match[ 0 ] || \"\"\r\n\t\t\t    };\r\n\r\n\t\t\tif ( matched.browser ) {\r\n\t\t\t\tbrowser[ matched.browser ] = true;\r\n\t\t\t  \tbrowser.version = matched.version;\r\n\t\t\t  \tbrowser.versionNumber = parseInt(matched.versionNumber, 10);\r\n\t\t\t}\r\n\r\n\t\t\tif ( matched.platform ) {\r\n\t\t\t \tbrowser[ matched.platform ] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered mobile platforms, meaning they run a mobile browser\r\n\t\t\tif ( browser.android || browser.bb || browser.blackberry || browser.ipad || browser.iphone ||\r\n\t\t\t\tbrowser.ipod || browser.kindle || browser.playbook || browser.silk || browser[ \"windows phone\" ]) {\r\n\t\t\t\tbrowser.mobile = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered desktop platforms, meaning they run a desktop browser\r\n\t\t\tif ( browser.cros || browser.mac || browser.linux || browser.win ) {\r\n\t\t\t\tbrowser.desktop = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Chrome, Opera 15+ and Safari are webkit based browsers\r\n\t\t\tif ( browser.chrome || browser.opr || browser.safari ) {\r\n\t\t\t\tbrowser.webkit = true;\r\n\t\t\t}\r\n\r\n\t\t\t// IE11 has a new token so we will assign it msie to avoid breaking changes\r\n\t\t\tif ( browser.rv || browser.iemobile) {\r\n\t\t\t  var ie = \"ie\";\r\n\r\n\t\t\t  matched.browser = ie;\r\n\t\t\t  browser[ie] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Edge is officially known as Microsoft Edge, so rewrite the key to match\r\n\t\t\tif ( browser.edge ) {\r\n\t\t\t  delete browser.edge;\r\n\t\t\t  var msedge = \"edge\";\r\n\r\n\t\t\t  matched.browser = msedge;\r\n\t\t\t  browser[msedge] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Blackberry browsers are marked as Safari on BlackBerry\r\n\t\t\tif ( browser.safari && browser.blackberry ) {\r\n\t\t\t  var blackberry = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = blackberry;\r\n\t\t\t  browser[blackberry] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Playbook browsers are marked as Safari on Playbook\r\n\t\t\tif ( browser.safari && browser.playbook ) {\r\n\t\t\t  var playbook = \"playbook\";\r\n\r\n\t\t\t  matched.browser = playbook;\r\n\t\t\t  browser[playbook] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// BB10 is a newer OS version of BlackBerry\r\n\t\t\tif ( browser.bb ) {\r\n\t\t\t  var bb = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = bb;\r\n\t\t\t  browser[bb] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 15+ are identified as opr\r\n\t\t\tif ( browser.opr ) {\r\n\t\t\t  var opera = \"opera\";\r\n\r\n\t\t\t  matched.browser = opera;\r\n\t\t\t  browser[opera] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Stock Android browsers are marked as Safari on Android.\r\n\t\t\tif ( browser.safari && browser.android ) {\r\n\t\t\t  var android = \"android\";\r\n\r\n\t\t\t  matched.browser = android;\r\n\t\t\t  browser[android] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Kindle browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.kindle ) {\r\n\t\t\t  var kindle = \"kindle\";\r\n\r\n\t\t\t  matched.browser = kindle;\r\n\t\t\t  browser[kindle] = true;\r\n\t\t\t}\r\n\r\n\t\t\t // Kindle Silk browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.silk ) {\r\n\t\t\t  var silk = \"silk\";\r\n\r\n\t\t\t  matched.browser = silk;\r\n\t\t\t  browser[silk] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Assign the name and platform variable\r\n\t\t\tbrowser.name = matched.browser;\r\n\t\t\tbrowser.platform = matched.platform;\r\n\t\t\treturn browser;\r\n\t\t}\r\n\r\n\r\n\t    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\n\r\n\t    if (isBrowser) {\r\n\t\t    return uaMatch( navigator.userAgent );\r\n\t    } else {\r\n\t    \treturn null;\r\n\t    }\r\n\t}\r\n\r\n\r\n\treturn hoster.detects.browser = detectBrowser;\r\n});\ndefine('skylark-langx-hoster/isBrowser',[\r\n    \"./hoster\",\r\n    \"./detects/browser\"\r\n],function(hoster,detectBrowser){\r\n\tif (hoster.isBrowser == undefined) {\r\n\t\thoster.isBrowser = detectBrowser();\r\n\t}\r\n\r\n    return hoster.isBrowser;\r\n});\r\n\ndefine('skylark-domx-layouts/oriented',[\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-finder\",\r\n\t\"./Orientation\"\r\n],function(\r\n\tgeom,\r\n\tstyler,\r\n\tfinder,\r\n\tOrientation\r\n){\r\n\r\n\t/**\r\n\t * Detects children orientation.\r\n\t */\r\n\tfunction oriented(el, options) {\r\n\t\tvar elCSS = styler.css(el),\r\n\r\n\t\t\telWidth = geom.contentRect(el).width,\r\n\r\n\t\t\tchild1 = finder.childAt(el, 0, options),\r\n\t\t\tchild2 = finder.childAt(el, 1, options),\r\n\t\t\tfirstChildCSS = child1 && styler.css(child1),\r\n\t\t\tsecondChildCSS = child2 && styler.css(child2),\r\n\r\n\t\t\tfirstChildWidth = child1 && geom.marginSize(child1).width,\r\n\t\t\tsecondChildWidth = child2 && geom.marginSize(child2).width;\r\n\r\n\t\tif (elCSS.display === 'flex') {\r\n\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\r\n\t\t\t? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (elCSS.display === 'grid') {\r\n\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (child1 && firstChildCSS.float !== 'none') {\r\n\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\r\n\r\n\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\r\n\t\t\t\tOrientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\treturn (child1 &&\r\n\t\t\t(\r\n\t\t\t\tfirstChildCSS.display === 'block' ||\r\n\t\t\t\tfirstChildCSS.display === 'flex' ||\r\n\t\t\t\tfirstChildCSS.display === 'table' ||\r\n\t\t\t\tfirstChildCSS.display === 'grid' ||\r\n\t\t\t\tfirstChildWidth >= elWidth &&\r\n\t\t\t\telCSS.float === 'none' ||\r\n\t\t\t\tchild2 &&\r\n\t\t\t\telCSS.float === 'none' &&\r\n\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\r\n\t\t\t) ?\r\n\t\t\tOrientation.Vertical : Orientation.Horizontal\r\n\t\t);\r\n\t}\r\n\r\n\treturn oriented;\r\n});\ndefine('skylark-sortable/dnd',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch\r\n){\r\n\r\n\tvar expando = 'Sortable' + (new Date).getTime();\r\n\r\n\r\n\tvar dnd = {\r\n\t\texpando,\r\n\r\n\t\tactive : null,\r\n\t\tputSortable : null,\r\n\t\tsortables : [],\r\n\r\n\r\n\t\tdragEl : null,\r\n\t\tcloneEl : null,\r\n\r\n\t\ttouchEvt : null,\r\n\r\n        prepare: function(draggable) {\r\n\t\t\tvar el = draggable.el,\r\n\t\t\t\townerDocument = el.ownerDocument;\r\n\r\n\t\t\teventer.on(ownerDocument, 'dragover', this.nearestEmptyInsertDetectEvent);\r\n\t\t\teventer.on(ownerDocument, 'mousemove', this.nearestEmptyInsertDetectEvent);\r\n\t\t\t///eventer.on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\r\n\t\t},\r\n\r\n        start: function(draggable, event) {\r\n        },\r\n\r\n        over : function() {\r\n\r\n        },\r\n\r\n        end: function(dropped) {\r\n \t\t},\r\n\r\n\t\tnearestEmptyInsertDetectEvent :function (evt) {\r\n\t\t\tif (dnd.dragEl) {\r\n\t\t\t\tevt = evt.touches ? evt.touches[0] : evt;\r\n\t\t\t\tvar nearest = dnd._detectNearestEmptySortable(evt.clientX, evt.clientY);\r\n\r\n\t\t\t\tif (nearest) {\r\n\t\t\t\t\t// Create imitation event\r\n\t\t\t\t\tvar event = {};\r\n\t\t\t\t\tfor (var i in evt) {\r\n\t\t\t\t\t\tevent[i] = evt[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tevent.target = event.rootEl = nearest;\r\n\t\t\t\t\tevent.preventDefault = void 0;\r\n\t\t\t\t\tevent.stopPropagation = void 0;\r\n\t\t\t\t\tnearest[expando]._onDragOver(event);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, \r\n\r\n\t\t/**\r\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n\t\t * @param  {Number} x      X position\r\n\t\t * @param  {Number} y      Y position\r\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\r\n\t\t */\r\n\t\t_detectNearestEmptySortable : function(x, y) {\r\n\t\t\tvar sortables = this.sortables;\r\n\r\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\r\n\t\t\t\tif (finder.lastChild(sortables[i],{ignoreHidden : true,excluding : [this.ghostEl]})) continue;\r\n\r\n\t\t\t\tvar rect = geom.boundingRect(sortables[i]),\r\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\r\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\r\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\r\n\r\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\r\n\t\t\t\t\treturn sortables[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_checkAlignment : function(evt) {\r\n\t\t\tif (!this.dragEl || !this.dragEl.parentNode) return;\r\n\t\t\tthis.dragEl.parentNode[expando] && this.dragEl.parentNode[expando]._computeIsAligned(evt);\r\n\t\t},\r\n\r\n\t\t_emulateDragOver: function (forAutoScroll) {\r\n\t\t\tvar dragEl = this.dragEl,\r\n\t\t\t\ttouchEvt = this.touchEvt;\r\n\r\n\t\t\tif (touchEvt) {\r\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis._lastX = touchEvt.clientX;\r\n\t\t\t\tthis._lastY = touchEvt.clientY;\r\n\r\n\t\t\t\t//_hideGhostForTarget();\r\n\r\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n\t\t\t\tvar parent = target;\r\n\r\n\t\t\t\twhile (target && target.shadowRoot) {\r\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n\t\t\t\t\tif (target === parent) break;\r\n\t\t\t\t\tparent = target;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (parent) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tif (parent[expando]) {\r\n\t\t\t\t\t\t\tvar inserted;\r\n\r\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\r\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\r\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\r\n\t\t\t\t\t\t\t\ttarget: target,\r\n\t\t\t\t\t\t\t\trootEl: parent\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t//if (inserted && !this.options.dragoverBubble) {\r\n\t\t\t\t\t\t\tif (inserted) {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\ttarget = parent; // store last element\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/* jshint boss:true */\r\n\t\t\t\t\twhile (parent = parent.parentNode);\r\n\t\t\t\t}\r\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\r\n\r\n\t\t\t\t//_unhideGhostForTarget();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_onMove : function (fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\r\n\t\t\tvar evt,\r\n\t\t\t\tsortable = fromEl[expando],\r\n\t\t\t\tonMoveFn = sortable.options.onMove,\r\n\t\t\t\tretVal;\r\n\r\n\t\t\tevt = eventer.create(\"move\",{\r\n\t\t\t\tto : toEl,\r\n\t\t\t\tfrom : fromEl,\r\n\t\t\t\tdragged : dragEl,\r\n\t\t\t\tdraggedRect: dragRect,\r\n\t\t\t\trelated : targetEl || toEl,\r\n\t\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\r\n\t\t\t\twillInsertAfter : willInsertAfter,\r\n\t\t\t\toriginalEvent : originalEvt\r\n\t\t\t});\r\n\r\n\t\t\tfromEl.dispatchEvent(evt);\r\n\r\n\t\t\tif (onMoveFn) {\r\n\t\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\r\n\t\t\t}\r\n\r\n\t\t\treturn retVal;\r\n\t\t},\r\n\r\n\t\t_dispatchEvent : function (\r\n\t\t\tsortable, rootEl, name,\r\n\t\t\ttargetEl, toEl, fromEl,\r\n\t\t\tstartIndex, newIndex,\r\n\t\t\tstartDraggableIndex, newDraggableIndex,\r\n\t\t\toriginalEvt\r\n\t\t) {\r\n\t\t\tsortable = (sortable || rootEl[expando]);\r\n\t\t\tvar evt,\r\n\t\t\t\toptions = sortable.options,\r\n\t\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1),\r\n\t\t\t\tputSortable = this.putSortable;\r\n\r\n\t\t\tevt = eventer.create(name,{\r\n\t\t\t\tto : toEl || rootEl,\r\n\t\t\t\tfrom : fromEl || rootEl,\r\n\t\t\t\titem : targetEl || rootEl,\r\n\t\t\t\tclone : this.cloneEl,\r\n\t\t\t\toldIndex : startIndex,\r\n\t\t\t\tnewIndex : newIndex,\r\n\t\t\t\toldDraggableIndex : startDraggableIndex,\r\n\t\t\t\tnewDraggableIndex : newDraggableIndex,\r\n\t\t\t\toriginalEvent : originalEvt,\r\n\t\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\r\n\t\t\t});\r\n\t\t\tif (rootEl) {\r\n\t\t\t\trootEl.dispatchEvent(evt);\r\n\t\t\t}\r\n\r\n\t\t\tif (options[onName]) {\r\n\t\t\t\toptions[onName].call(sortable, evt);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t};\r\n\r\n\r\n\treturn dnd;\r\n\t\r\n});\ndefine('skylark-sortable/autoscroll',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"./dnd\"\r\n],function(\r\n\tlangx,\r\n\tisBrowser,\r\n\tgeom,\r\n\tstyler,\r\n\tscrollingElement,\r\n\tdnd\r\n){\r\n\tvar autoScrolls = [],\r\n\t\tscrolling = false,\r\n\t\tscrollParentEl = null;\r\n\r\n\tvar\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari;\r\n\r\n\r\n\t/**\r\n\t * Checks if a side of an element is scrolled past a side of it's parents\r\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\r\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\r\n\t * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n\t */\r\n\tfunction _isScrolledPast(el, side) {\r\n\t\tvar parent = _getParentAutoScrollElement(el, true),\r\n\t\t\telSide = geom.boundingRect(el)[side];\r\n\r\n\t\t/* jshint boss:true */\r\n\t\twhile (parent) {\r\n\t\t\tvar parentSide = geom.boundingRect(parent)[side],\r\n\t\t\t\tvisible;\r\n\r\n\t\t\tif (side === 'top' || side === 'left') {\r\n\t\t\t\tvisible = elSide >= parentSide;\r\n\t\t\t} else {\r\n\t\t\t\tvisible = elSide <= parentSide;\r\n\t\t\t}\r\n\r\n\t\t\tif (!visible) return parent;\r\n\r\n\t\t\tif (parent === scrollingElement()) break;\r\n\r\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n\t * The value is returned in real pixels.\r\n\t * @param  {HTMLElement} el\r\n\t * @return {Array}             Offsets in the format of [left, top]\r\n\t */\r\n\tfunction _getRelativeScrollOffset(el) {\r\n\t\tvar offsetLeft = 0,\r\n\t\t\toffsetTop = 0,\r\n\t\t\twinScroller = scrollingElement();\r\n\r\n\t\tif (el) {\r\n\t\t\tdo {\r\n\t\t\t\tvar matrix = transforms.matrix(el),\r\n\t\t\t\t\tscaleX = matrix.a,\r\n\t\t\t\t\tscaleY = matrix.d;\r\n\r\n\t\t\t\toffsetLeft += el.scrollLeft * scaleX;\r\n\t\t\t\toffsetTop += el.scrollTop * scaleY;\r\n\t\t\t} while (el !== winScroller && (el = el.parentNode));\r\n\t\t}\r\n\r\n\t\treturn [offsetLeft, offsetTop];\r\n\t}\r\n\r\n\tvar _getParentAutoScrollElement = function(el, includeSelf) {\r\n\t\t// skip to window\r\n\t\tif (!el || !el.getBoundingClientRect) return scrollingElement();\r\n\r\n\t\tvar elem = el;\r\n\t\tvar gotSelf = false;\r\n\t\tdo {\r\n\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\r\n\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\r\n\t\t\t\tvar elemCSS = styler.css(elem);\r\n\t\t\t\tif (\r\n\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\r\n\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return scrollingElement();\r\n\r\n\t\t\t\t\tif (gotSelf || includeSelf) return elem;\r\n\t\t\t\t\tgotSelf = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t/* jshint boss:true */\r\n\t\t} while (elem = elem.parentNode);\r\n\r\n\t\treturn scrollingElement();\r\n\t},\r\n\r\n\r\n\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {\r\n\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\r\n\t\tif (options.scroll) {\r\n\t\t\tvar _this = rootEl ? rootEl[dnd.expando] : window,\r\n\t\t\t\tsens = options.scrollSensitivity,\r\n\t\t\t\tspeed = options.scrollSpeed,\r\n\r\n\t\t\t\tx = evt.clientX,\r\n\t\t\t\ty = evt.clientY,\r\n\r\n\t\t\t\twinScroller = scrollingElement(),\r\n\r\n\t\t\t\tscrollThisInstance = false;\r\n\r\n\t\t\t// Detect scrollEl\r\n\t\t\tif (scrollParentEl !== rootEl) {\r\n\t\t\t\t_clearAutoScrolls();\r\n\r\n\t\t\t\tscrollEl = options.scroll;\r\n\t\t\t\tscrollCustomFn = options.scrollFn;\r\n\r\n\t\t\t\tif (scrollEl === true) {\r\n\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\r\n\t\t\t\t\tscrollParentEl = scrollEl;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar layersOut = 0;\r\n\t\t\tvar currentParent = scrollEl;\r\n\t\t\tdo {\r\n\t\t\t\tvar\tel = currentParent,\r\n\t\t\t\t\trect = geom.boundingRect(el),\r\n\r\n\t\t\t\t\ttop = rect.top,\r\n\t\t\t\t\tbottom = rect.bottom,\r\n\t\t\t\t\tleft = rect.left,\r\n\t\t\t\t\tright = rect.right,\r\n\r\n\t\t\t\t\twidth = rect.width,\r\n\t\t\t\t\theight = rect.height,\r\n\r\n\t\t\t\t\tscrollWidth,\r\n\t\t\t\t\tscrollHeight,\r\n\r\n\t\t\t\t\tcss,\r\n\r\n\t\t\t\t\tvx,\r\n\t\t\t\t\tvy,\r\n\r\n\t\t\t\t\tcanScrollX,\r\n\t\t\t\t\tcanScrollY,\r\n\r\n\t\t\t\t\tscrollPosX,\r\n\t\t\t\t\tscrollPosY;\r\n\r\n\r\n\t\t\t\tscrollWidth = el.scrollWidth;\r\n\t\t\t\tscrollHeight = el.scrollHeight;\r\n\r\n\t\t\t\tcss = styler.css(el);\r\n\r\n\t\t\t\tscrollPosX = el.scrollLeft;\r\n\t\t\t\tscrollPosY = el.scrollTop;\r\n\r\n\t\t\t\tif (el === winScroller) {\r\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\r\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\r\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);\r\n\r\n\t\t\t\tvy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);\r\n\r\n\r\n\t\t\t\tif (!autoScrolls[layersOut]) {\r\n\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\r\n\t\t\t\t\t\tif (!autoScrolls[i]) {\r\n\t\t\t\t\t\t\tautoScrolls[i] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\r\n\t\t\t\t\tautoScrolls[layersOut].el = el;\r\n\t\t\t\t\tautoScrolls[layersOut].vx = vx;\r\n\t\t\t\t\tautoScrolls[layersOut].vy = vy;\r\n\r\n\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\r\n\r\n\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\r\n\t\t\t\t\t\tscrollThisInstance = true;\r\n\t\t\t\t\t\t/* jshint loopfunc:true */\r\n\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\r\n\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\r\n\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\r\n\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\r\n\t\t\t\t\t\t\t\tSortable.active._onTouchMove(touchEvt, true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\r\n\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\r\n\r\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\r\n\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeom.scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\r\n\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlayersOut++;\r\n\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = _getParentAutoScrollElement(currentParent, false)));\r\n\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\r\n\t\t}\r\n\t}, 30),\r\n\r\n\t_clearAutoScrolls = function () {\r\n\t\tautoScrolls.forEach(function(autoScroll) {\r\n\t\t\tclearInterval(autoScroll.pid);\r\n\t\t});\r\n\t\tautoScrolls = [];\r\n\t},\r\n\r\n\t_handleAutoScroll = function(evt, options,fallback) {\r\n\t\tvar x = evt.clientX,\r\n\t\t\ty = evt.clientY,\r\n\r\n\t\t\telem = document.elementFromPoint(x, y);\r\n\r\n\t\t// IE does not seem to have native autoscroll,\r\n\t\t// Edge's autoscroll seems too conditional,\r\n\t\t// MACOS Safari does not have autoscroll,\r\n\t\t// Firefox and Chrome are good\r\n\t\tif (fallback || Edge || IE11OrLess || Safari) {\r\n\t\t\t_throttleTimeout = _autoScroll(evt, options, elem, fallback);\r\n\r\n\t\t\t// Listener for pointer element change\r\n\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\r\n\t\t\tif (\r\n\t\t\t\tscrolling &&\r\n\t\t\t\t(\r\n\t\t\t\t\t!pointerElemChangedInterval ||\r\n\t\t\t\t\tx !== lastPointerElemX ||\r\n\t\t\t\t\ty !== lastPointerElemY\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\r\n\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\r\n\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\r\n\t\t\t\tpointerElemChangedInterval = setInterval(function() {\r\n\t\t\t\t\tif (!dragEl) return;\r\n\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\r\n\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\r\n\t\t\t\t\tif (newElem !== ogElemScroller) {\r\n\t\t\t\t\t\togElemScroller = newElem;\r\n\t\t\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\t\t\t_throttleTimeout = _autoScroll(evt, options, ogElemScroller, fallback);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 10);\r\n\t\t\t\tlastPointerElemX = x;\r\n\t\t\t\tlastPointerElemY = y;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\r\n\t\t\tif (!options.bubbleScroll || _getParentAutoScrollElement(elem, true) === scrollingElement()) {\r\n\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t_throttleTimeout = _autoScroll(evt, options, _getParentAutoScrollElement(elem, false), false);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tvar _throttleTimeout;\r\n\tfunction _throttle(callback, ms) {\r\n\t\treturn langx.debounce(callback,ms);\r\n\t}\r\n\r\n\tfunction _cancelThrottle() {\r\n\t\t//clearTimeout(_throttleTimeout);\r\n\t\t//_throttleTimeout = void 0;\r\n\t\tif (_throttleTimeout && _throttleTimeout.stop) {\r\n\t\t\t_throttleTimeout.stop();\r\n\t\t\t_throttleTimeout = void 0;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\treturn {\r\n\t\tautoScrolls,\r\n\t\t\r\n\t\t_isScrolledPast,\r\n\t\t_getRelativeScrollOffset,\r\n\t\t_autoScroll,\r\n\r\n\t\t_clearAutoScrolls,\r\n\t\t_handleAutoScroll,\r\n\r\n\t\t_throttle,\r\n\t\t_cancelThrottle\r\n\t}\r\n});\ndefine('skylark-sortable/containers',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./dnd\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll,\r\n\tdnd\r\n){\r\n\tvar\r\n\t\t/**\r\n\t\t * Returns the index of an element within its parent for a selected set of\r\n\t\t * elements\r\n\t\t * @param  {HTMLElement} el\r\n\t\t * @param  {selector} selector\r\n\t\t * @return {number}\r\n\t\t */\r\n\t\t_index = function (el, selector) {\r\n\t\t\treturn finder.index(el,function(el){\r\n\t\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== dnd.cloneEl && (!selector || finder.matches(el, selector))) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn false;\t\t\t\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\r\n\t\t\tvar targetRect = geom.boundingRect(el),\r\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\r\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\r\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\r\n\r\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\r\n\t\t},\r\n\r\n\t\t_isElInRowColumn = function(el1, el2, axis) {\r\n\t\t\tvar dragEl = dnd.dragEl;\r\n\r\n\t\t\tvar el1Rect = geom.boundingRect(el1),//el1 === dragEl && realDragElRect || geom.boundingRect(el1),\r\n\t\t\t\tel2Rect = geom.boundingRect(el2),//el2 === dragEl && realDragElRect || geom.boundingRect(el2),\r\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\r\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\r\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\r\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\r\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\r\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\r\n\r\n\t\t\treturn (\r\n\t\t\t\tel1S1Opp === el2S1Opp ||\r\n\t\t\t\tel1S2Opp === el2S2Opp ||\r\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\r\n\t\t\t);\r\n\t\t};\r\n\r\n\r\n\treturn {\r\n\t\t_index,\r\n\t\t_isElInRowColumn,\r\n\t\t_isClientInRowColumn\r\n\t}\r\n\t\r\n});\ndefine('skylark-sortable/Sortable',[\r\n\t\"skylark-langx/skylark\",\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-langx-hoster/isMobile\",\r\n\t\"skylark-domx-query\",\r\n\t\"skylark-domx-browser\",\r\n\t\"skylark-domx-noder\",\r\n\t\"skylark-domx-finder\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-eventer\",\r\n\t\"skylark-domx-transforms\",\r\n\t\"skylark-domx-scrolls/scrollingElement\",\r\n\t\"skylark-domx-layouts/oriented\",\r\n\t\"skylark-devices-points/touch\",\r\n\t\"./autoscroll\",\r\n\t\"./containers\",\r\n\t\"./dnd\"\r\n],function(\r\n\tskylark,\r\n\tlangx,\r\n\tisBrowser,\r\n\tisMobile,\r\n\t$,\r\n\tbrowser,\r\n\tnoder,\r\n\tfinder,\r\n\tgeom,\r\n\tstyler,\r\n\teventer,\r\n\ttransforms,\r\n\tscrollingElement,\r\n\toriented,\r\n\ttouch,\r\n\tautoscroll,\r\n\tcontainers,\r\n\tdnd\r\n){\r\n\tfunction log(category,message) {\r\n\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\r\n\t}\t\r\n\r\n\r\n\tvar \r\n\t\tparentEl,\r\n\t\t//ghostEl,\r\n\t\t//cloneEl,\r\n\t\trootEl,\r\n\t\tnextEl,\r\n\t\tlastDownEl,\r\n\r\n\t\tscrollEl,\r\n\t\t//scrollParentEl,\r\n\t\tscrollCustomFn,\r\n\r\n\t\toldIndex,\r\n\t\tnewIndex,\r\n\t\toldDraggableIndex,\r\n\t\tnewDraggableIndex,\r\n\r\n\t\tactiveGroup,\r\n\t\t//putSortable,\r\n\r\n\t\tawaitingDragStarted = false,\r\n\t\tignoreNextClick = false,\r\n\t\t//sortables = [],\r\n\r\n\t\tpointerElemChangedInterval,\r\n\t\tlastPointerElemX,\r\n\t\tlastPointerElemY,\r\n\r\n\t\ttapEvt,\r\n\t\t//touchEvt,\r\n\r\n\t\tmoved,\r\n\r\n\r\n\t\tlastTarget,\r\n\t\tlastDirection,\r\n\t\tpastFirstInvertThresh = false,\r\n\t\tisCircumstantialInvert = false,\r\n\t\tlastMode, // 'swap' or 'insert'\r\n\r\n\t\ttargetMoveDistance,\r\n\r\n\t\t// For positioning ghost absolutely\r\n\t\tghostRelativeParent,\r\n\t\tghostRelativeParentInitialScroll = [], // (left, top)\r\n\r\n\t\trealDragElRect, // dragEl rect after current animation\r\n\r\n\t\t/** @const */\r\n\t\tR_SPACE = /\\s+/g,\r\n\r\n\t\twin = window,\r\n\t\tdocument = win.document,\r\n\t\tparseInt = win.parseInt,\r\n\t\tsetTimeout = win.setTimeout,\r\n\r\n\t\tPolymer = win.Polymer,\r\n\r\n\t\tcaptureMode = {\r\n\t\t\tcapture: false,\r\n\t\t\tpassive: false\r\n\t\t},\r\n\r\n\t\t/*\r\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\r\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\r\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\r\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\r\n\r\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\r\n\t\t*/\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari,\r\n\r\n\t\tIOS = isMobile && isMobile.apple.device,\r\n\t\tPositionGhostAbsolutely = isMobile.apple.device, //IOS\r\n\r\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\r\n\r\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\r\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\r\n\r\n\t\t/*\r\n\t\tsupportCssPointerEvents = (function() {\r\n\t\t\t// false when <= IE11\r\n\t\t\tif (IE11OrLess) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar el = document.createElement('x');\r\n\t\t\tel.style.cssText = 'pointer-events:auto';\r\n\t\t\treturn el.style.pointerEvents === 'auto';\r\n\t\t})(),\r\n\t\t*/\r\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents;\r\n\r\n\t\t_silent = false,\r\n\t\t_alignedSilent = false,\r\n\r\n\t\tabs = Math.abs,\r\n\t\tmin = Math.min,\r\n\t\tmax = Math.max,\r\n\r\n\t\tsavedInputChecked = [],\r\n\r\n\r\n\t\t_prepareGroup = function (options) {\r\n\t\t\tfunction toFn(value, pull) {\r\n\t\t\t\treturn function(to, from, dragEl, evt) {\r\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\r\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\r\n\r\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\r\n\t\t\t\t\t\t// Default pull value\r\n\t\t\t\t\t\t// Default pull and put value if same group\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t} else if (value == null || value === false) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else if (pull && value === 'clone') {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t} else if (typeof value === 'function') {\r\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\r\n\r\n\t\t\t\t\t\treturn (value === true ||\r\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\r\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar group = {};\r\n\t\t\tvar originalGroup = options.group;\r\n\r\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\r\n\t\t\t\toriginalGroup = {name: originalGroup};\r\n\t\t\t}\r\n\r\n\t\t\tgroup.name = originalGroup.name;\r\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\r\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\r\n\t\t\tgroup.revertClone = originalGroup.revertClone;\r\n\r\n\t\t\toptions.group = group;\r\n\t\t},\r\n\r\n\r\n\t\t//_hideGhostForTarget = function() {\r\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t//\t\tstyler.css(ghostEl, 'display', 'none');\r\n\t\t//\t}\r\n\t\t//},\r\n\r\n\t\t//_unhideGhostForTarget = function() {\r\n\t\t//\tif (!supportCssPointerEvents && ghostEl) {\r\n\t\t//\t\tstyler.css(ghostEl, 'display', '');\r\n\t\t//\t}\r\n\t\t//};\r\n\r\n\r\n\r\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\r\n\tdocument.addEventListener('click', function(evt) {\r\n\t\tif (ignoreNextClick) {\r\n\t\t\tevt.preventDefault();\r\n\t\t\tevt.stopPropagation && evt.stopPropagation();\r\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\r\n\t\t\tignoreNextClick = false;\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}, true);\r\n\r\n\r\n\tfunction _find(ctx, tagName, iterator) {\r\n\t\tif (ctx) {\r\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\r\n\r\n\t\t\tif (iterator) {\r\n\t\t\t\tfor (; i < n; i++) {\r\n\t\t\t\t\titerator(list[i], i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn list;\r\n\t\t}\r\n\r\n\t\treturn [];\r\n\t}\r\n\r\n\t/**\r\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n\t * @param  {HTMLElement} el       Parent element\r\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\r\n\t */\r\n\tfunction _lastChild(el) {\r\n\t\t/*\r\n\t\tvar last = el.lastElementChild;\r\n\r\n\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\r\n\t\t\tlast = last.previousElementSibling;\r\n\t\t}\r\n\r\n\t\treturn last || null;\r\n\t\t*/\r\n\t\treturn finder.lastChild(el,{\r\n\t\t\tignoreHidden : true,\r\n\t\t\texcluding : [dnd.ghostEl]\r\n\t\t})\r\n\t}\r\n\r\n\tfunction _ghostIsLast(evt, axis, el) {\r\n\t\tvar elRect = geom.boundingRect(_lastChild(el)),\r\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\r\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\r\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\r\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\r\n\t\t\tspacer = 10;\r\n\r\n\t\treturn (\r\n\t\t\taxis === 'vertical' ?\r\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\r\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\r\n\t\t);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Generate id\r\n\t * @param   {HTMLElement} el\r\n\t * @returns {String}\r\n\t * @private\r\n\t */\r\n\tfunction _generateId(el) {\r\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n\t\t\ti = str.length,\r\n\t\t\tsum = 0;\r\n\r\n\t\twhile (i--) {\r\n\t\t\tsum += str.charCodeAt(i);\r\n\t\t}\r\n\r\n\t\treturn sum.toString(36);\r\n\t}\r\n\r\n\r\n\tfunction _saveInputCheckedState(root) {\r\n\t\tsavedInputChecked.length = 0;\r\n\r\n\t\tvar inputs = root.getElementsByTagName('input');\r\n\t\tvar idx = inputs.length;\r\n\r\n\t\twhile (idx--) {\r\n\t\t\tvar el = inputs[idx];\r\n\t\t\tel.checked && savedInputChecked.push(el);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _nextTick(fn) {\r\n\t\t//return setTimeout(fn, 0);\r\n\t\treturn langx.defer(fn);\r\n\t}\r\n\r\n\tfunction _cancelNextTick(id) {\r\n\t\t//return clearTimeout(id);\r\n\t\treturn id && id.stop();\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Returns the \"bounding client rect\" of given element\r\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\r\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\r\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\r\n\t * @return {Object}                        The boundingClientRect of el\r\n\t */\r\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\r\n\t\tif (!el.getBoundingClientRect && el !== win) return;\r\n\t\tvar {\r\n\t\t\ttop,\r\n\t\t\tleft,\r\n\t\t\tbottom,\r\n\t\t\tright,\r\n\t\t\twidth,\r\n\t\t\theight\r\n\t\t} = geom.boundingRect(el);\r\n\t\t\r\n\t\tif (adjustForTransform && el !== win) {\r\n\t\t\t// Adjust for scale()\r\n\t\t\tvar matrix = transforms.matrix(container || el),\r\n\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\tif (matrix) {\r\n\t\t\t\ttop /= scaleY;\r\n\t\t\t\tleft /= scaleX;\r\n\r\n\t\t\t\twidth /= scaleX;\r\n\t\t\t\theight /= scaleY;\r\n\r\n\t\t\t\tbottom = top + height;\r\n\t\t\t\tright = left + width;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\ttop: top,\r\n\t\t\tleft: left,\r\n\t\t\tbottom: bottom,\r\n\t\t\tright: right,\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\t}\r\n\r\n\r\n\r\n\t// Fixed #973:\r\n\teventer.on(document, 'touchmove', function(evt) {\r\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\r\n\t\t\tevt.preventDefault();\r\n\t\t}\r\n\t});\r\n\r\n\r\n\t/**\r\n\t * @class  Sortable\r\n\t * @param  {HTMLElement}  el\r\n\t * @param  {Object}       [options]\r\n\t */\r\n\tfunction Sortable(el, options) {\r\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\r\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\r\n\t\t}\r\n\r\n\t\tthis.el = el; // root element\r\n\t\tthis.options = options = langx.mixin({}, options);\r\n\r\n\r\n\t\t// Export instance\r\n\t\tel[dnd.expando] = this;\r\n\r\n\t\t// Default options\r\n\t\tvar defaults = {\r\n\t\t\tgroup: null,\r\n\t\t\tsort: true,\r\n\t\t\tdisabled: false,\r\n\t\t\tstore: null,\r\n\t\t\thandle: null,\r\n\t\t\tscroll: true,\r\n\t\t\tscrollSensitivity: 30,\r\n\t\t\tscrollSpeed: 10,\r\n\t\t\tbubbleScroll: true,\r\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\r\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\r\n\t\t\tinvertSwap: false, // invert always\r\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\r\n\t\t\tremoveCloneOnHide: true,\r\n\t\t\tdirection: function(evt, target, dragEl,ghostEl) {\r\n\t\t\t\treturn oriented(el, langx.mixin({\r\n\t\t\t\t\t\t\t\t\texcluding : [ghostEl,dragEl]\r\n\t\t\t\t\t\t\t\t},this.options));\r\n\t\t\t},\r\n\t\t\tghostClass: 'sortable-ghost',\r\n\t\t\tchosenClass: 'sortable-chosen',\r\n\t\t\tdragClass: 'sortable-drag',\r\n\t\t\tignore: 'a, img',\r\n\t\t\tfilter: null,\r\n\t\t\tpreventOnFilter: true,\r\n\t\t\tanimation: 0,\r\n\t\t\teasing: null,\r\n\t\t\tsetData: function (dataTransfer, dragEl) {\r\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\r\n\t\t\t},\r\n\t\t\tdropBubble: false,\r\n\t\t\tdragoverBubble: false,\r\n\t\t\tdataIdAttr: 'data-id',\r\n\t\t\tdelay: 0,\r\n\t\t\tdelayOnTouchOnly: false,\r\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\r\n\t\t\tforceFallback: false,\r\n\t\t\tfallbackClass: 'sortable-fallback',\r\n\t\t\tfallbackOnBody: false,\r\n\t\t\tfallbackTolerance: 0,\r\n\t\t\tfallbackOffset: {x: 0, y: 0},\r\n\t\t\tsupportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\r\n\t\t\temptyInsertThreshold: 5\r\n\t\t};\r\n\r\n\r\n\t\t// Set default options\r\n\t\tfor (var name in defaults) {\r\n\t\t\t!(name in options) && (options[name] = defaults[name]);\r\n\t\t}\r\n\r\n\t\t_prepareGroup(options);\r\n\r\n\t\t// Bind all private methods\r\n\t\tfor (var fn in this) {\r\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n\t\t\t\tthis[fn] = this[fn].bind(this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Setup drag mode\r\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\r\n\t\t\tthis.options.touchStartThreshold = 1;\r\n\t\t}\r\n\r\n\t\t// Bind events\r\n\t\ttouch.mousy(el);\r\n\r\n\t\teventer.on(el, 'mousedown', this._onTapStart);\r\n\r\n\t\tif (this.nativeDraggable) {\r\n\t\t\teventer.on(el, 'dragover', this);\r\n\t\t\teventer.on(el, 'dragenter', this);\r\n\t\t}\r\n\r\n\t\tdnd.sortables.push(this.el);\r\n\r\n\t\t// Restore sorting\r\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\r\n\t}\r\n\r\n\tSortable.prototype = /** @lends Sortable.prototype */ {\r\n\t\tconstructor: Sortable,\r\n\r\n\t\t_computeIsAligned: function(evt) {\r\n\t\t\tvar target,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\t//if (ghostEl && !supportCssPointerEvents) {\r\n\t\t\t//\t_hideGhostForTarget();\r\n\t\t\t//\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\r\n\t\t\t//\t_unhideGhostForTarget();\r\n\t\t\t//} else {\r\n\t\t\t\ttarget = evt.target;\r\n\t\t\t//}\r\n\r\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\r\n\t\t\tif (_alignedSilent) return;\r\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\r\n\r\n\t\t\tvar children = this.el.children;\r\n\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\r\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\r\n\t\t\t\t\tchildren[i].sortableMouseAligned = containers._isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\r\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\r\n\t\t\t\tlastTarget = null;\r\n\t\t\t}\r\n\r\n\t\t\t_alignedSilent = true;\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t_alignedSilent = false;\r\n\t\t\t}, 30);\r\n\r\n\t\t},\r\n\r\n\t\t_getDirection: function(evt, target) {\r\n\t\t\tvar  dragEl = dnd.dragEl;\r\n\r\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl,dnd.ghostEl) : this.options.direction;\r\n\t\t},\r\n\r\n\r\n\t\t// handle moudedown event\r\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\r\n\t\t\t//if (!evt.cancelable) return;\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\r\n\t\t\t\ttype = evt.type,\r\n\t\t\t\ttouch = evt.touches && evt.touches[0],\r\n\t\t\t\ttarget = (touch || evt).target,\r\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\r\n\t\t\t\tfilter = options.filter,\r\n\t\t\t\tstartIndex,\r\n\t\t\t\tstartDraggableIndex;\r\n\r\n\t\t\t_saveInputCheckedState(el);\r\n\r\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\r\n\t\t\tif (dnd.dragEl) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\r\n\t\t\t\treturn; // only left button and enabled\r\n\t\t\t}\r\n\r\n\t\t\t// cancel dnd if original target is content editable\r\n\t\t\tif (originalTarget.isContentEditable) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, false);\r\n\r\n\r\n\t\t\tif (lastDownEl === target) {\r\n\t\t\t\t// Ignoring duplicate `down`\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlog(\"_onTapStart\",target.tagName+\",\"+target.className);\r\n\r\n\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\tstartIndex = containers._index(target);\r\n\t\t\tstartDraggableIndex = containers._index(target, options.draggable);\r\n\r\n\t\t\t// Check filter\r\n\t\t\tif (typeof filter === 'function') {\r\n\t\t\t\tif (filter.call(this, evt, target, this)) {\r\n\t\t\t\t\tdnd._dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (filter) {\r\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\r\n\t\t\t\t\tcriteria = finder.closest(originalTarget, criteria.trim(), el, false);\r\n\r\n\t\t\t\t\tif (criteria) {\r\n\t\t\t\t\t\tdnd._dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (filter) {\r\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\r\n\t\t\t\t\treturn; // cancel dnd\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// Prepare `dragstart`\r\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\r\n\t\t},\r\n\r\n\r\n\t\t_handleAutoScroll: function(evt, fallback) {\r\n\r\n\t\t\tif (!dnd.dragEl || !this.options.scroll) return;\r\n\r\n\t\t\treturn autoscroll._handleAutoScroll(evt,this.options,fallback);\r\n\t\t},\r\n\r\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tel = _this.el,\r\n\t\t\t\toptions = _this.options,\r\n\t\t\t\townerDocument = el.ownerDocument,\r\n\t\t\t\tdragStartFn,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\t\t\tlog(\"_prepareDragStart\",\"start\");\r\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\r\n\t\t\t\trootEl = el;\r\n\t\t\t\tdragEl = dnd.dragEl = target;\r\n\t\t\t\tparentEl = dragEl.parentNode;\r\n\t\t\t\tnextEl = dragEl.nextSibling;\r\n\t\t\t\tlastDownEl = target;\r\n\t\t\t\tactiveGroup = options.group;\r\n\t\t\t\toldIndex = startIndex;\r\n\t\t\t\toldDraggableIndex = startDraggableIndex;\r\n\r\n\t\t\t\ttapEvt = {\r\n\t\t\t\t\ttarget: dragEl,\r\n\t\t\t\t\tclientX: (touch || evt).clientX,\r\n\t\t\t\t\tclientY: (touch || evt).clientY\r\n\t\t\t\t};\r\n\r\n\t\t\t\tthis._lastX = (touch || evt).clientX;\r\n\t\t\t\tthis._lastY = (touch || evt).clientY;\r\n\r\n\t\t\t\tdragEl.style['will-change'] = 'all';\r\n\t\t\t\t// undo animation if needed\r\n\t\t\t\tdragEl.style.transition = '';\r\n\t\t\t\tdragEl.style.transform = '';\r\n\r\n\t\t\t\tdragStartFn = function () {\r\n\t\t\t\t\t// Delayed drag has been triggered\r\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\r\n\t\t\t\t\t_this._disableDelayedDragEvents();\r\n\r\n\t\t\t\t\tif (!FireFox && _this.nativeDraggable) {\r\n\t\t\t\t\t\tdragEl.draggable = true;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Bind the events: dragstart/dragend\r\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\r\n\r\n\t\t\t\t\t// Drag start event\r\n\t\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\r\n\r\n\t\t\t\t\t// Chosen item\r\n\t\t\t\t\tstyler.toggleClass(dragEl, options.chosenClass, true);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// Disable \"draggable\"\r\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\r\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tdnd.prepare(this);\r\n\r\n\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._onDrop);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchend', _this._onDrop);\r\n\t\t\t\t///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\r\n\r\n\t\t\t\t// Make dragEl draggable (must be before delay for FireFox)\r\n\t\t\t\tif (FireFox && this.nativeDraggable) {\r\n\t\t\t\t\tthis.options.touchStartThreshold = 4;\r\n\t\t\t\t\tdragEl.draggable = true;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Delay is impossible for native DnD in Edge or IE\r\n\t\t\t\tif (options.delay && (options.delayOnTouchOnly ? touch : true) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\r\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\r\n\t\t\t\t\t// before the delay has been reached:\r\n\t\t\t\t\t// disable the delayed drag\r\n\t\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchend', _this._disableDelayedDrag);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\r\n\t\t\t\t\teventer.on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\r\n\t\t\t\t\t//options.supportPointer && eventer.on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\r\n\r\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdragStartFn();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\r\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\r\n\t\t\tif (max(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\r\n\t\t\t\t\t>= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))\r\n\t\t\t) {\r\n\t\t\t\tthis._disableDelayedDrag();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_disableDelayedDrag: function () {\r\n\t\t\tdnd.dragEl && _disableDraggable(dnd.dragEl);\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\tthis._disableDelayedDragEvents();\r\n\t\t},\r\n\r\n\t\t_disableDelayedDragEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._disableDelayedDrag);\r\n\t\t\teventer.off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\r\n\t\t},\r\n\r\n\t\t//native dnd mode : register _OnDragStart for dragstart event handler \r\n\t\t//moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\r\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\r\n\t\t\tlog(\"_triggerDragStart\",\"start\");\r\n\t\t\tlog(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\r\n\t\t\tif (!this.nativeDraggable) {\r\n\t\t\t\teventer.on(document, 'mousemove', this._onTouchMove);\r\n\t\t\t} else {\r\n\t\t\t\teventer.on(dnd.dragEl, 'dragend', this);\r\n\t\t\t\teventer.on(rootEl, 'dragstart', this._onDragStart);\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\t\t\t\tif (document.selection) {\r\n\t\t\t\t\t// Timeout neccessary for IE9\r\n\t\t\t\t\t_nextTick(function () {\r\n\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\twindow.getSelection().removeAllRanges();\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t//\r\n\t\t//\r\n\t\t_dragStarted: function (fallback, evt) {\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tvar dragEl = dnd.dragEl;\r\n\r\n\t\t\tif (rootEl && dragEl) {\r\n\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\teventer.on(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\t\teventer.on(document, 'dragover', dnd._checkAlignment);\r\n\t\t\t\t}\r\n\t\t\t\tvar options = this.options;\r\n\r\n\t\t\t\t// Apply effect\r\n\t\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, false);\r\n\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\r\n\t\t\t\t// In case dragging an animated element\r\n\t\t\t\tstyler.css(dragEl, 'transform', '');\r\n\r\n\t\t\t\tdnd.active = this;\r\n\r\n\t\t\t\tfallback && this._appendGhost();\r\n\r\n\t\t\t\t// Drag start event\r\n\t\t\t\tdnd._dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\r\n\t\t\t} else {\r\n\t\t\t\tthis._nulling();\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t_onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\r\n\t\t\tlog(\"_onTouchMove\",\"start\");\r\n\t\t\tvar ghostEl = dnd.ghostEl;\r\n\t\t\tif (tapEvt) {\r\n\t\t\t\tvar\toptions = this.options,\r\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\r\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\r\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\r\n\t\t\t\t\tmatrix = ghostEl && transforms.matrix(ghostEl),\r\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\r\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\r\n\t\t\t\t\trelativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && autoscroll._getRelativeScrollOffset(ghostRelativeParent),\r\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX)\r\n\t\t\t\t\t\t\t+ fallbackOffset.x) / (scaleX || 1)\r\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\r\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY)\r\n\t\t\t\t\t\t\t+ fallbackOffset.y) / (scaleY || 1)\r\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\r\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\r\n\r\n\t\t\t\t// only set the status to dragging, when we are actually dragging\r\n\t\t\t\tif (!dnd.active && !awaitingDragStarted) {\r\n\t\t\t\t\tif (fallbackTolerance &&\r\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._onDragStart(evt, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!forAutoScroll && this._handleAutoScroll(touch, true);\r\n\r\n\t\t\t\tmoved = true;\r\n\t\t\t\tdnd.touchEvt = touch;\r\n\r\n\t\t\t\tif (ghostEl) {\r\n\t\t\t\t\tstyler.css(ghostEl, 'webkitTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'mozTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'msTransform', translate3d);\r\n\t\t\t\t\tstyler.css(ghostEl, 'transform', translate3d);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//evt.cancelable && evt.preventDefault();\r\n\t\t\t\tevt.preventDefault()\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_appendGhost: function () {\r\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\r\n\t\t\t// Not being adjusted for\r\n\t\t\tvar  dragEl = dnd.dragEl,\r\n\t\t\t\tghostEl = dnd.ghostEl;\r\n\r\n\t\t\tif (!ghostEl) {\r\n\t\t\t\tvar container = this.options.fallbackOnBody ? document.body : rootEl,\r\n\t\t\t\t\trect = _getRect(dragEl, true, container, !PositionGhostAbsolutely),\r\n\t\t\t\t\tcss = styler.css(dragEl),\r\n\t\t\t\t\toptions = this.options;\r\n\r\n\t\t\t\t// Position absolutely\r\n\t\t\t\tif (PositionGhostAbsolutely) {\r\n\t\t\t\t\t// Get relatively positioned parent\r\n\t\t\t\t\tghostRelativeParent = container;\r\n\r\n\t\t\t\t\twhile (\r\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'position') === 'static' &&\r\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'transform') === 'none' &&\r\n\t\t\t\t\t\tghostRelativeParent !== document\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ghostRelativeParent !== document) {\r\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\r\n\r\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\r\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\r\n\t\t\t\t\t\tif (ghostRelativeParent === document) ghostRelativeParent = scrollingElement();\r\n\r\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\r\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tghostRelativeParent = scrollingElement();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tghostRelativeParentInitialScroll = autoscroll._getRelativeScrollOffset(ghostRelativeParent);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tghostEl =dnd.ghostEl = dragEl.cloneNode(true);\r\n\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.ghostClass, false);\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.fallbackClass, true);\r\n\t\t\t\tstyler.toggleClass(ghostEl, options.dragClass, true);\r\n\r\n\t\t\t\tstyler.css(ghostEl, 'box-sizing', 'border-box');\r\n\t\t\t\tstyler.css(ghostEl, 'margin', 0);\r\n\t\t\t\tstyler.css(ghostEl, 'top', rect.top);\r\n\t\t\t\tstyler.css(ghostEl, 'left', rect.left);\r\n\t\t\t\tstyler.css(ghostEl, 'width', rect.width);\r\n\t\t\t\tstyler.css(ghostEl, 'height', rect.height);\r\n\t\t\t\tstyler.css(ghostEl, 'opacity', '0.8');\r\n\t\t\t\tstyler.css(ghostEl, 'position', (PositionGhostAbsolutely ? 'absolute' : 'fixed'));\r\n\t\t\t\tstyler.css(ghostEl, 'zIndex', '100000');\r\n\t\t\t\tstyler.css(ghostEl, 'pointerEvents', 'none');\r\n\r\n\t\t\t\tcontainer.appendChild(ghostEl);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t_animate: function (prevRect, target) {\r\n\t\t\tvar ms = this.options.animation,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\tif (ms) {\r\n\t\t\t\tvar currentRect = geom.boundingRect(target);\r\n\r\n\t\t\t\tif (target === dragEl) {\r\n\t\t\t\t\trealDragElRect = currentRect;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (prevRect.nodeType === 1) {\r\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if actually moving position\r\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\r\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\r\n\t\t\t\t) {\r\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\r\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\r\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\r\n\r\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\r\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\r\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tthis._repaint(target);\r\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\r\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\r\n\t\t\t\t}\r\n\r\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\r\n\t\t\t\ttarget.animated = setTimeout(function () {\r\n\t\t\t\t\tstyler.css(target, 'transition', '');\r\n\t\t\t\t\tstyler.css(target, 'transform', '');\r\n\t\t\t\t\ttarget.animated = false;\r\n\t\t\t\t}, ms);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_repaint: function(target) {\r\n\t\t\treturn target.offsetWidth;\r\n\t\t},\r\n\r\n\t\t_offMoveEvents: function() {\r\n\t\t\teventer.off(document, 'dragover', dnd.nearestEmptyInsertDetectEvent);\r\n\t\t\teventer.off(document, 'mousemove', dnd.nearestEmptyInsertDetectEvent);\r\n\t\t},\r\n\r\n\t\t_offUpEvents: function () {\r\n\t\t\tvar ownerDocument = this.el.ownerDocument;\r\n\r\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\r\n\t\t\teventer.off(document, 'selectstart', this);\r\n\t\t},\r\n\r\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\r\n\t\t\tvar _this = this,\r\n\t\t\t\tdragEl = dnd.dragEl;\r\n\r\n\t\t\tvar dataTransfer = evt.dataTransfer;\r\n\t\t\tvar options = _this.options;\r\n\r\n\t\t\t// Setup clone\r\n\t\t\tvar cloneEl = dnd.cloneEl = noder.clone(dragEl,true);\r\n\r\n\t\t\tcloneEl.draggable = false;\r\n\t\t\tcloneEl.style['will-change'] = '';\r\n\r\n\t\t\tthis._hideClone();\r\n\r\n\t\t\tstyler.toggleClass(cloneEl, _this.options.chosenClass, false);\r\n\r\n\r\n\t\t\t// #1143: IFrame support workaround\r\n\t\t\t_this._cloneId = _nextTick(function () {\r\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\r\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\r\n\t\t\t\t}\r\n\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'clone', dragEl);\r\n\t\t\t});\r\n\r\n\r\n\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, true);\r\n\r\n\t\t\t// Set proper drop events\r\n\t\t\tif (fallback) {\r\n\t\t\t\tignoreNextClick = true;\r\n\t\t\t\t_this._loopId = setInterval(dnd._emulateDragOver.bind(dnd), 50);\r\n\t\t\t} else {\r\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\r\n\t\t\t\teventer.off(document, 'mouseup', _this._onDrop);\r\n\t\t\t\t///eventer.off(document, 'touchend', _this._onDrop);\r\n\t\t\t\t///eventer.off(document, 'touchcancel', _this._onDrop);\r\n\r\n\t\t\t\tif (dataTransfer) {\r\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\r\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\teventer.on(document, 'drop', _this);\r\n\r\n\t\t\t\t// #1276 fix:\r\n\t\t\t\tstyler.css(dragEl, 'transform', 'translateZ(0)');\r\n\t\t\t}\r\n\r\n\t\t\tawaitingDragStarted = true;\r\n\r\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\r\n\t\t\teventer.on(document, 'selectstart', _this);\r\n\t\t\tif (Safari) {\r\n\t\t\t\tstyler.css(document.body, 'user-select', 'none');\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\r\n\t\t_onDragOver: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\ttarget = evt.target,\r\n\t\t\t\tdragRect,\r\n\t\t\t\ttargetRect,\r\n\t\t\t\trevert,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tgroup = options.group,\r\n\t\t\t\tactiveSortable = dnd.active,\r\n\t\t\t\tisOwner = (activeGroup === group),\r\n\t\t\t\tcanSort = options.sort,\r\n\t\t\t\t_this = this,\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\tputSortable = dnd.putSortable;\r\n\r\n\t\t\tif (_silent) return;\r\n\r\n\t\t\t// Return invocation when dragEl is inserted (or completed)\r\n\t\t\tfunction completed(insertion) {\r\n\t\t\t\tif (insertion) {\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(_this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (activeSortable) {\r\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\r\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (putSortable !== _this && _this !== dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable = _this;\r\n\t\t\t\t\t} else if (_this === dnd.active) {\r\n\t\t\t\t\t\tputSortable = dnd.putSortable =  null;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Animation\r\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\r\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\r\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\r\n\t\t\t\t\tlastTarget = null;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// no bubbling and not fallback\r\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\r\n\t\t\t\t\t_this._handleAutoScroll(evt);\r\n\t\t\t\t\tdragEl.parentNode[dnd.expando]._computeIsAligned(evt);\r\n\r\n\t\t\t\t\t// Do not detect for empty insert if already inserted\r\n\t\t\t\t\t!insertion && dnd.nearestEmptyInsertDetectEvent(evt);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\r\n\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\r\n\t\t\t// Call when dragEl has been inserted\r\n\t\t\tfunction changed() {\r\n\t\t\t\tdnd._dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, containers._index(dragEl), oldDraggableIndex, containers._index(dragEl, options.draggable), evt);\r\n\t\t\t}\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Gets the direction dragEl must be swapped relative to target in order to make it\r\n\t\t\t * seem that dragEl has been \"inserted\" into that element's position\r\n\t\t\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n\t\t\t * @return {Number}                   Direction dragEl must be swapped\r\n\t\t\t */\r\n\t\t\tfunction _getInsertDirection(target) {\r\n\t\t\t\tvar dragElIndex = containers._index(dragEl),\r\n\t\t\t\t\ttargetIndex = containers._index(target);\r\n\r\n\t\t\t\tif (dragElIndex < targetIndex) {\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn -1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\r\n\t\t\t\tvar targetRect = geom.boundingRect(target),\r\n\t\t\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\r\n\t\t\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\r\n\t\t\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\r\n\t\t\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\r\n\t\t\t\t\tdragRect = geom.boundingRect(dragEl),\r\n\t\t\t\t\tinvert = false;\r\n\r\n\r\n\t\t\t\tif (!invertSwap) {\r\n\t\t\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\r\n\t\t\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\r\n\t\t\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh &&\r\n\t\t\t\t\t\t\t(lastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\r\n\t\t\t\t\t\t\tpastFirstInvertThresh = true;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (!pastFirstInvertThresh) {\r\n\t\t\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\r\n\t\t\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\r\n\t\t\t\t\t\t\t// dragEl shadow (target move distance shadow)\r\n\t\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\t\tlastDirection === 1 ?\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\r\n\t\t\t\t\t\t\t\t) :\r\n\t\t\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\treturn lastDirection * -1;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tinvert = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Regular\r\n\t\t\t\t\t\tif (\r\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\r\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\treturn _getInsertDirection(target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tinvert = invert || invertSwap;\r\n\r\n\t\t\t\tif (invert) {\r\n\t\t\t\t\t// Invert of regular\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\r\n\t\t\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\r\n\t\t\t\t\t)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (evt.preventDefault !== void 0) {\r\n\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t}\r\n\r\n\r\n\t\t\tmoved = true;\r\n\r\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\r\n\r\n\t\t\t// target is dragEl or target is animated\r\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\r\n\t\t\t\treturn completed(false);\r\n\t\t\t}\r\n\r\n\t\t\tif (target !== dragEl) {\r\n\t\t\t\tignoreNextClick = false;\r\n\t\t\t}\r\n\r\n\t\t\tif (activeSortable && !options.disabled &&\r\n\t\t\t\t(isOwner\r\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\r\n\t\t\t\t\t: (\r\n\t\t\t\t\t\tputSortable === this ||\r\n\t\t\t\t\t\t(\r\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\r\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tvar axis = this._getDirection(evt, target);\r\n\r\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\r\n\r\n\t\t\t\tif (revert) {\r\n\t\t\t\t\tthis._hideClone();\r\n\t\t\t\t\tparentEl = rootEl; // actualization\r\n\r\n\t\t\t\t\tif (nextEl) {\r\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trootEl.appendChild(dragEl);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn completed(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar elLastChild = _lastChild(el);\r\n\r\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\r\n\t\t\t\t\t// assign target only if condition is true\r\n\t\t\t\t\tif (elLastChild && el === evt.target) {\r\n\t\t\t\t\t\ttarget = elLastChild;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (target) {\r\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\r\n\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\tparentEl = el; // actualization\r\n\t\t\t\t\t\trealDragElRect = null;\r\n\r\n\t\t\t\t\t\tchanged();\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\r\n\t\t\t\t\tvar direction = 0,\r\n\t\t\t\t\t\ttargetBeforeFirstSwap,\r\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\r\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\r\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\r\n\t\t\t\t\t\tscrolledPastTop = autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\r\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\r\n\r\n\r\n\t\t\t\t\tif (lastTarget !== target) {\r\n\t\t\t\t\t\tlastMode = null;\r\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\r\n\t\t\t\t\t\tpastFirstInvertThresh = false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\tcontainers._isElInRowColumn(dragEl, target, axis) && aligned ||\r\n\t\t\t\t\t\tdifferentLevel ||\r\n\t\t\t\t\t\tscrolledPastTop ||\r\n\t\t\t\t\t\toptions.invertSwap ||\r\n\t\t\t\t\t\tlastMode === 'insert' ||\r\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\r\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\r\n\t\t\t\t\t\tlastMode === 'swap'\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\t// New target that we will be inside\r\n\t\t\t\t\t\tif (lastMode !== 'swap') {\r\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\r\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\r\n\t\t\t\t\t\t\tisCircumstantialInvert,\r\n\t\t\t\t\t\t\tlastTarget === target);\r\n\t\t\t\t\t\tlastMode = 'swap';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Insert at position\r\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\r\n\t\t\t\t\t\tlastMode = 'insert';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (direction === 0) return completed(false);\r\n\r\n\t\t\t\t\trealDragElRect = null;\r\n\t\t\t\t\tlastTarget = target;\r\n\r\n\t\t\t\t\tlastDirection = direction;\r\n\r\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\r\n\r\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\r\n\t\t\t\t\t\tafter = false;\r\n\r\n\t\t\t\t\tafter = direction === 1;\r\n\r\n\t\t\t\t\tvar moveVector = dnd._onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\r\n\r\n\t\t\t\t\tif (moveVector !== false) {\r\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\r\n\t\t\t\t\t\t\tafter = (moveVector === 1);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_silent = true;\r\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\r\n\r\n\t\t\t\t\t\tif (isOwner) {\r\n\t\t\t\t\t\t\tactiveSortable._hideClone();\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (after && !nextSibling) {\r\n\t\t\t\t\t\t\tel.appendChild(dragEl);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\r\n\t\t\t\t\t\tif (scrolledPastTop) {\r\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\r\n\r\n\t\t\t\t\t\t// must be done before animation\r\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\r\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchanged();\r\n\r\n\t\t\t\t\t\treturn completed(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (el.contains(dragEl)) {\r\n\t\t\t\t\treturn completed(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t},\r\n\r\n\t\t_onDrop: function (/**Event*/evt) {\r\n\t\t\tvar el = this.el,\r\n\t\t\t\toptions = this.options,\r\n\t\t\t\tdragEl = dnd.dragEl,\r\n\t\t\t\tputSortable = dnd.putSortable;\r\n\r\n\t\t\tawaitingDragStarted = false;\r\n\t\t\tscrolling = false;\r\n\t\t\tisCircumstantialInvert = false;\r\n\t\t\tpastFirstInvertThresh = false;\r\n\r\n\t\t\tclearInterval(this._loopId);\r\n\r\n\t\t\tclearInterval(pointerElemChangedInterval);\r\n\t\t\t\r\n\t\t\tautoscroll._clearAutoScrolls();\r\n\t\t\tautoscroll._cancelThrottle();\r\n\r\n\t\t\tclearTimeout(this._dragStartTimer);\r\n\r\n\t\t\t_cancelNextTick(this._cloneId);\r\n\t\t\t_cancelNextTick(this._dragStartId);\r\n\r\n\t\t\t// Unbind events\r\n\t\t\teventer.off(document, 'mousemove', this._onTouchMove);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(document, 'drop', this);\r\n\t\t\t\teventer.off(el, 'dragstart', this._onDragStart);\r\n\t\t\t\teventer.off(document, 'dragover', this._handleAutoScroll);\r\n\t\t\t\teventer.off(document, 'dragover', dnd._checkAlignment);\r\n\t\t\t}\r\n\r\n\t\t\tif (Safari) {\r\n\t\t\t\tstyler.css(document.body, 'user-select', '');\r\n\t\t\t}\r\n\r\n\t\t\tthis._offMoveEvents();\r\n\t\t\tthis._offUpEvents();\r\n\r\n\t\t\tif (evt) {\r\n\t\t\t\tif (moved) {\r\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\r\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdnd.ghostEl && dnd.ghostEl.parentNode && dnd.ghostEl.parentNode.removeChild(dnd.ghostEl);\r\n\r\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\r\n\t\t\t\t\t// Remove clone\r\n\t\t\t\t\tdnd.cloneEl && dnd.cloneEl.parentNode && dnd.cloneEl.parentNode.removeChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dragEl) {\r\n\t\t\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\t\t\teventer.off(dragEl, 'dragend', this);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_disableDraggable(dragEl);\r\n\t\t\t\t\tdragEl.style['will-change'] = '';\r\n\r\n\t\t\t\t\t// Remove class's\r\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\r\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\r\n\r\n\t\t\t\t\t// Drag stop event\r\n\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\r\n\r\n\t\t\t\t\tif (rootEl !== parentEl) {\r\n\t\t\t\t\t\tnewIndex = containers._index(dragEl);\r\n\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t// Add event\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// Remove event\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t\t// drag from one list and drop into another\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tputSortable && putSortable.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\r\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\r\n\t\t\t\t\t\t\tnewIndex = containers._index(dragEl);\r\n\t\t\t\t\t\t\tnewDraggableIndex = containers._index(dragEl, options.draggable);\r\n\r\n\t\t\t\t\t\t\tif (newIndex >= 0) {\r\n\t\t\t\t\t\t\t\t// drag & drop within the same list\r\n\t\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dnd.active) {\r\n\t\t\t\t\t\t/* jshint eqnull:true */\r\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\r\n\t\t\t\t\t\t\tnewIndex = oldIndex;\r\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdnd._dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\r\n\r\n\t\t\t\t\t\t// Save sorting\r\n\t\t\t\t\t\tthis.save();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\tthis._nulling();\r\n\t\t},\r\n\r\n\t\t_nulling: function() {\r\n\t\t\trootEl =\r\n\t\t\tdnd.dragEl =\r\n\t\t\tparentEl =\r\n\t\t\tdnd.ghostEl =\r\n\t\t\tnextEl =\r\n\t\t\tdnd.cloneEl =\r\n\t\t\tlastDownEl =\r\n\r\n\t\t\tscrollEl =\r\n\t\t\tautoscroll.scrollParentEl =\r\n\t\t\tautoscroll.autoScrolls.length =\r\n\r\n\t\t\tpointerElemChangedInterval =\r\n\t\t\tlastPointerElemX =\r\n\t\t\tlastPointerElemY =\r\n\r\n\t\t\ttapEvt =\r\n\t\t\tdnd.touchEvt =\r\n\r\n\t\t\tmoved =\r\n\t\t\tnewIndex =\r\n\t\t\toldIndex =\r\n\r\n\t\t\tlastTarget =\r\n\t\t\tlastDirection =\r\n\r\n\t\t\trealDragElRect =\r\n\r\n\t\t\tdnd.putSortable =\r\n\t\t\tactiveGroup =\r\n\t\t\tdnd.active = null;\r\n\r\n\t\t\tsavedInputChecked.forEach(function (el) {\r\n\t\t\t\tel.checked = true;\r\n\t\t\t});\r\n\r\n\t\t\tsavedInputChecked.length = 0;\r\n\t\t},\r\n\r\n\t\thandleEvent: function (/**Event*/evt) {\r\n\t\t\tswitch (evt.type) {\r\n\t\t\t\tcase 'drop':\r\n\t\t\t\tcase 'dragend':\r\n\t\t\t\t\tthis._onDrop(evt);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'dragenter':\r\n\t\t\t\tcase 'dragover':\r\n\t\t\t\t\tif (dnd.dragEl) {\r\n\t\t\t\t\t\tthis._onDragOver(evt);\r\n\t\t\t\t\t\t_globalDragOver(evt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selectstart':\r\n\t\t\t\t\tevt.preventDefault();\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Serializes the item into an array of string.\r\n\t\t * @returns {String[]}\r\n\t\t */\r\n\t\ttoArray: function () {\r\n\t\t\tvar order = [],\r\n\t\t\t\tel,\r\n\t\t\t\tchildren = this.el.children,\r\n\t\t\t\ti = 0,\r\n\t\t\t\tn = children.length,\r\n\t\t\t\toptions = this.options;\r\n\r\n\t\t\tfor (; i < n; i++) {\r\n\t\t\t\tel = children[i];\r\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\r\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn order;\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Sorts the elements according to the array.\r\n\t\t * @param  {String[]}  order  order of the items\r\n\t\t */\r\n\t\tsort: function (order) {\r\n\t\t\tvar items = {}, rootEl = this.el;\r\n\r\n\t\t\tthis.toArray().forEach(function (id, i) {\r\n\t\t\t\tvar el = rootEl.children[i];\r\n\r\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\r\n\t\t\t\t\titems[id] = el;\r\n\t\t\t\t}\r\n\t\t\t}, this);\r\n\r\n\t\t\torder.forEach(function (id) {\r\n\t\t\t\tif (items[id]) {\r\n\t\t\t\t\trootEl.removeChild(items[id]);\r\n\t\t\t\t\trootEl.appendChild(items[id]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Save the current sorting\r\n\t\t */\r\n\t\tsave: function () {\r\n\t\t\tvar store = this.options.store;\r\n\t\t\tstore && store.set && store.set(this);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n\t\t * @param   {HTMLElement}  el\r\n\t\t * @param   {String}       [selector]  default: `options.draggable`\r\n\t\t * @returns {HTMLElement|null}\r\n\t\t */\r\n\t\tclosest: function (el, selector) {\r\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Set/get option\r\n\t\t * @param   {string} name\r\n\t\t * @param   {*}      [value]\r\n\t\t * @returns {*}\r\n\t\t */\r\n\t\toption: function (name, value) {\r\n\t\t\tvar options = this.options;\r\n\r\n\t\t\tif (value === void 0) {\r\n\t\t\t\treturn options[name];\r\n\t\t\t} else {\r\n\t\t\t\toptions[name] = value;\r\n\r\n\t\t\t\tif (name === 'group') {\r\n\t\t\t\t\t_prepareGroup(options);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * Destroy\r\n\t\t */\r\n\t\tdestroy: function () {\r\n\t\t\tvar el = this.el;\r\n\r\n\t\t\tel[dnd.expando] = null;\r\n\r\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\r\n\r\n\r\n\t\t\tif (this.nativeDraggable) {\r\n\t\t\t\teventer.off(el, 'dragover', this);\r\n\t\t\t\teventer.off(el, 'dragenter', this);\r\n\t\t\t}\r\n\t\t\t// Remove draggable attributes\r\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\r\n\t\t\t\tel.removeAttribute('draggable');\r\n\t\t\t});\r\n\r\n\t\t\tthis._onDrop();\r\n\r\n\t\t\tdnd.sortables.splice(dnd.sortables.indexOf(this.el), 1);\r\n\r\n\t\t\tthis.el = el = null;\r\n\t\t},\r\n\r\n\t\t_hideClone: function() {\r\n\t\t\tif (!dnd.cloneEl.cloneHidden) {\r\n\t\t\t\tstyler.css(dnd.cloneEl, 'display', 'none');\r\n\t\t\t\tdnd.cloneEl.cloneHidden = true;\r\n\t\t\t\tif (dnd.cloneEl.parentNode && this.options.removeCloneOnHide) {\r\n\t\t\t\t\tdnd.cloneEl.parentNode.removeChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t_showClone: function(putSortable) {\r\n\r\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\r\n\t\t\t\tthis._hideClone();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (dnd.cloneEl.cloneHidden) {\r\n\t\t\t\t// show clone at dragEl or original position\r\n\t\t\t\tif (rootEl.contains(dnd.dragEl) && !this.options.group.revertClone) {\r\n\t\t\t\t\trootEl.insertBefore(dnd.cloneEl, dnd.dragEl);\r\n\t\t\t\t} else if (nextEl) {\r\n\t\t\t\t\trootEl.insertBefore(dnd.cloneEl, nextEl);\r\n\t\t\t\t} else {\r\n\t\t\t\t\trootEl.appendChild(dnd.cloneEl);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (this.options.group.revertClone) {\r\n\t\t\t\t\tthis._animate(dnd.dragEl, dnd.cloneEl);\r\n\t\t\t\t}\r\n\t\t\t\tstyler.css(dnd.cloneEl, 'display', '');\r\n\t\t\t\tdnd.cloneEl.cloneHidden = false;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\r\n    function _globalDragOver(/**Event*/evt) {\r\n\t\tif (evt.dataTransfer) {\r\n\t\t\tevt.dataTransfer.dropEffect = 'move';\r\n\t\t}\r\n\t\tevt.cancelable && evt.preventDefault();\r\n\t}\r\n\r\n\tfunction _disableDraggable(el) {\r\n\t\tel.draggable = false;\r\n\t}\r\n\r\n\tfunction _unsilent() {\r\n\t\t_silent = false;\r\n\t}\r\n\r\n\r\n\t// Export utils\r\n\tSortable.utils = {\r\n\t\ton: eventer.on,\r\n\t\toff: eventer.off,\r\n\t\tcss: styler.css,\r\n\t\tfind: _find,\r\n\t\tis: function (el, selector) {\r\n\t\t\treturn !!finder.closest(el, selector, el, false);\r\n\t\t},\r\n\t\textend: langx.mixin,\r\n\t\tthrottle: autoscroll._throttle,\r\n\t\tclosest: finder.closest,\r\n\t\ttoggleClass: styler.toggleClass,\r\n\t\tclone: \tfunction (el) {\r\n\t\t\t\t\treturn noder.clone(el,true);\r\n\t\t\t\t},\r\n\t\tindex: containers._index,\r\n\t\tnextTick: _nextTick,\r\n\t\tcancelNextTick: _cancelNextTick,\r\n\t\t//detectDirection: _detectDirection,\r\n\t\tgetChild: function(el, childNum, options) {\r\n\t\t\toptions.excluding = [];\r\n\t\t\toptions.closesting = options.draggable;\r\n\t\t\treturn finder.childAt(el,childNum,options);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * Create sortable instance\r\n\t * @param {HTMLElement}  el\r\n\t * @param {Object}      [options]\r\n\t */\r\n\tSortable.create = function (el, options) {\r\n\t\treturn new Sortable(el, options);\r\n\t};\r\n\r\n\r\n\t// Export\r\n\tSortable.version = '1.9.0';\r\n\r\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\r\n});\ndefine('skylark-sortable/main',[\r\n\t\"./Sortable\"\r\n],function(Sortable){\r\n\treturn Sortable;\r\n});\ndefine('skylark-sortable', ['skylark-sortable/main'], function (main) { return main; });\n\n"]}