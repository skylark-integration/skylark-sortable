{"version":3,"sources":["skylark-sortable.js"],"names":["define","hoster","detects","browser","window","document","ua","toLowerCase","match","exec","indexOf","platform_match","matched","version","versionNumber","platform","parseInt","android","bb","blackberry","ipad","iphone","ipod","kindle","playbook","silk","mobile","cros","mac","linux","win","desktop","chrome","opr","safari","webkit","rv","iemobile","edge","name","uaMatch","navigator","userAgent","detectBrowser","undefined","isBrowser","geom","styler","finder","Orientation","el","options","elCSS","css","elWidth","contentRect","width","child1","childAt","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginSize","secondChildWidth","display","flexDirection","Vertical","Horizontal","gridTemplateColumns","split","length","float","touchingSideChild2","clear","CSSFloatProperty","langx","scrollingElement","autoScrolls","scrolling","IE11OrLess","ie","Edge","Safari","firefox","_throttleTimeout","_getParentAutoScrollElement","includeSelf","getBoundingClientRect","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","parentNode","_autoScroll","_throttle","evt","rootEl","isFallback","scroll","_this","expando","sens","scrollSensitivity","speed","scrollSpeed","x","clientX","y","clientY","winScroller","scrollThisInstance","scrollParentEl","_clearAutoScrolls","scrollEl","scrollCustomFn","scrollFn","layersOut","currentParent","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","rect","boundingRect","top","bottom","left","right","height","scrollLeft","scrollTop","abs","i","clearInterval","pid","setInterval","this","layer","Sortable","active","_emulateDragOver","_onTouchMove","touchEvt","scrollOffsetY","scrollOffsetX","call","scrollBy","bind","bubbleScroll","forEach","autoScroll","callback","ms","debounce","_isScrolledPast","side","parent","elSide","parentSide","_getRelativeScrollOffset","offsetLeft","offsetTop","matrix","transforms","scaleX","a","scaleY","d","_handleAutoScroll","fallback","elementFromPoint","ogElemScroller","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","dragEl","newElem","_cancelThrottle","stop","skylark","isMobile","$","noder","eventer","oriented","touch","autoscroll","log","category","message","append","parentEl","ghostEl","cloneEl","nextEl","lastDownEl","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","activeGroup","putSortable","tapEvt","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","ghostRelativeParent","realDragElRect","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","Date","getTime","setTimeout","Polymer","FireFox","PositionGhostAbsolutely","apple","device","supportDraggable","createElement","supportCssPointerEvents","support","cssPointerEvents","_silent","_alignedSilent","Math","min","max","savedInputChecked","_detectDirection","excluding","_detectNearestEmptySortable","_lastChild","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_isClientInRowColumn","axis","targetRect","targetS1Opp","targetS2Opp","mouseOnOppAxis","_isElInRowColumn","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_prepareGroup","toFn","value","pull","to","from","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","_checkAlignment","_computeIsAligned","_hideGhostForTarget","_unhideGhostForTarget","addEventListener","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","event","target","_onDragOver","_find","ctx","tagName","iterator","list","getElementsByTagName","n","lastChild","ignoreHidden","_getInsertDirection","dragElIndex","_index","targetIndex","_generateId","str","className","src","href","textContent","sum","charCodeAt","toString","selector","index","nodeName","toUpperCase","matches","_nextTick","fn","defer","_cancelNextTick","id","_getRect","adjustForTransform","container","adjustForFixed","nodeType","mixin","defaults","sort","disabled","store","handle","draggable","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","charAt","nativeDraggable","mousy","on","_onTapStart","push","get","_dispatchEvent","sortable","targetEl","toEl","fromEl","startIndex","startDraggableIndex","originalEvt","onName","substr","create","item","clone","originalEvent","pullMode","lastPutMode","dispatchEvent","_onMove","dragRect","willInsertAfter","retVal","onMoveFn","onMove","dragged","draggedRect","related","relatedRect","_disableDraggable","_unsilent","cancelable","prototype","constructor","closest","children","sortableMouseAligned","_getDirection","type","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","some","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","style","transition","transform","_disableDelayedDragEvents","_triggerDragStart","toggleClass","_onDrop","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","e","floor","clearTimeout","off","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_appendGhost","_nulling","forAutoScroll","relativeScrollOffset","dx","dy","translate3d","ghostRelativeParentRect","documentElement","cloneNode","appendChild","_animate","prevRect","currentRect","_repaint","animated","offsetWidth","_offMoveEvents","_offUpEvents","_hideClone","_cloneId","insertBefore","_loopId","effectAllowed","_dragStartId","revert","activeSortable","isOwner","canSort","contains","completed","elLastChild","elRect","mouseOnAxis","targetS2","_ghostIsLast","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","scrollBefore","isLastTarget","targetLength","targetS1","invert","_getSwapDirection","nextElementSibling","after","moveVector","insertion","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","items","set","option","destroy","Array","querySelectorAll","removeAttribute","splice","cloneHidden","utils","find","is","extend","throttle","nextTick","cancelNextTick","detectDirection","getChild","childNum","closesting","attach","main"],"mappings":"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","file":"../skylark-sortable.js","sourcesContent":["define('skylark-langx-hoster/detects/browser',[\r\n    \"../hoster\"\r\n],function(hoster){\r\n\t//refer : https://github.com/gabceb/jquery-browser-plugin\r\n\r\n\tfunction detectBrowser() {\r\n\r\n\t\tfunction uaMatch( ua ) {\r\n\t\t\tua = ua.toLowerCase();\r\n\r\n\t\t\tvar match = /(edge)\\/([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opr)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(iemobile)[\\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(version)(applewebkit)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+).*(version)[ \\/]([\\w.]+).*(safari)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"trident\") >= 0 && /(rv)(?::| )([\\w.]+)/.exec( ua ) ||\r\n\t\t\t    ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar platform_match = /(ipad)/.exec( ua ) ||\r\n\t\t\t    /(ipod)/.exec( ua ) ||\r\n\t\t\t    /(windows phone)/.exec( ua ) ||\r\n\t\t\t    /(iphone)/.exec( ua ) ||\r\n\t\t\t    /(kindle)/.exec( ua ) ||\r\n\t\t\t    /(silk)/.exec( ua ) ||\r\n\t\t\t    /(android)/.exec( ua ) ||\r\n\t\t\t    /(win)/.exec( ua ) ||\r\n\t\t\t    /(mac)/.exec( ua ) ||\r\n\t\t\t    /(linux)/.exec( ua ) ||\r\n\t\t\t    /(cros)/.exec( ua ) ||\r\n\t\t\t    /(playbook)/.exec( ua ) ||\r\n\t\t\t    /(bb)/.exec( ua ) ||\r\n\t\t\t    /(blackberry)/.exec( ua ) ||\r\n\t\t\t    [];\r\n\r\n\t\t\tvar browser = {},\r\n\t\t\t    matched = {\r\n\t\t\t      browser: match[ 5 ] || match[ 3 ] || match[ 1 ] || \"\",\r\n\t\t\t      version: match[ 2 ] || match[ 4 ] || \"0\",\r\n\t\t\t      versionNumber: match[ 4 ] || match[ 2 ] || \"0\",\r\n\t\t\t      platform: platform_match[ 0 ] || \"\"\r\n\t\t\t    };\r\n\r\n\t\t\tif ( matched.browser ) {\r\n\t\t\t\tbrowser[ matched.browser ] = true;\r\n\t\t\t  \tbrowser.version = matched.version;\r\n\t\t\t  \tbrowser.versionNumber = parseInt(matched.versionNumber, 10);\r\n\t\t\t}\r\n\r\n\t\t\tif ( matched.platform ) {\r\n\t\t\t \tbrowser[ matched.platform ] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered mobile platforms, meaning they run a mobile browser\r\n\t\t\tif ( browser.android || browser.bb || browser.blackberry || browser.ipad || browser.iphone ||\r\n\t\t\t\tbrowser.ipod || browser.kindle || browser.playbook || browser.silk || browser[ \"windows phone\" ]) {\r\n\t\t\t\tbrowser.mobile = true;\r\n\t\t\t}\r\n\r\n\t\t\t// These are all considered desktop platforms, meaning they run a desktop browser\r\n\t\t\tif ( browser.cros || browser.mac || browser.linux || browser.win ) {\r\n\t\t\t\tbrowser.desktop = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Chrome, Opera 15+ and Safari are webkit based browsers\r\n\t\t\tif ( browser.chrome || browser.opr || browser.safari ) {\r\n\t\t\t\tbrowser.webkit = true;\r\n\t\t\t}\r\n\r\n\t\t\t// IE11 has a new token so we will assign it msie to avoid breaking changes\r\n\t\t\tif ( browser.rv || browser.iemobile) {\r\n\t\t\t  var ie = \"ie\";\r\n\r\n\t\t\t  matched.browser = ie;\r\n\t\t\t  browser[ie] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Edge is officially known as Microsoft Edge, so rewrite the key to match\r\n\t\t\tif ( browser.edge ) {\r\n\t\t\t  delete browser.edge;\r\n\t\t\t  var msedge = \"edge\";\r\n\r\n\t\t\t  matched.browser = msedge;\r\n\t\t\t  browser[msedge] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Blackberry browsers are marked as Safari on BlackBerry\r\n\t\t\tif ( browser.safari && browser.blackberry ) {\r\n\t\t\t  var blackberry = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = blackberry;\r\n\t\t\t  browser[blackberry] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Playbook browsers are marked as Safari on Playbook\r\n\t\t\tif ( browser.safari && browser.playbook ) {\r\n\t\t\t  var playbook = \"playbook\";\r\n\r\n\t\t\t  matched.browser = playbook;\r\n\t\t\t  browser[playbook] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// BB10 is a newer OS version of BlackBerry\r\n\t\t\tif ( browser.bb ) {\r\n\t\t\t  var bb = \"blackberry\";\r\n\r\n\t\t\t  matched.browser = bb;\r\n\t\t\t  browser[bb] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Opera 15+ are identified as opr\r\n\t\t\tif ( browser.opr ) {\r\n\t\t\t  var opera = \"opera\";\r\n\r\n\t\t\t  matched.browser = opera;\r\n\t\t\t  browser[opera] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Stock Android browsers are marked as Safari on Android.\r\n\t\t\tif ( browser.safari && browser.android ) {\r\n\t\t\t  var android = \"android\";\r\n\r\n\t\t\t  matched.browser = android;\r\n\t\t\t  browser[android] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Kindle browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.kindle ) {\r\n\t\t\t  var kindle = \"kindle\";\r\n\r\n\t\t\t  matched.browser = kindle;\r\n\t\t\t  browser[kindle] = true;\r\n\t\t\t}\r\n\r\n\t\t\t // Kindle Silk browsers are marked as Safari on Kindle\r\n\t\t\tif ( browser.safari && browser.silk ) {\r\n\t\t\t  var silk = \"silk\";\r\n\r\n\t\t\t  matched.browser = silk;\r\n\t\t\t  browser[silk] = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Assign the name and platform variable\r\n\t\t\tbrowser.name = matched.browser;\r\n\t\t\tbrowser.platform = matched.platform;\r\n\t\t\treturn browser;\r\n\t\t}\r\n\r\n\r\n\t    var isBrowser = typeof window !== 'undefined' && typeof window.document !== 'undefined';\r\n\r\n\t    if (isBrowser) {\r\n\t\t    return uaMatch( navigator.userAgent );\r\n\t    } else {\r\n\t    \treturn null;\r\n\t    }\r\n\t}\r\n\r\n\r\n\treturn hoster.detects.browser = detectBrowser;\r\n});\ndefine('skylark-langx-hoster/isBrowser',[\r\n    \"./hoster\",\r\n    \"./detects/browser\"\r\n],function(hoster,detectBrowser){\r\n\tif (hoster.isBrowser == undefined) {\r\n\t\thoster.isBrowser = detectBrowser();\r\n\t}\r\n\r\n    return hoster.isBrowser;\r\n});\r\n\ndefine('skylark-domx-layouts/oriented',[\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-finder\",\r\n\t\"./Orientation\"\r\n],function(\r\n\tgeom,\r\n\tstyler,\r\n\tfinder,\r\n\tOrientation\r\n){\r\n\r\n\t/**\r\n\t * Detects children orientation.\r\n\t */\r\n\tfunction oriented(el, options) {\r\n\t\tvar elCSS = styler.css(el),\r\n\r\n\t\t\telWidth = geom.contentRect(el).width,\r\n\r\n\t\t\tchild1 = finder.childAt(el, 0, options),\r\n\t\t\tchild2 = finder.childAt(el, 1, options),\r\n\t\t\tfirstChildCSS = child1 && styler.css(child1),\r\n\t\t\tsecondChildCSS = child2 && styler.css(child2),\r\n\r\n\t\t\tfirstChildWidth = child1 && geom.marginSize(child1).width,\r\n\t\t\tsecondChildWidth = child2 && geom.marginSize(child2).width;\r\n\r\n\t\tif (elCSS.display === 'flex') {\r\n\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\r\n\t\t\t? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (elCSS.display === 'grid') {\r\n\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? Orientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\tif (child1 && firstChildCSS.float !== 'none') {\r\n\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\r\n\r\n\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\r\n\t\t\t\tOrientation.Vertical : Orientation.Horizontal;\r\n\t\t}\r\n\r\n\t\treturn (child1 &&\r\n\t\t\t(\r\n\t\t\t\tfirstChildCSS.display === 'block' ||\r\n\t\t\t\tfirstChildCSS.display === 'flex' ||\r\n\t\t\t\tfirstChildCSS.display === 'table' ||\r\n\t\t\t\tfirstChildCSS.display === 'grid' ||\r\n\t\t\t\tfirstChildWidth >= elWidth &&\r\n\t\t\t\telCSS[CSSFloatProperty] === 'none' ||\r\n\t\t\t\tchild2 &&\r\n\t\t\t\telCSS[CSSFloatProperty] === 'none' &&\r\n\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\r\n\t\t\t) ?\r\n\t\t\tOrientation.Vertical : Orientation.Horizontal\r\n\t\t);\r\n\t}\r\n\r\n\treturn oriented;\r\n});\ndefine('skylark-sortable/autoscroll',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-langx-hoster/isBrowser\",\r\n\t\"skylark-domx-geom\",\r\n\t\"skylark-domx-styler\",\r\n\t\"skylark-domx-scrolls/scrollingElement\"\r\n],function(\r\n\tlangx,\r\n\tisBrowser,\r\n\tgeom,\r\n\tstyler,\r\n\tscrollingElement\r\n){\r\n\tvar autoScrolls = [],\r\n\t\tscrolling = false;\r\n\r\n\tvar\r\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\r\n\t\tEdge = isBrowser && isBrowser.edge,\r\n\t\tFireFox = isBrowser && isBrowser.firefox,\r\n\t\tSafari = isBrowser && isBrowser.safari;\r\n\r\n\r\n\t/**\r\n\t * Checks if a side of an element is scrolled past a side of it's parents\r\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\r\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\r\n\t * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n\t */\r\n\tfunction _isScrolledPast(el, side) {\r\n\t\tvar parent = _getParentAutoScrollElement(el, true),\r\n\t\t\telSide = geom.boundingRect(el)[side];\r\n\r\n\t\t/* jshint boss:true */\r\n\t\twhile (parent) {\r\n\t\t\tvar parentSide = geom.boundingRect(parent)[side],\r\n\t\t\t\tvisible;\r\n\r\n\t\t\tif (side === 'top' || side === 'left') {\r\n\t\t\t\tvisible = elSide >= parentSide;\r\n\t\t\t} else {\r\n\t\t\t\tvisible = elSide <= parentSide;\r\n\t\t\t}\r\n\r\n\t\t\tif (!visible) return parent;\r\n\r\n\t\t\tif (parent === scrollingElement()) break;\r\n\r\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n\t * The value is returned in real pixels.\r\n\t * @param  {HTMLElement} el\r\n\t * @return {Array}             Offsets in the format of [left, top]\r\n\t */\r\n\tfunction _getRelativeScrollOffset(el) {\r\n\t\tvar offsetLeft = 0,\r\n\t\t\toffsetTop = 0,\r\n\t\t\twinScroller = scrollingElement();\r\n\r\n\t\tif (el) {\r\n\t\t\tdo {\r\n\t\t\t\tvar matrix = transforms.matrix(el),\r\n\t\t\t\t\tscaleX = matrix.a,\r\n\t\t\t\t\tscaleY = matrix.d;\r\n\r\n\t\t\t\toffsetLeft += el.scrollLeft * scaleX;\r\n\t\t\t\toffsetTop += el.scrollTop * scaleY;\r\n\t\t\t} while (el !== winScroller && (el = el.parentNode));\r\n\t\t}\r\n\r\n\t\treturn [offsetLeft, offsetTop];\r\n\t}\r\n\r\n\tvar _getParentAutoScrollElement = function(el, includeSelf) {\r\n\t\t// skip to window\r\n\t\tif (!el || !el.getBoundingClientRect) return scrollingElement();\r\n\r\n\t\tvar elem = el;\r\n\t\tvar gotSelf = false;\r\n\t\tdo {\r\n\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\r\n\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\r\n\t\t\t\tvar elemCSS = styler.css(elem);\r\n\t\t\t\tif (\r\n\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\r\n\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\r\n\t\t\t\t) {\r\n\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return scrollingElement();\r\n\r\n\t\t\t\t\tif (gotSelf || includeSelf) return elem;\r\n\t\t\t\t\tgotSelf = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t/* jshint boss:true */\r\n\t\t} while (elem = elem.parentNode);\r\n\r\n\t\treturn scrollingElement();\r\n\t},\r\n\r\n\r\n\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {\r\n\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\r\n\t\tif (options.scroll) {\r\n\t\t\tvar _this = rootEl ? rootEl[expando] : window,\r\n\t\t\t\tsens = options.scrollSensitivity,\r\n\t\t\t\tspeed = options.scrollSpeed,\r\n\r\n\t\t\t\tx = evt.clientX,\r\n\t\t\t\ty = evt.clientY,\r\n\r\n\t\t\t\twinScroller = scrollingElement(),\r\n\r\n\t\t\t\tscrollThisInstance = false;\r\n\r\n\t\t\t// Detect scrollEl\r\n\t\t\tif (scrollParentEl !== rootEl) {\r\n\t\t\t\t_clearAutoScrolls();\r\n\r\n\t\t\t\tscrollEl = options.scroll;\r\n\t\t\t\tscrollCustomFn = options.scrollFn;\r\n\r\n\t\t\t\tif (scrollEl === true) {\r\n\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\r\n\t\t\t\t\tscrollParentEl = scrollEl;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tvar layersOut = 0;\r\n\t\t\tvar currentParent = scrollEl;\r\n\t\t\tdo {\r\n\t\t\t\tvar\tel = currentParent,\r\n\t\t\t\t\trect = geom.boundingRect(el),\r\n\r\n\t\t\t\t\ttop = rect.top,\r\n\t\t\t\t\tbottom = rect.bottom,\r\n\t\t\t\t\tleft = rect.left,\r\n\t\t\t\t\tright = rect.right,\r\n\r\n\t\t\t\t\twidth = rect.width,\r\n\t\t\t\t\theight = rect.height,\r\n\r\n\t\t\t\t\tscrollWidth,\r\n\t\t\t\t\tscrollHeight,\r\n\r\n\t\t\t\t\tcss,\r\n\r\n\t\t\t\t\tvx,\r\n\t\t\t\t\tvy,\r\n\r\n\t\t\t\t\tcanScrollX,\r\n\t\t\t\t\tcanScrollY,\r\n\r\n\t\t\t\t\tscrollPosX,\r\n\t\t\t\t\tscrollPosY;\r\n\r\n\r\n\t\t\t\tscrollWidth = el.scrollWidth;\r\n\t\t\t\tscrollHeight = el.scrollHeight;\r\n\r\n\t\t\t\tcss = styler.css(el);\r\n\r\n\t\t\t\tscrollPosX = el.scrollLeft;\r\n\t\t\t\tscrollPosY = el.scrollTop;\r\n\r\n\t\t\t\tif (el === winScroller) {\r\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\r\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\r\n\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);\r\n\r\n\t\t\t\tvy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);\r\n\r\n\r\n\t\t\t\tif (!autoScrolls[layersOut]) {\r\n\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\r\n\t\t\t\t\t\tif (!autoScrolls[i]) {\r\n\t\t\t\t\t\t\tautoScrolls[i] = {};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\r\n\t\t\t\t\tautoScrolls[layersOut].el = el;\r\n\t\t\t\t\tautoScrolls[layersOut].vx = vx;\r\n\t\t\t\t\tautoScrolls[layersOut].vy = vy;\r\n\r\n\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\r\n\r\n\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\r\n\t\t\t\t\t\tscrollThisInstance = true;\r\n\t\t\t\t\t\t/* jshint loopfunc:true */\r\n\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\r\n\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\r\n\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\r\n\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\r\n\t\t\t\t\t\t\t\tSortable.active._onTouchMove(touchEvt, true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\r\n\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\r\n\r\n\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\r\n\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tgeom.scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\r\n\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlayersOut++;\r\n\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = _getParentAutoScrollElement(currentParent, false)));\r\n\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\r\n\t\t}\r\n\t}, 30),\r\n\r\n\t_clearAutoScrolls = function () {\r\n\t\tautoScrolls.forEach(function(autoScroll) {\r\n\t\t\tclearInterval(autoScroll.pid);\r\n\t\t});\r\n\t\tautoScrolls = [];\r\n\t},\r\n\r\n\t_handleAutoScroll = function(evt, options,fallback) {\r\n\t\tvar x = evt.clientX,\r\n\t\t\ty = evt.clientY,\r\n\r\n\t\t\telem = document.elementFromPoint(x, y);\r\n\r\n\t\t// IE does not seem to have native autoscroll,\r\n\t\t// Edge's autoscroll seems too conditional,\r\n\t\t// MACOS Safari does not have autoscroll,\r\n\t\t// Firefox and Chrome are good\r\n\t\tif (fallback || Edge || IE11OrLess || Safari) {\r\n\t\t\t_throttleTimeout = _autoScroll(evt, options, elem, fallback);\r\n\r\n\t\t\t// Listener for pointer element change\r\n\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\r\n\t\t\tif (\r\n\t\t\t\tscrolling &&\r\n\t\t\t\t(\r\n\t\t\t\t\t!pointerElemChangedInterval ||\r\n\t\t\t\t\tx !== lastPointerElemX ||\r\n\t\t\t\t\ty !== lastPointerElemY\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\r\n\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\r\n\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\r\n\t\t\t\tpointerElemChangedInterval = setInterval(function() {\r\n\t\t\t\t\tif (!dragEl) return;\r\n\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\r\n\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\r\n\t\t\t\t\tif (newElem !== ogElemScroller) {\r\n\t\t\t\t\t\togElemScroller = newElem;\r\n\t\t\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\t\t\t_throttleTimeout = _autoScroll(evt, options, ogElemScroller, fallback);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 10);\r\n\t\t\t\tlastPointerElemX = x;\r\n\t\t\t\tlastPointerElemY = y;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\r\n\t\t\tif (!options.bubbleScroll || _getParentAutoScrollElement(elem, true) === scrollingElement()) {\r\n\t\t\t\t_clearAutoScrolls();\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t_throttleTimeout = _autoScroll(evt, options, _getParentAutoScrollElement(elem, false), false);\r\n\t\t}\r\n\t};\r\n\r\n\r\n\tvar _throttleTimeout;\r\n\tfunction _throttle(callback, ms) {\r\n\t\treturn langx.debounce(callback,ms);\r\n\t}\r\n\r\n\tfunction _cancelThrottle() {\r\n\t\t//clearTimeout(_throttleTimeout);\r\n\t\t//_throttleTimeout = void 0;\r\n\t\tif (_throttleTimeout && _throttleTimeout.stop) {\r\n\t\t\t_throttleTimeout.stop();\r\n\t\t\t_throttleTimeout = void 0;\r\n\t\t}\r\n\t}\r\n\r\n\t\r\n\treturn {\r\n\t\tautoScrolls,\r\n\t\t\r\n\t\t_isScrolledPast,\r\n\t\t_getRelativeScrollOffset,\r\n\t\t_autoScroll,\r\n\r\n\t\t_clearAutoScrolls,\r\n\t\t_handleAutoScroll,\r\n\r\n\t\t_throttle,\r\n\t\t_cancelThrottle\r\n\t}\r\n});\ndefine('skylark-sortable/Sortable',[\n\t\"skylark-langx/skylark\",\n\t\"skylark-langx/langx\",\n\t\"skylark-langx-hoster/isBrowser\",\n\t\"skylark-langx-hoster/isMobile\",\n\t\"skylark-domx-query\",\n\t\"skylark-domx-browser\",\n\t\"skylark-domx-noder\",\n\t\"skylark-domx-finder\",\n\t\"skylark-domx-geom\",\n\t\"skylark-domx-styler\",\n\t\"skylark-domx-eventer\",\n\t\"skylark-domx-transforms\",\n\t\"skylark-domx-scrolls/scrollingElement\",\n\t\"skylark-domx-layouts/oriented\",\n\t\"skylark-devices-points/touch\",\n\t\"./autoscroll\"\n],function(\n\tskylark,\n\tlangx,\n\tisBrowser,\n\tisMobile,\n\t$,\n\tbrowser,\n\tnoder,\n\tfinder,\n\tgeom,\n\tstyler,\n\teventer,\n\ttransforms,\n\tscrollingElement,\n\toriented,\n\ttouch,\n\tautoscroll\n){\n\tfunction log(category,message) {\n\t\t$(\"#console\").append(\"<div>\"+category+\":\"+message+\"</div>\");\t\n\t}\t\n\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\toldIndex,\n\t\tnewIndex,\n\t\toldDraggableIndex,\n\t\tnewDraggableIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tawaitingDragStarted = false,\n\t\tignoreNextClick = false,\n\t\tsortables = [],\n\n\t\tpointerElemChangedInterval,\n\t\tlastPointerElemX,\n\t\tlastPointerElemY,\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\t\t// For positioning ghost absolutely\n\t\tghostRelativeParent,\n\t\tghostRelativeParentInitialScroll = [], // (left, top)\n\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\t/*\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\n\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\n\t\t*/\n\t\tIE11OrLess = isBrowser && isBrowser.ie,\n\t\tEdge = isBrowser && isBrowser.edge,\n\t\tFireFox = isBrowser && isBrowser.firefox,\n\t\tSafari = isBrowser && isBrowser.safari,\n\n\t\tIOS = isMobile && isMobile.apple.device,\n\t\tPositionGhostAbsolutely = isMobile.apple.device, //IOS\n\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')) && !isMobile.apple.device,\n\n\t\t/*\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\t\t*/\n\t\tsupportCssPointerEvents = browser.support.cssPointerEvents;\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\t\tmax = Math.max,\n\n\t\tsavedInputChecked = [],\n\n\t\t/**\n\t\t * Detects children direction.\n\t\t */\n\t\t_detectDirection = function(el, options) {\n\t\t\toptions.excluding = [ghostEl,dragEl];\n\t\t\treturn oriented(el,options);\n\t\t},\n\n\t\t/**\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n\t\t * @param  {Number} x      X position\n\t\t * @param  {Number} y      Y position\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\n\t\t */\n\t\t_detectNearestEmptySortable = function(x, y) {\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\n\t\t\t\tif (_lastChild(sortables[i])) continue;\n\n\t\t\t\tvar rect = geom.boundingRect(sortables[i]),\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\n\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\n\t\t\t\t\treturn sortables[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\n\t\t\tvar targetRect = geom.boundingRect(el),\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t\t},\n\n\t\t_isElInRowColumn = function(el1, el2, axis) {\n\t\t\tvar el1Rect = el1 === dragEl && realDragElRect || geom.boundingRect(el1),\n\t\t\t\tel2Rect = el2 === dragEl && realDragElRect || geom.boundingRect(el2),\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\t\treturn (\n\t\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t\t);\n\t\t},\n\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t},\n\n\t\t_checkAlignment = function(evt) {\n\t\t\tif (!dragEl || !dragEl.parentNode) return;\n\t\t\tdragEl.parentNode[expando] && dragEl.parentNode[expando]._computeIsAligned(evt);\n\t\t},\n\n\t\t_hideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\tstyler.css(ghostEl, 'display', 'none');\n\t\t\t}\n\t\t},\n\n\t\t_unhideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\tstyler.css(ghostEl, 'display', '');\n\t\t\t}\n\t\t};\n\n\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\tvar nearestEmptyInsertDetectEvent = function(evt) {\n\t\tif (dragEl) {\n\t\t\tevt = evt.touches ? evt.touches[0] : evt;\n\t\t\tvar nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n\t\t\tif (nearest) {\n\t\t\t\t// Create imitation event\n\t\t\t\tvar event = {};\n\t\t\t\tfor (var i in evt) {\n\t\t\t\t\tevent[i] = evt[i];\n\t\t\t\t}\n\t\t\t\tevent.target = event.rootEl = nearest;\n\t\t\t\tevent.preventDefault = void 0;\n\t\t\t\tevent.stopPropagation = void 0;\n\t\t\t\tnearest[expando]._onDragOver(event);\n\t\t\t}\n\t\t}\n\t};\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\t/**\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n\t * @param  {HTMLElement} el       Parent element\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\n\t */\n\tfunction _lastChild(el) {\n\t\t/*\n\t\tvar last = el.lastElementChild;\n\n\t\twhile (last && (last === ghostEl || styler.css(last, 'display') === 'none')) {\n\t\t\tlast = last.previousElementSibling;\n\t\t}\n\n\t\treturn last || null;\n\t\t*/\n\t\treturn finder.lastChild(el,{\n\t\t\tignoreHidden : true,\n\t\t\texcluding : [ghostEl]\n\t\t})\n\t}\n\n\tfunction _ghostIsLast(evt, axis, el) {\n\t\tvar elRect = geom.boundingRect(_lastChild(el)),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\n\t\t\tspacer = 10;\n\n\t\treturn (\n\t\t\taxis === 'vertical' ?\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\n\t\t);\n\t}\n\n\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\tvar targetRect = geom.boundingRect(target),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\tdragRect = geom.boundingRect(dragEl),\n\t\t\tinvert = false;\n\n\n\t\tif (!invertSwap) {\n\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t}\n\n\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\tif (\n\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinvert = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Regular\n\t\t\t\tif (\n\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t) {\n\t\t\t\t\treturn _getInsertDirection(target);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinvert = invert || invertSwap;\n\n\t\tif (invert) {\n\t\t\t// Invert of regular\n\t\t\tif (\n\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t * seem that dragEl has been \"inserted\" into that element's position\n\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t * @return {Number}                   Direction dragEl must be swapped\n\t */\n\tfunction _getInsertDirection(target) {\n\t\tvar dragElIndex = _index(dragEl),\n\t\t\ttargetIndex = _index(target);\n\n\t\tif (dragElIndex < targetIndex) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\treturn finder.index(el,function(el){\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== cloneEl && (!selector || finder.matches(el, selector))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\t\t\t\n\t\t})\n\t}\n\n\n\tfunction _saveInputCheckedState(root) {\n\t\tsavedInputChecked.length = 0;\n\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\tfunction _nextTick(fn) {\n\t\t//return setTimeout(fn, 0);\n\t\treturn langx.defer(fn);\n\t}\n\n\tfunction _cancelNextTick(id) {\n\t\t//return clearTimeout(id);\n\t\treturn id && id.stop();\n\t}\n\n\n\t/**\n\t * Returns the \"bounding client rect\" of given element\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\n\t * @return {Object}                        The boundingClientRect of el\n\t */\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\n\t\tif (!el.getBoundingClientRect && el !== win) return;\n\n\t\t/*\n\t\tvar elRect,\n\t\t\ttop,\n\t\t\tleft,\n\t\t\tbottom,\n\t\t\tright,\n\t\t\theight,\n\t\t\twidth;\n\n\t\tif (el !== win && el !== scrollingElement()) {\n\t\t\telRect = el.getBoundingClientRect();\n\t\t\ttop = elRect.top;\n\t\t\tleft = elRect.left;\n\t\t\tbottom = elRect.bottom;\n\t\t\tright = elRect.right;\n\t\t\theight = elRect.height;\n\t\t\twidth = elRect.width;\n\t\t} else {\n\t\t\ttop = 0;\n\t\t\tleft = 0;\n\t\t\tbottom = window.innerHeight;\n\t\t\tright = window.innerWidth;\n\t\t\theight = window.innerHeight;\n\t\t\twidth = window.innerWidth;\n\t\t}\n\n\t\tif (adjustForFixed && el !== win) {\n\t\t\t// Adjust for translate()\n\t\t\tcontainer = container || el.parentNode;\n\n\t\t\t// solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n\t\t\t// Not needed on <= IE11\n\t\t\tif (!IE11OrLess) {\n\t\t\t\tdo {\n\t\t\t\t\tif (container && container.getBoundingClientRect && styler.css(container, 'transform') !== 'none') {\n\t\t\t\t\t\tvar containerRect = container.getBoundingClientRect();\n\n\t\t\t\t\t\t// Set relative to edges of padding box of container\n\t\t\t\t\t\ttop -= containerRect.top + parseInt(styler.css(container, 'border-top-width'));\n\t\t\t\t\t\tleft -= containerRect.left + parseInt(styler.css(container, 'border-left-width'));\n\t\t\t\t\t\tbottom = top + elRect.height;\n\t\t\t\t\t\tright = left + elRect.width;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t//jshint boss:true \n\t\t\t\t} while (container = container.parentNode);\n\t\t\t}\n\t\t}\n\t\t*/\n\t\tvar {\n\t\t\ttop,\n\t\t\tleft,\n\t\t\tbottom,\n\t\t\tright,\n\t\t\twidth,\n\t\t\theight\n\t\t} = geom.boundingRect(el);\n\t\t\n\t\tif (adjustForTransform && el !== win) {\n\t\t\t// Adjust for scale()\n\t\t\tvar matrix = transforms.matrix(container || el),\n\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\tif (matrix) {\n\t\t\t\ttop /= scaleY;\n\t\t\t\tleft /= scaleX;\n\n\t\t\t\twidth /= scaleX;\n\t\t\t\theight /= scaleY;\n\n\t\t\t\tbottom = top + height;\n\t\t\t\tright = left + width;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\tbottom: bottom,\n\t\t\tright: right,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\n\n\t// Fixed #973:\n\teventer.on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = langx.mixin({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function() {\n\t\t\t\treturn _detectDirection(el, this.options);\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\tsupportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\tif (this.nativeDraggable) {\n\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\tthis.options.touchStartThreshold = 1;\n\t\t}\n\n\t\t// Bind events\n\t\ttouch.mousy(el);\n\n\t\teventer.on(el, 'mousedown', this._onTapStart);\n\n\t\tif (this.nativeDraggable) {\n\t\t\teventer.on(el, 'dragover', this);\n\t\t\teventer.on(el, 'dragenter', this);\n\t\t}\n\n\t\tsortables.push(this.el);\n\n\t\t// Restore sorting\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\t}\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target;\n\n\t\t\tif (ghostEl && !supportCssPointerEvents) {\n\t\t\t\t_hideGhostForTarget();\n\t\t\t\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t}\n\n\t\t\ttarget = finder.closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (finder.closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!finder.closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n\t\t},\n\n\n\t\t// handle moudedown event\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\t//if (!evt.cancelable) return;\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex,\n\t\t\t\tstartDraggableIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button and enabled\n\t\t\t}\n\n\t\t\t// cancel dnd if original target is content editable\n\t\t\tif (originalTarget.isContentEditable) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttarget = finder.closest(target, options.draggable, el, false);\n\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlog(\"_onTapStart\",target.tagName+\",\"+target.className);\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target);\n\t\t\tstartDraggableIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = finder.closest(originalTarget, criteria.trim(), el, false);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !finder.closest(originalTarget, options.handle, el, false)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\n\t\t},\n\n\n\t\t_handleAutoScroll: function(evt, fallback) {\n\n\t\t\tif (!dragEl || !this.options.scroll) return;\n\n\t\t\treturn autoscroll._handleAutoScroll(evt,this.options,fallback);\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\t\t\tlog(\"_prepareDragStart\",\"start\");\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\t\t\t\toldDraggableIndex = startDraggableIndex;\n\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: (touch || evt).clientX,\n\t\t\t\t\tclientY: (touch || evt).clientY\n\t\t\t\t};\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'all';\n\t\t\t\t// undo animation if needed\n\t\t\t\tdragEl.style.transition = '';\n\t\t\t\tdragEl.style.transform = '';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDragEvents();\n\n\t\t\t\t\tif (!FireFox && _this.nativeDraggable) {\n\t\t\t\t\t\tdragEl.draggable = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\tstyler.toggleClass(dragEl, options.chosenClass, true);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\teventer.on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n\t\t\t\teventer.on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n\t\t\t\t///eventer.on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n\n\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t///eventer.on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t///eventer.on(ownerDocument, 'touchcancel', _this._onDrop);\n\n\t\t\t\t// Make dragEl draggable (must be before delay for FireFox)\n\t\t\t\tif (FireFox && this.nativeDraggable) {\n\t\t\t\t\tthis.options.touchStartThreshold = 4;\n\t\t\t\t\tdragEl.draggable = true;\n\t\t\t\t}\n\n\t\t\t\t// Delay is impossible for native DnD in Edge or IE\n\t\t\t\tif (options.delay && (options.delayOnTouchOnly ? touch : true) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\teventer.on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\teventer.on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\t//eventer.on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\t//options.supportPointer && eventer.on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\n\t\t\tif (max(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\n\t\t\t\t\t>= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))\n\t\t\t) {\n\t\t\t\tthis._disableDelayedDrag();\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tdragEl && _disableDraggable(dragEl);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\tthis._disableDelayedDragEvents();\n\t\t},\n\n\t\t_disableDelayedDragEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\t\t\teventer.off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\teventer.off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n\t\t},\n\n\t\t//native dnd mode : register _OnDragStart for dragstart event handler \n\t\t//moused dnd mode : register  _onTouchMove for mousemove event hander, _onTouchMove calls _OnDragStart\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\tlog(\"_triggerDragStart\",\"start\");\n\t\t\tlog(\"_triggerDragStart\",\"nativeDraggable is \" +  this.nativeDraggable);\n\t\t\tif (!this.nativeDraggable) {\n\t\t\t\teventer.on(document, 'mousemove', this._onTouchMove);\n\t\t\t} else {\n\t\t\t\teventer.on(dragEl, 'dragend', this);\n\t\t\t\teventer.on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\t_nextTick(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t//\n\t\t//\n\t\t_dragStarted: function (fallback, evt) {\n\t\t\tawaitingDragStarted = false;\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\teventer.on(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t\teventer.on(document, 'dragover', _checkAlignment);\n\t\t\t\t}\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, false);\n\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\n\n\t\t\t\t// In case dragging an animated element\n\t\t\t\tstyler.css(dragEl, 'transform', '');\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\tfallback && this._appendGhost();\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function (forAutoScroll) {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\t_hideGhostForTarget();\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\tvar parent = target;\n\n\t\t\t\twhile (target && target.shadowRoot) {\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\t\tif (target === parent) break;\n\t\t\t\t\tparent = target;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\tvar inserted;\n\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (inserted && !this.options.dragoverBubble) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\n\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\n\t\t\tlog(\"_onTouchMove\",\"start\");\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tmatrix = ghostEl && transforms.matrix(ghostEl),\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\n\t\t\t\t\trelativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && _getRelativeScrollOffset(ghostRelativeParent),\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX)\n\t\t\t\t\t\t\t+ fallbackOffset.x) / (scaleX || 1)\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY)\n\t\t\t\t\t\t\t+ fallbackOffset.y) / (scaleY || 1)\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active && !awaitingDragStarted) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDragStart(evt, true);\n\t\t\t\t}\n\n\t\t\t\t!forAutoScroll && this._handleAutoScroll(touch, true);\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\tif (ghostEl) {\n\t\t\t\t\tstyler.css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t\tstyler.css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t\tstyler.css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t\tstyler.css(ghostEl, 'transform', translate3d);\n\n\t\t\t\t}\n\n\t\t\t\t//evt.cancelable && evt.preventDefault();\n\t\t\t\tevt.preventDefault()\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\n\t\t\t// Not being adjusted for\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar container = this.options.fallbackOnBody ? document.body : rootEl,\n\t\t\t\t\trect = _getRect(dragEl, true, container, !PositionGhostAbsolutely),\n\t\t\t\t\tcss = styler.css(dragEl),\n\t\t\t\t\toptions = this.options;\n\n\t\t\t\t// Position absolutely\n\t\t\t\tif (PositionGhostAbsolutely) {\n\t\t\t\t\t// Get relatively positioned parent\n\t\t\t\t\tghostRelativeParent = container;\n\n\t\t\t\t\twhile (\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'position') === 'static' &&\n\t\t\t\t\t\tstyler.css(ghostRelativeParent, 'transform') === 'none' &&\n\t\t\t\t\t\tghostRelativeParent !== document\n\t\t\t\t\t) {\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document) {\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\n\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n\t\t\t\t\t\tif (ghostRelativeParent === document) ghostRelativeParent = scrollingElement();\n\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tghostRelativeParent = scrollingElement();\n\t\t\t\t\t}\n\t\t\t\t\tghostRelativeParentInitialScroll = _getRelativeScrollOffset(ghostRelativeParent);\n\t\t\t\t}\n\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\tstyler.toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\tstyler.toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\tstyler.toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\tstyler.css(ghostEl, 'box-sizing', 'border-box');\n\t\t\t\tstyler.css(ghostEl, 'margin', 0);\n\t\t\t\tstyler.css(ghostEl, 'top', rect.top);\n\t\t\t\tstyler.css(ghostEl, 'left', rect.left);\n\t\t\t\tstyler.css(ghostEl, 'width', rect.width);\n\t\t\t\tstyler.css(ghostEl, 'height', rect.height);\n\t\t\t\tstyler.css(ghostEl, 'opacity', '0.8');\n\t\t\t\tstyler.css(ghostEl, 'position', (PositionGhostAbsolutely ? 'absolute' : 'fixed'));\n\t\t\t\tstyler.css(ghostEl, 'zIndex', '100000');\n\t\t\t\tstyler.css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\tcontainer.appendChild(ghostEl);\n\t\t\t}\n\t\t},\n\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = geom.boundingRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = geom.boundingRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = transforms.matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\tstyler.css(target, 'transition', 'none');\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._repaint(target);\n\t\t\t\t\tstyler.css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\tstyler.css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\tstyler.css(target, 'transition', '');\n\t\t\t\t\tstyler.css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_repaint: function(target) {\n\t\t\treturn target.offsetWidth;\n\t\t},\n\n\t\t_offMoveEvents: function() {\n\t\t\teventer.off(document, 'dragover', nearestEmptyInsertDetectEvent);\n\t\t\teventer.off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\teventer.off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\teventer.off(document, 'selectstart', this);\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\n\t\t\tvar _this = this;\n\t\t\tvar dataTransfer = evt.dataTransfer;\n\t\t\tvar options = _this.options;\n\n\t\t\t// Setup clone\n\t\t\tcloneEl = noder.clone(dragEl,true);\n\n\t\t\tcloneEl.draggable = false;\n\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\tthis._hideClone();\n\n\t\t\tstyler.toggleClass(cloneEl, _this.options.chosenClass, false);\n\n\n\t\t\t// #1143: IFrame support workaround\n\t\t\t_this._cloneId = _nextTick(function () {\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t}\n\t\t\t\t_dispatchEvent(_this, rootEl, 'clone', dragEl);\n\t\t\t});\n\n\n\t\t\t!fallback && styler.toggleClass(dragEl, options.dragClass, true);\n\n\t\t\t// Set proper drop events\n\t\t\tif (fallback) {\n\t\t\t\tignoreNextClick = true;\n\t\t\t\t_this._loopId = setInterval(_this._emulateDragOver, 50);\n\t\t\t} else {\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\n\t\t\t\teventer.off(document, 'mouseup', _this._onDrop);\n\t\t\t\t///eventer.off(document, 'touchend', _this._onDrop);\n\t\t\t\t///eventer.off(document, 'touchcancel', _this._onDrop);\n\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\teventer.on(document, 'drop', _this);\n\n\t\t\t\t// #1276 fix:\n\t\t\t\tstyler.css(dragEl, 'transform', 'translateZ(0)');\n\t\t\t}\n\n\t\t\tawaitingDragStarted = true;\n\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n\t\t\teventer.on(document, 'selectstart', _this);\n\t\t\tif (Safari) {\n\t\t\t\tstyler.css(document.body, 'user-select', 'none');\n\t\t\t}\n\t\t},\n\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this;\n\n\t\t\tif (_silent) return;\n\n\t\t\t// Return invocation when dragEl is inserted (or completed)\n\t\t\tfunction completed(insertion) {\n\t\t\t\tif (insertion) {\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(_this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (activeSortable) {\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t\tstyler.toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (putSortable !== _this && _this !== Sortable.active) {\n\t\t\t\t\t\tputSortable = _this;\n\t\t\t\t\t} else if (_this === Sortable.active) {\n\t\t\t\t\t\tputSortable = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Animation\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t_this._handleAutoScroll(evt);\n\t\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(evt);\n\n\t\t\t\t\t// Do not detect for empty insert if already inserted\n\t\t\t\t\t!insertion && nearestEmptyInsertDetectEvent(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl), oldDraggableIndex, _index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = finder.closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\n\t\t\t\treturn completed(false);\n\t\t\t}\n\n\t\t\tif (target !== dragEl) {\n\t\t\t\tignoreNextClick = false;\n\t\t\t}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = geom.boundingRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed(true);\n\t\t\t\t}\n\n\t\t\t\tvar elLastChild = _lastChild(el);\n\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\n\t\t\t\t\t// assign target only if condition is true\n\t\t\t\t\tif (elLastChild && el === evt.target) {\n\t\t\t\t\t\ttarget = elLastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\n\t\t\t\t\t\tscrolledPastTop = autoscroll._isScrolledPast(target, 'top') || autoscroll._isScrolledPast(dragEl, 'top'),\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = geom.boundingRect(target)[side1];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed(false);\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = geom.boundingRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\n\t\t\t\t\t\tif (scrolledPastTop) {\n\t\t\t\t\t\t\tgeom.scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - geom.boundingRect(target)[side1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t\n\t\t\tautoscroll._clearAutoScrolls();\n\t\t\tautoscroll._cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\n\t\t\t// Unbind events\n\t\t\teventer.off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(document, 'drop', this);\n\t\t\t\teventer.off(el, 'dragstart', this._onDragStart);\n\t\t\t\teventer.off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\teventer.off(document, 'dragover', _checkAlignment);\n\t\t\t}\n\n\t\t\tif (Safari) {\n\t\t\t\tstyler.css(document.body, 'user-select', '');\n\t\t\t}\n\n\t\t\tthis._offMoveEvents();\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\teventer.off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\tstyler.toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\tstyler.toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\t\t\tautoscroll.autoScrolls.length =\n\n\t\t\tpointerElemChangedInterval =\n\t\t\tlastPointerElemX =\n\t\t\tlastPointerElemY =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\toldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\trealDragElRect =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (finder.closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (finder.closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn finder.closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\teventer.off(el, 'mousedown', this._onTapStart);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\teventer.off(el, 'dragover', this);\n\t\t\t\teventer.off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tthis._onDrop();\n\n\t\t\tsortables.splice(sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t},\n\n\t\t_hideClone: function() {\n\t\t\tif (!cloneEl.cloneHidden) {\n\t\t\t\tstyler.css(cloneEl, 'display', 'none');\n\t\t\t\tcloneEl.cloneHidden = true;\n\t\t\t\tif (cloneEl.parentNode && this.options.removeCloneOnHide) {\n\t\t\t\t\tcloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_showClone: function(putSortable) {\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\n\t\t\t\tthis._hideClone();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cloneEl.cloneHidden) {\n\t\t\t\t// show clone at dragEl or original position\n\t\t\t\tif (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t} else if (nextEl) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t} else {\n\t\t\t\t\trootEl.appendChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.group.revertClone) {\n\t\t\t\t\tthis._animate(dragEl, cloneEl);\n\t\t\t\t}\n\t\t\t\tstyler.css(cloneEl, 'display', '');\n\t\t\t\tcloneEl.cloneHidden = false;\n\t\t\t}\n\t\t}\n\t};\n\n\n    function _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\tfunction _dispatchEvent(\n\t\tsortable, rootEl, name,\n\t\ttargetEl, toEl, fromEl,\n\t\tstartIndex, newIndex,\n\t\tstartDraggableIndex, newDraggableIndex,\n\t\toriginalEvt\n\t) {\n\t\tsortable = (sortable || rootEl[expando]);\n\t\tvar evt,\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\n\t\tevt = eventer.create(name,{\n\t\t\tto : toEl || rootEl,\n\t\t\tfrom : fromEl || rootEl,\n\t\t\titem : targetEl || rootEl,\n\t\t\tclone : cloneEl,\n\t\t\toldIndex : startIndex,\n\t\t\tnewIndex : newIndex,\n\t\t\toldDraggableIndex : startDraggableIndex,\n\t\t\tnewDraggableIndex : newDraggableIndex,\n\t\t\toriginalEvent : originalEvt,\n\t\t\tpullMode : putSortable ? putSortable.lastPutMode : undefined\n\t\t});\n\t\tif (rootEl) {\n\t\t\trootEl.dispatchEvent(evt);\n\t\t}\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\n\t\tevt = eventer.create(\"move\",{\n\t\t\tto : toEl,\n\t\t\tfrom : fromEl,\n\t\t\tdragged : dragEl,\n\t\t\tdraggedRect: dragRect,\n\t\t\trelated : targetEl || toEl,\n\t\t\trelatedRect : targetRect || geom.boundingRect(toEl),\n\t\t\twillInsertAfter : willInsertAfter,\n\t\t\toriginalEvent : originalEvt\n\t\t});\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: eventer.on,\n\t\toff: eventer.off,\n\t\tcss: styler.css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!finder.closest(el, selector, el, false);\n\t\t},\n\t\textend: langx.mixin,\n\t\tthrottle: autoscroll._throttle,\n\t\tclosest: finder.closest,\n\t\ttoggleClass: styler.toggleClass,\n\t\tclone: \tfunction (el) {\n\t\t\t\t\treturn noder.clone(el,true);\n\t\t\t\t},\n\t\tindex: _index,\n\t\tnextTick: _nextTick,\n\t\tcancelNextTick: _cancelNextTick,\n\t\tdetectDirection: _detectDirection,\n\t\tgetChild: function(el, childNum, options) {\n\t\t\toptions.excluding = [];\n\t\t\toptions.closesting = options.draggable;\n\t\t\treturn finder.childAt(el,childNum,options);\n\t\t}\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"intg.Sortable\",Sortable);\n});\n\ndefine('skylark-sortable/main',[\r\n\t\"./Sortable\"\r\n],function(Sortable){\r\n\treturn Sortable;\r\n});\ndefine('skylark-sortable', ['skylark-sortable/main'], function (main) { return main; });\n\n"]}