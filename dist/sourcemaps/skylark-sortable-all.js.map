{"version":3,"sources":["skylark-sortable-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","dragEl","parentEl","ghostEl","cloneEl","rootEl","nextEl","lastDownEl","scrollEl","scrollParentEl","scrollCustomFn","oldIndex","newIndex","oldDraggableIndex","newDraggableIndex","activeGroup","putSortable","pointerElemChangedInterval","lastPointerElemX","lastPointerElemY","tapEvt","touchEvt","moved","lastTarget","lastDirection","lastMode","targetMoveDistance","ghostRelativeParent","realDragElRect","autoScrolls","scrolling","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","R_SPACE","expando","Date","getTime","win","window","document","parseInt","setTimeout","$","jQuery","Zepto","Polymer","captureMode","capture","passive","IE11OrLess","navigator","userAgent","match","Edge","FireFox","Safari","IOS","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","createElement","supportCssPointerEvents","el","style","cssText","pointerEvents","_silent","_alignedSilent","abs","Math","min","max","savedInputChecked","_detectDirection","options","elCSS","_css","elWidth","width","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","_getChild","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","_getRect","secondChildWidth","display","flexDirection","gridTemplateColumns","float","touchingSideChild2","clear","_getParentAutoScrollElement","includeSelf","getBoundingClientRect","_getWindowScrollingElement","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","parentNode","documentElement","scrollingElement","_scrollBy","x","y","scrollLeft","scrollTop","_autoScroll","_throttle","evt","isFallback","scroll","_this","sens","scrollSensitivity","speed","scrollSpeed","clientX","clientY","winScroller","scrollThisInstance","_clearAutoScrolls","scrollFn","layersOut","currentParent","css","vx","vy","canScrollX","canScrollY","scrollPosX","scrollPosY","rect","top","bottom","left","right","height","clearInterval","pid","setInterval","this","layer","Sortable","active","_emulateDragOver","_onTouchMove","scrollOffsetY","scrollOffsetX","call","bind","bubbleScroll","forEach","autoScroll","_prepareGroup","toFn","value","pull","to","from","sameGroup","group","otherGroup","join","indexOf","originalGroup","checkPull","checkPut","put","revertClone","_checkAlignment","_computeIsAligned","_hideGhostForTarget","_unhideGhostForTarget","addEventListener","preventDefault","stopPropagation","stopImmediatePropagation","_throttleTimeout","nearestEmptyInsertDetectEvent","nearest","_lastChild","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_detectNearestEmptySortable","touches","event","target","_onDragOver","nodeType","toString","_extend","defaults","sort","disabled","store","handle","draggable","test","nodeName","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","filter","preventOnFilter","animation","easing","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","fn","charAt","nativeDraggable","_on","_onTapStart","push","get","_closest","selector","ctx","includeCTX","_matches","_getParentOrHost","host","_off","removeEventListener","_toggleClass","state","classList","className","replace","prop","val","defaultView","getComputedStyle","currentStyle","_matrix","appliedTransforms","transform","DOMMatrix","WebKitCSSMatrix","CSSMatrix","_find","tagName","iterator","list","getElementsByTagName","n","_dispatchEvent","sortable","targetEl","toEl","fromEl","startIndex","startDraggableIndex","originalEvt","onName","toUpperCase","substr","CustomEvent","createEvent","initEvent","bubbles","cancelable","item","clone","originalEvent","pullMode","lastPutMode","undefined","dispatchEvent","_onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","dragged","draggedRect","related","relatedRect","_disableDraggable","_unsilent","childNum","currentChild","children","last","lastElementChild","previousElementSibling","_getInsertDirection","dragElIndex","_index","targetIndex","_generateId","str","src","href","sum","charCodeAt","index","substring","matches","msMatchesSelector","webkitMatchesSelector","_","callback","ms","args","arguments","apply","dst","key","hasOwnProperty","_clone","dom","cloneNode","_nextTick","_cancelNextTick","id","clearTimeout","adjustForTransform","container","adjustForFixed","elRect","innerHeight","innerWidth","containerRect","matrix","scaleX","a","scaleY","d","_isScrolledPast","side","parent","elSide","parentSide","_getRelativeScrollOffset","offsetLeft","offsetTop","prototype","constructor","elementFromPoint","axis","targetS1Opp","targetS2Opp","mouseOnOppAxis","sortableMouseAligned","_getDirection","type","touch","originalTarget","shadowRoot","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","some","criteria","trim","_prepareDragStart","_handleAutoScroll","fallback","ogElemScroller","newElem","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","transition","_disableDelayedDragEvents","_triggerDragStart","_onDrop","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","e","floor","pointerType","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","_appendGhost","_nulling","forAutoScroll","relativeScrollOffset","dx","dy","translate3d","ghostRelativeParentRect","appendChild","_hideClone","_cloneId","insertBefore","_loopId","effectAllowed","_dragStartId","revert","activeSortable","isOwner","canSort","contains","animated","completed","elLastChild","mouseOnAxis","targetS2","_ghostIsLast","_showClone","changed","targetBeforeFirstSwap","aligned","differentLevel","side1","scrolledPastTop","scrollBefore","el1","el2","el1Rect","el2Rect","el1S1Opp","el1S2Opp","el1OppLength","el2S1Opp","el2S2Opp","el2OppLength","_isElInRowColumn","isLastTarget","targetLength","targetS1","invert","_getSwapDirection","nextElementSibling","after","moveVector","insertion","_animate","prevRect","currentRect","_repaint","offsetWidth","_offMoveEvents","_offUpEvents","removeChild","save","handleEvent","dropEffect","_globalDragOver","toArray","order","getAttribute","items","set","closest","option","destroy","Array","querySelectorAll","removeAttribute","splice","cloneHidden","utils","on","off","find","is","extend","throttle","toggleClass","nextTick","cancelNextTick","detectDirection","getChild","create","version","main"],"mappings":"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","file":"../skylark-sortable-all.js","sourcesContent":["define('skylark-langx/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx/skylark',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-sortable/Sortable',[\n\t\"skylark-langx/skylark\"\n],function(skylark){\n\n\tvar dragEl,\n\t\tparentEl,\n\t\tghostEl,\n\t\tcloneEl,\n\t\trootEl,\n\t\tnextEl,\n\t\tlastDownEl,\n\n\t\tscrollEl,\n\t\tscrollParentEl,\n\t\tscrollCustomFn,\n\n\t\toldIndex,\n\t\tnewIndex,\n\t\toldDraggableIndex,\n\t\tnewDraggableIndex,\n\n\t\tactiveGroup,\n\t\tputSortable,\n\n\t\tautoScrolls = [],\n\t\tscrolling = false,\n\n\t\tawaitingDragStarted = false,\n\t\tignoreNextClick = false,\n\t\tsortables = [],\n\n\t\tpointerElemChangedInterval,\n\t\tlastPointerElemX,\n\t\tlastPointerElemY,\n\n\t\ttapEvt,\n\t\ttouchEvt,\n\n\t\tmoved,\n\n\n\t\tlastTarget,\n\t\tlastDirection,\n\t\tpastFirstInvertThresh = false,\n\t\tisCircumstantialInvert = false,\n\t\tlastMode, // 'swap' or 'insert'\n\n\t\ttargetMoveDistance,\n\n\t\t// For positioning ghost absolutely\n\t\tghostRelativeParent,\n\t\tghostRelativeParentInitialScroll = [], // (left, top)\n\n\t\trealDragElRect, // dragEl rect after current animation\n\n\t\t/** @const */\n\t\tR_SPACE = /\\s+/g,\n\n\t\texpando = 'Sortable' + (new Date).getTime(),\n\n\t\twin = window,\n\t\tdocument = win.document,\n\t\tparseInt = win.parseInt,\n\t\tsetTimeout = win.setTimeout,\n\n\t\t$ = win.jQuery || win.Zepto,\n\t\tPolymer = win.Polymer,\n\n\t\tcaptureMode = {\n\t\t\tcapture: false,\n\t\t\tpassive: false\n\t\t},\n\n\t\tIE11OrLess = !!navigator.userAgent.match(/(?:Trident.*rv[ :]?11\\.|msie|iemobile)/i),\n\t\tEdge = !!navigator.userAgent.match(/Edge/i),\n\t\tFireFox = !!navigator.userAgent.match(/firefox/i),\n\t\tSafari = !!(navigator.userAgent.match(/safari/i) && !navigator.userAgent.match(/chrome/i) && !navigator.userAgent.match(/android/i)),\n\t\tIOS = !!(navigator.userAgent.match(/iP(ad|od|hone)/i)),\n\n\t\tPositionGhostAbsolutely = IOS,\n\n\t\tCSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n\n\t\t// This will not pass for IE9, because IE9 DnD only works on anchors\n\t\tsupportDraggable = ('draggable' in document.createElement('div')),\n\n\t\tsupportCssPointerEvents = (function() {\n\t\t\t// false when <= IE11\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar el = document.createElement('x');\n\t\t\tel.style.cssText = 'pointer-events:auto';\n\t\t\treturn el.style.pointerEvents === 'auto';\n\t\t})(),\n\n\t\t_silent = false,\n\t\t_alignedSilent = false,\n\n\t\tabs = Math.abs,\n\t\tmin = Math.min,\n\t\tmax = Math.max,\n\n\t\tsavedInputChecked = [],\n\n\t\t_detectDirection = function(el, options) {\n\t\t\tvar elCSS = _css(el),\n\t\t\t\telWidth = parseInt(elCSS.width)\n\t\t\t\t\t- parseInt(elCSS.paddingLeft)\n\t\t\t\t\t- parseInt(elCSS.paddingRight)\n\t\t\t\t\t- parseInt(elCSS.borderLeftWidth)\n\t\t\t\t\t- parseInt(elCSS.borderRightWidth),\n\t\t\t\tchild1 = _getChild(el, 0, options),\n\t\t\t\tchild2 = _getChild(el, 1, options),\n\t\t\t\tfirstChildCSS = child1 && _css(child1),\n\t\t\t\tsecondChildCSS = child2 && _css(child2),\n\t\t\t\tfirstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + _getRect(child1).width,\n\t\t\t\tsecondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + _getRect(child2).width;\n\n\t\t\tif (elCSS.display === 'flex') {\n\t\t\t\treturn elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse'\n\t\t\t\t? 'vertical' : 'horizontal';\n\t\t\t}\n\n\t\t\tif (elCSS.display === 'grid') {\n\t\t\t\treturn elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n\t\t\t}\n\n\t\t\tif (child1 && firstChildCSS.float !== 'none') {\n\t\t\t\tvar touchingSideChild2 = firstChildCSS.float === 'left' ? 'left' : 'right';\n\n\t\t\t\treturn child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ?\n\t\t\t\t\t'vertical' : 'horizontal';\n\t\t\t}\n\n\t\t\treturn (child1 &&\n\t\t\t\t(\n\t\t\t\t\tfirstChildCSS.display === 'block' ||\n\t\t\t\t\tfirstChildCSS.display === 'flex' ||\n\t\t\t\t\tfirstChildCSS.display === 'table' ||\n\t\t\t\t\tfirstChildCSS.display === 'grid' ||\n\t\t\t\t\tfirstChildWidth >= elWidth &&\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' ||\n\t\t\t\t\tchild2 &&\n\t\t\t\t\telCSS[CSSFloatProperty] === 'none' &&\n\t\t\t\t\tfirstChildWidth + secondChildWidth > elWidth\n\t\t\t\t) ?\n\t\t\t\t'vertical' : 'horizontal'\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n\t\t * @param  {Number} x      X position\n\t\t * @param  {Number} y      Y position\n\t\t * @return {HTMLElement}   Element of the first found nearest Sortable\n\t\t */\n\t\t_detectNearestEmptySortable = function(x, y) {\n\t\t\tfor (var i = 0; i < sortables.length; i++) {\n\t\t\t\tif (_lastChild(sortables[i])) continue;\n\n\t\t\t\tvar rect = _getRect(sortables[i]),\n\t\t\t\t\tthreshold = sortables[i][expando].options.emptyInsertThreshold,\n\t\t\t\t\tinsideHorizontally = x >= (rect.left - threshold) && x <= (rect.right + threshold),\n\t\t\t\t\tinsideVertically = y >= (rect.top - threshold) && y <= (rect.bottom + threshold);\n\n\t\t\t\tif (threshold && insideHorizontally && insideVertically) {\n\t\t\t\t\treturn sortables[i];\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_isClientInRowColumn = function(x, y, el, axis, options) {\n\t\t\tvar targetRect = _getRect(el),\n\t\t\t\ttargetS1Opp = axis === 'vertical' ? targetRect.left : targetRect.top,\n\t\t\t\ttargetS2Opp = axis === 'vertical' ? targetRect.right : targetRect.bottom,\n\t\t\t\tmouseOnOppAxis = axis === 'vertical' ? x : y;\n\n\t\t\treturn targetS1Opp < mouseOnOppAxis && mouseOnOppAxis < targetS2Opp;\n\t\t},\n\n\t\t_isElInRowColumn = function(el1, el2, axis) {\n\t\t\tvar el1Rect = el1 === dragEl && realDragElRect || _getRect(el1),\n\t\t\t\tel2Rect = el2 === dragEl && realDragElRect || _getRect(el2),\n\t\t\t\tel1S1Opp = axis === 'vertical' ? el1Rect.left : el1Rect.top,\n\t\t\t\tel1S2Opp = axis === 'vertical' ? el1Rect.right : el1Rect.bottom,\n\t\t\t\tel1OppLength = axis === 'vertical' ? el1Rect.width : el1Rect.height,\n\t\t\t\tel2S1Opp = axis === 'vertical' ? el2Rect.left : el2Rect.top,\n\t\t\t\tel2S2Opp = axis === 'vertical' ? el2Rect.right : el2Rect.bottom,\n\t\t\t\tel2OppLength = axis === 'vertical' ? el2Rect.width : el2Rect.height;\n\n\t\t\treturn (\n\t\t\t\tel1S1Opp === el2S1Opp ||\n\t\t\t\tel1S2Opp === el2S2Opp ||\n\t\t\t\t(el1S1Opp + el1OppLength / 2) === (el2S1Opp + el2OppLength / 2)\n\t\t\t);\n\t\t},\n\n\t\t_getParentAutoScrollElement = function(el, includeSelf) {\n\t\t\t// skip to window\n\t\t\tif (!el || !el.getBoundingClientRect) return _getWindowScrollingElement();\n\n\t\t\tvar elem = el;\n\t\t\tvar gotSelf = false;\n\t\t\tdo {\n\t\t\t\t// we don't need to get elem css if it isn't even overflowing in the first place (performance)\n\t\t\t\tif (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n\t\t\t\t\tvar elemCSS = _css(elem);\n\t\t\t\t\tif (\n\t\t\t\t\t\telem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') ||\n\t\t\t\t\t\telem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')\n\t\t\t\t\t) {\n\t\t\t\t\t\tif (!elem || !elem.getBoundingClientRect || elem === document.body) return _getWindowScrollingElement();\n\n\t\t\t\t\t\tif (gotSelf || includeSelf) return elem;\n\t\t\t\t\t\tgotSelf = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t/* jshint boss:true */\n\t\t\t} while (elem = elem.parentNode);\n\n\t\t\treturn _getWindowScrollingElement();\n\t\t},\n\n\t\t_getWindowScrollingElement = function() {\n\t\t\tif (IE11OrLess) {\n\t\t\t\treturn document.documentElement;\n\t\t\t} else {\n\t\t\t\treturn document.scrollingElement;\n\t\t\t}\n\t\t},\n\n\t\t_scrollBy = function(el, x, y) {\n\t\t\tel.scrollLeft += x;\n\t\t\tel.scrollTop += y;\n\t\t},\n\n\t\t_autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl, /**Boolean*/isFallback) {\n\t\t\t// Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n\t\t\tif (options.scroll) {\n\t\t\t\tvar _this = rootEl ? rootEl[expando] : window,\n\t\t\t\t\tsens = options.scrollSensitivity,\n\t\t\t\t\tspeed = options.scrollSpeed,\n\n\t\t\t\t\tx = evt.clientX,\n\t\t\t\t\ty = evt.clientY,\n\n\t\t\t\t\twinScroller = _getWindowScrollingElement(),\n\n\t\t\t\t\tscrollThisInstance = false;\n\n\t\t\t\t// Detect scrollEl\n\t\t\t\tif (scrollParentEl !== rootEl) {\n\t\t\t\t\t_clearAutoScrolls();\n\n\t\t\t\t\tscrollEl = options.scroll;\n\t\t\t\t\tscrollCustomFn = options.scrollFn;\n\n\t\t\t\t\tif (scrollEl === true) {\n\t\t\t\t\t\tscrollEl = _getParentAutoScrollElement(rootEl, true);\n\t\t\t\t\t\tscrollParentEl = scrollEl;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\n\t\t\t\tvar layersOut = 0;\n\t\t\t\tvar currentParent = scrollEl;\n\t\t\t\tdo {\n\t\t\t\t\tvar\tel = currentParent,\n\t\t\t\t\t\trect = _getRect(el),\n\n\t\t\t\t\t\ttop = rect.top,\n\t\t\t\t\t\tbottom = rect.bottom,\n\t\t\t\t\t\tleft = rect.left,\n\t\t\t\t\t\tright = rect.right,\n\n\t\t\t\t\t\twidth = rect.width,\n\t\t\t\t\t\theight = rect.height,\n\n\t\t\t\t\t\tscrollWidth,\n\t\t\t\t\t\tscrollHeight,\n\n\t\t\t\t\t\tcss,\n\n\t\t\t\t\t\tvx,\n\t\t\t\t\t\tvy,\n\n\t\t\t\t\t\tcanScrollX,\n\t\t\t\t\t\tcanScrollY,\n\n\t\t\t\t\t\tscrollPosX,\n\t\t\t\t\t\tscrollPosY;\n\n\n\t\t\t\t\tscrollWidth = el.scrollWidth;\n\t\t\t\t\tscrollHeight = el.scrollHeight;\n\n\t\t\t\t\tcss = _css(el);\n\n\t\t\t\t\tscrollPosX = el.scrollLeft;\n\t\t\t\t\tscrollPosY = el.scrollTop;\n\n\t\t\t\t\tif (el === winScroller) {\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll' || css.overflowX === 'visible');\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll' || css.overflowY === 'visible');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcanScrollX = width < scrollWidth && (css.overflowX === 'auto' || css.overflowX === 'scroll');\n\t\t\t\t\t\tcanScrollY = height < scrollHeight && (css.overflowY === 'auto' || css.overflowY === 'scroll');\n\t\t\t\t\t}\n\n\t\t\t\t\tvx = canScrollX && (abs(right - x) <= sens && (scrollPosX + width) < scrollWidth) - (abs(left - x) <= sens && !!scrollPosX);\n\n\t\t\t\t\tvy = canScrollY && (abs(bottom - y) <= sens && (scrollPosY + height) < scrollHeight) - (abs(top - y) <= sens && !!scrollPosY);\n\n\n\t\t\t\t\tif (!autoScrolls[layersOut]) {\n\t\t\t\t\t\tfor (var i = 0; i <= layersOut; i++) {\n\t\t\t\t\t\t\tif (!autoScrolls[i]) {\n\t\t\t\t\t\t\t\tautoScrolls[i] = {};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n\t\t\t\t\t\tautoScrolls[layersOut].el = el;\n\t\t\t\t\t\tautoScrolls[layersOut].vx = vx;\n\t\t\t\t\t\tautoScrolls[layersOut].vy = vy;\n\n\t\t\t\t\t\tclearInterval(autoScrolls[layersOut].pid);\n\n\t\t\t\t\t\tif (el && (vx != 0 || vy != 0)) {\n\t\t\t\t\t\t\tscrollThisInstance = true;\n\t\t\t\t\t\t\t/* jshint loopfunc:true */\n\t\t\t\t\t\t\tautoScrolls[layersOut].pid = setInterval((function () {\n\t\t\t\t\t\t\t\t// emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n\t\t\t\t\t\t\t\tif (isFallback && this.layer === 0) {\n\t\t\t\t\t\t\t\t\tSortable.active._emulateDragOver(true);\n\t\t\t\t\t\t\t\t\tSortable.active._onTouchMove(touchEvt, true);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n\t\t\t\t\t\t\t\tvar scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n\t\t\t\t\t\t\t\tif ('function' === typeof(scrollCustomFn)) {\n\t\t\t\t\t\t\t\t\tif (scrollCustomFn.call(_this, scrollOffsetX, scrollOffsetY, evt, touchEvt, autoScrolls[this.layer].el) !== 'continue') {\n\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t_scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n\t\t\t\t\t\t\t}).bind({layer: layersOut}), 24);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlayersOut++;\n\t\t\t\t} while (options.bubbleScroll && currentParent !== winScroller && (currentParent = _getParentAutoScrollElement(currentParent, false)));\n\t\t\t\tscrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n\t\t\t}\n\t\t}, 30),\n\n\t\t_clearAutoScrolls = function () {\n\t\t\tautoScrolls.forEach(function(autoScroll) {\n\t\t\t\tclearInterval(autoScroll.pid);\n\t\t\t});\n\t\t\tautoScrolls = [];\n\t\t},\n\n\t\t_prepareGroup = function (options) {\n\t\t\tfunction toFn(value, pull) {\n\t\t\t\treturn function(to, from, dragEl, evt) {\n\t\t\t\t\tvar sameGroup = to.options.group.name &&\n\t\t\t\t\t\t\t\t\tfrom.options.group.name &&\n\t\t\t\t\t\t\t\t\tto.options.group.name === from.options.group.name;\n\n\t\t\t\t\tif (value == null && (pull || sameGroup)) {\n\t\t\t\t\t\t// Default pull value\n\t\t\t\t\t\t// Default pull and put value if same group\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t} else if (value == null || value === false) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t} else if (pull && value === 'clone') {\n\t\t\t\t\t\treturn value;\n\t\t\t\t\t} else if (typeof value === 'function') {\n\t\t\t\t\t\treturn toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar otherGroup = (pull ? to : from).options.group.name;\n\n\t\t\t\t\t\treturn (value === true ||\n\t\t\t\t\t\t(typeof value === 'string' && value === otherGroup) ||\n\t\t\t\t\t\t(value.join && value.indexOf(otherGroup) > -1));\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar group = {};\n\t\t\tvar originalGroup = options.group;\n\n\t\t\tif (!originalGroup || typeof originalGroup != 'object') {\n\t\t\t\toriginalGroup = {name: originalGroup};\n\t\t\t}\n\n\t\t\tgroup.name = originalGroup.name;\n\t\t\tgroup.checkPull = toFn(originalGroup.pull, true);\n\t\t\tgroup.checkPut = toFn(originalGroup.put);\n\t\t\tgroup.revertClone = originalGroup.revertClone;\n\n\t\t\toptions.group = group;\n\t\t},\n\n\t\t_checkAlignment = function(evt) {\n\t\t\tif (!dragEl || !dragEl.parentNode) return;\n\t\t\tdragEl.parentNode[expando] && dragEl.parentNode[expando]._computeIsAligned(evt);\n\t\t},\n\n\t\t_hideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\t_css(ghostEl, 'display', 'none');\n\t\t\t}\n\t\t},\n\n\t\t_unhideGhostForTarget = function() {\n\t\t\tif (!supportCssPointerEvents && ghostEl) {\n\t\t\t\t_css(ghostEl, 'display', '');\n\t\t\t}\n\t\t};\n\n\n\t// #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\tdocument.addEventListener('click', function(evt) {\n\t\tif (ignoreNextClick) {\n\t\t\tevt.preventDefault();\n\t\t\tevt.stopPropagation && evt.stopPropagation();\n\t\t\tevt.stopImmediatePropagation && evt.stopImmediatePropagation();\n\t\t\tignoreNextClick = false;\n\t\t\treturn false;\n\t\t}\n\t}, true);\n\n\tvar nearestEmptyInsertDetectEvent = function(evt) {\n\t\tif (dragEl) {\n\t\t\tevt = evt.touches ? evt.touches[0] : evt;\n\t\t\tvar nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n\t\t\tif (nearest) {\n\t\t\t\t// Create imitation event\n\t\t\t\tvar event = {};\n\t\t\t\tfor (var i in evt) {\n\t\t\t\t\tevent[i] = evt[i];\n\t\t\t\t}\n\t\t\t\tevent.target = event.rootEl = nearest;\n\t\t\t\tevent.preventDefault = void 0;\n\t\t\t\tevent.stopPropagation = void 0;\n\t\t\t\tnearest[expando]._onDragOver(event);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * @class  Sortable\n\t * @param  {HTMLElement}  el\n\t * @param  {Object}       [options]\n\t */\n\tfunction Sortable(el, options) {\n\t\tif (!(el && el.nodeType && el.nodeType === 1)) {\n\t\t\tthrow 'Sortable: `el` must be HTMLElement, not ' + {}.toString.call(el);\n\t\t}\n\n\t\tthis.el = el; // root element\n\t\tthis.options = options = _extend({}, options);\n\n\n\t\t// Export instance\n\t\tel[expando] = this;\n\n\t\t// Default options\n\t\tvar defaults = {\n\t\t\tgroup: null,\n\t\t\tsort: true,\n\t\t\tdisabled: false,\n\t\t\tstore: null,\n\t\t\thandle: null,\n\t\t\tscroll: true,\n\t\t\tscrollSensitivity: 30,\n\t\t\tscrollSpeed: 10,\n\t\t\tbubbleScroll: true,\n\t\t\tdraggable: /[uo]l/i.test(el.nodeName) ? '>li' : '>*',\n\t\t\tswapThreshold: 1, // percentage; 0 <= x <= 1\n\t\t\tinvertSwap: false, // invert always\n\t\t\tinvertedSwapThreshold: null, // will be set to same as swapThreshold if default\n\t\t\tremoveCloneOnHide: true,\n\t\t\tdirection: function() {\n\t\t\t\treturn _detectDirection(el, this.options);\n\t\t\t},\n\t\t\tghostClass: 'sortable-ghost',\n\t\t\tchosenClass: 'sortable-chosen',\n\t\t\tdragClass: 'sortable-drag',\n\t\t\tignore: 'a, img',\n\t\t\tfilter: null,\n\t\t\tpreventOnFilter: true,\n\t\t\tanimation: 0,\n\t\t\teasing: null,\n\t\t\tsetData: function (dataTransfer, dragEl) {\n\t\t\t\tdataTransfer.setData('Text', dragEl.textContent);\n\t\t\t},\n\t\t\tdropBubble: false,\n\t\t\tdragoverBubble: false,\n\t\t\tdataIdAttr: 'data-id',\n\t\t\tdelay: 0,\n\t\t\tdelayOnTouchOnly: false,\n\t\t\ttouchStartThreshold: parseInt(window.devicePixelRatio, 10) || 1,\n\t\t\tforceFallback: false,\n\t\t\tfallbackClass: 'sortable-fallback',\n\t\t\tfallbackOnBody: false,\n\t\t\tfallbackTolerance: 0,\n\t\t\tfallbackOffset: {x: 0, y: 0},\n\t\t\tsupportPointer: Sortable.supportPointer !== false && ('PointerEvent' in window),\n\t\t\temptyInsertThreshold: 5\n\t\t};\n\n\n\t\t// Set default options\n\t\tfor (var name in defaults) {\n\t\t\t!(name in options) && (options[name] = defaults[name]);\n\t\t}\n\n\t\t_prepareGroup(options);\n\n\t\t// Bind all private methods\n\t\tfor (var fn in this) {\n\t\t\tif (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n\t\t\t\tthis[fn] = this[fn].bind(this);\n\t\t\t}\n\t\t}\n\n\t\t// Setup drag mode\n\t\tthis.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n\t\tif (this.nativeDraggable) {\n\t\t\t// Touch start threshold cannot be greater than the native dragstart threshold\n\t\t\tthis.options.touchStartThreshold = 1;\n\t\t}\n\n\t\t// Bind events\n\t\tif (options.supportPointer) {\n\t\t\t_on(el, 'pointerdown', this._onTapStart);\n\t\t} else {\n\t\t\t_on(el, 'mousedown', this._onTapStart);\n\t\t\t_on(el, 'touchstart', this._onTapStart);\n\t\t}\n\n\t\tif (this.nativeDraggable) {\n\t\t\t_on(el, 'dragover', this);\n\t\t\t_on(el, 'dragenter', this);\n\t\t}\n\n\t\tsortables.push(this.el);\n\n\t\t// Restore sorting\n\t\toptions.store && options.store.get && this.sort(options.store.get(this) || []);\n\t}\n\n\tSortable.prototype = /** @lends Sortable.prototype */ {\n\t\tconstructor: Sortable,\n\n\t\t_computeIsAligned: function(evt) {\n\t\t\tvar target;\n\n\t\t\tif (ghostEl && !supportCssPointerEvents) {\n\t\t\t\t_hideGhostForTarget();\n\t\t\t\ttarget = document.elementFromPoint(evt.clientX, evt.clientY);\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t} else {\n\t\t\t\ttarget = evt.target;\n\t\t\t}\n\n\t\t\ttarget = _closest(target, this.options.draggable, this.el, false);\n\t\t\tif (_alignedSilent) return;\n\t\t\tif (!dragEl || dragEl.parentNode !== this.el) return;\n\n\t\t\tvar children = this.el.children;\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\t\t\t\t// Don't change for target in case it is changed to aligned before onDragOver is fired\n\t\t\t\tif (_closest(children[i], this.options.draggable, this.el, false) && children[i] !== target) {\n\t\t\t\t\tchildren[i].sortableMouseAligned = _isClientInRowColumn(evt.clientX, evt.clientY, children[i], this._getDirection(evt, null), this.options);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Used for nulling last target when not in element, nothing to do with checking if aligned\n\t\t\tif (!_closest(target, this.options.draggable, this.el, true)) {\n\t\t\t\tlastTarget = null;\n\t\t\t}\n\n\t\t\t_alignedSilent = true;\n\t\t\tsetTimeout(function() {\n\t\t\t\t_alignedSilent = false;\n\t\t\t}, 30);\n\n\t\t},\n\n\t\t_getDirection: function(evt, target) {\n\t\t\treturn (typeof this.options.direction === 'function') ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n\t\t},\n\n\t\t_onTapStart: function (/** Event|TouchEvent */evt) {\n\t\t\tif (!evt.cancelable) return;\n\t\t\tvar _this = this,\n\t\t\t\tel = this.el,\n\t\t\t\toptions = this.options,\n\t\t\t\tpreventOnFilter = options.preventOnFilter,\n\t\t\t\ttype = evt.type,\n\t\t\t\ttouch = evt.touches && evt.touches[0],\n\t\t\t\ttarget = (touch || evt).target,\n\t\t\t\toriginalTarget = evt.target.shadowRoot && ((evt.path && evt.path[0]) || (evt.composedPath && evt.composedPath()[0])) || target,\n\t\t\t\tfilter = options.filter,\n\t\t\t\tstartIndex,\n\t\t\t\tstartDraggableIndex;\n\n\t\t\t_saveInputCheckedState(el);\n\n\t\t\t// Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\t\t\tif (dragEl) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n\t\t\t\treturn; // only left button and enabled\n\t\t\t}\n\n\t\t\t// cancel dnd if original target is content editable\n\t\t\tif (originalTarget.isContentEditable) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttarget = _closest(target, options.draggable, el, false);\n\n\n\t\t\tif (lastDownEl === target) {\n\t\t\t\t// Ignoring duplicate `down`\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Get the index of the dragged element within its parent\n\t\t\tstartIndex = _index(target);\n\t\t\tstartDraggableIndex = _index(target, options.draggable);\n\n\t\t\t// Check filter\n\t\t\tif (typeof filter === 'function') {\n\t\t\t\tif (filter.call(this, evt, target, this)) {\n\t\t\t\t\t_dispatchEvent(_this, originalTarget, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (filter) {\n\t\t\t\tfilter = filter.split(',').some(function (criteria) {\n\t\t\t\t\tcriteria = _closest(originalTarget, criteria.trim(), el, false);\n\n\t\t\t\t\tif (criteria) {\n\t\t\t\t\t\t_dispatchEvent(_this, criteria, 'filter', target, el, el, startIndex, undefined, startDraggableIndex);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (filter) {\n\t\t\t\t\tpreventOnFilter && evt.cancelable && evt.preventDefault();\n\t\t\t\t\treturn; // cancel dnd\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.handle && !_closest(originalTarget, options.handle, el, false)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Prepare `dragstart`\n\t\t\tthis._prepareDragStart(evt, touch, target, startIndex, startDraggableIndex);\n\t\t},\n\n\n\t\t_handleAutoScroll: function(evt, fallback) {\n\t\t\tif (!dragEl || !this.options.scroll) return;\n\t\t\tvar x = evt.clientX,\n\t\t\t\ty = evt.clientY,\n\n\t\t\t\telem = document.elementFromPoint(x, y),\n\t\t\t\t_this = this;\n\n\t\t\t// IE does not seem to have native autoscroll,\n\t\t\t// Edge's autoscroll seems too conditional,\n\t\t\t// MACOS Safari does not have autoscroll,\n\t\t\t// Firefox and Chrome are good\n\t\t\tif (fallback || Edge || IE11OrLess || Safari) {\n\t\t\t\t_autoScroll(evt, _this.options, elem, fallback);\n\n\t\t\t\t// Listener for pointer element change\n\t\t\t\tvar ogElemScroller = _getParentAutoScrollElement(elem, true);\n\t\t\t\tif (\n\t\t\t\t\tscrolling &&\n\t\t\t\t\t(\n\t\t\t\t\t\t!pointerElemChangedInterval ||\n\t\t\t\t\t\tx !== lastPointerElemX ||\n\t\t\t\t\t\ty !== lastPointerElemY\n\t\t\t\t\t)\n\t\t\t\t) {\n\n\t\t\t\t\tpointerElemChangedInterval && clearInterval(pointerElemChangedInterval);\n\t\t\t\t\t// Detect for pointer elem change, emulating native DnD behaviour\n\t\t\t\t\tpointerElemChangedInterval = setInterval(function() {\n\t\t\t\t\t\tif (!dragEl) return;\n\t\t\t\t\t\t// could also check if scroll direction on newElem changes due to parent autoscrolling\n\t\t\t\t\t\tvar newElem = _getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\t\t\t\t\t\tif (newElem !== ogElemScroller) {\n\t\t\t\t\t\t\togElemScroller = newElem;\n\t\t\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\t\t\t_autoScroll(evt, _this.options, ogElemScroller, fallback);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, 10);\n\t\t\t\t\tlastPointerElemX = x;\n\t\t\t\t\tlastPointerElemY = y;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n\t\t\t\tif (!_this.options.bubbleScroll || _getParentAutoScrollElement(elem, true) === _getWindowScrollingElement()) {\n\t\t\t\t\t_clearAutoScrolls();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t_autoScroll(evt, _this.options, _getParentAutoScrollElement(elem, false), false);\n\t\t\t}\n\t\t},\n\n\t\t_prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target, /** Number */startIndex, /** Number */startDraggableIndex) {\n\t\t\tvar _this = this,\n\t\t\t\tel = _this.el,\n\t\t\t\toptions = _this.options,\n\t\t\t\townerDocument = el.ownerDocument,\n\t\t\t\tdragStartFn;\n\n\t\t\tif (target && !dragEl && (target.parentNode === el)) {\n\t\t\t\trootEl = el;\n\t\t\t\tdragEl = target;\n\t\t\t\tparentEl = dragEl.parentNode;\n\t\t\t\tnextEl = dragEl.nextSibling;\n\t\t\t\tlastDownEl = target;\n\t\t\t\tactiveGroup = options.group;\n\t\t\t\toldIndex = startIndex;\n\t\t\t\toldDraggableIndex = startDraggableIndex;\n\n\t\t\t\ttapEvt = {\n\t\t\t\t\ttarget: dragEl,\n\t\t\t\t\tclientX: (touch || evt).clientX,\n\t\t\t\t\tclientY: (touch || evt).clientY\n\t\t\t\t};\n\n\t\t\t\tthis._lastX = (touch || evt).clientX;\n\t\t\t\tthis._lastY = (touch || evt).clientY;\n\n\t\t\t\tdragEl.style['will-change'] = 'all';\n\t\t\t\t// undo animation if needed\n\t\t\t\tdragEl.style.transition = '';\n\t\t\t\tdragEl.style.transform = '';\n\n\t\t\t\tdragStartFn = function () {\n\t\t\t\t\t// Delayed drag has been triggered\n\t\t\t\t\t// we can re-enable the events: touchmove/mousemove\n\t\t\t\t\t_this._disableDelayedDragEvents();\n\n\t\t\t\t\tif (!FireFox && _this.nativeDraggable) {\n\t\t\t\t\t\tdragEl.draggable = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Bind the events: dragstart/dragend\n\t\t\t\t\t_this._triggerDragStart(evt, touch);\n\n\t\t\t\t\t// Drag start event\n\t\t\t\t\t_dispatchEvent(_this, rootEl, 'choose', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex);\n\n\t\t\t\t\t// Chosen item\n\t\t\t\t\t_toggleClass(dragEl, options.chosenClass, true);\n\t\t\t\t};\n\n\t\t\t\t// Disable \"draggable\"\n\t\t\t\toptions.ignore.split(',').forEach(function (criteria) {\n\t\t\t\t\t_find(dragEl, criteria.trim(), _disableDraggable);\n\t\t\t\t});\n\n\t\t\t\t_on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n\t\t\t\t_on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n\t\t\t\t_on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n\n\t\t\t\t_on(ownerDocument, 'mouseup', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchend', _this._onDrop);\n\t\t\t\t_on(ownerDocument, 'touchcancel', _this._onDrop);\n\n\t\t\t\t// Make dragEl draggable (must be before delay for FireFox)\n\t\t\t\tif (FireFox && this.nativeDraggable) {\n\t\t\t\t\tthis.options.touchStartThreshold = 4;\n\t\t\t\t\tdragEl.draggable = true;\n\t\t\t\t}\n\n\t\t\t\t// Delay is impossible for native DnD in Edge or IE\n\t\t\t\tif (options.delay && (options.delayOnTouchOnly ? touch : true) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n\t\t\t\t\t// If the user moves the pointer or let go the click or touch\n\t\t\t\t\t// before the delay has been reached:\n\t\t\t\t\t// disable the delayed drag\n\t\t\t\t\t_on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n\t\t\t\t\t_on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\t_on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n\t\t\t\t\toptions.supportPointer && _on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n\n\t\t\t\t\t_this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n\t\t\t\t} else {\n\t\t\t\t\tdragStartFn();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_delayedDragTouchMoveHandler: function (/** TouchEvent|PointerEvent **/e) {\n\t\t\tvar touch = e.touches ? e.touches[0] : e;\n\t\t\tif (max(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY))\n\t\t\t\t\t>= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))\n\t\t\t) {\n\t\t\t\tthis._disableDelayedDrag();\n\t\t\t}\n\t\t},\n\n\t\t_disableDelayedDrag: function () {\n\t\t\tdragEl && _disableDraggable(dragEl);\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\tthis._disableDelayedDragEvents();\n\t\t},\n\n\t\t_disableDelayedDragEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\t\t\t_off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchend', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n\t\t\t_off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n\t\t\t_off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n\t\t\t_off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n\t\t},\n\n\t\t_triggerDragStart: function (/** Event */evt, /** Touch */touch) {\n\t\t\ttouch = touch || (evt.pointerType == 'touch' ? evt : null);\n\n\t\t\tif (!this.nativeDraggable || touch) {\n\t\t\t\tif (this.options.supportPointer) {\n\t\t\t\t\t_on(document, 'pointermove', this._onTouchMove);\n\t\t\t\t} else if (touch) {\n\t\t\t\t\t_on(document, 'touchmove', this._onTouchMove);\n\t\t\t\t} else {\n\t\t\t\t\t_on(document, 'mousemove', this._onTouchMove);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_on(dragEl, 'dragend', this);\n\t\t\t\t_on(rootEl, 'dragstart', this._onDragStart);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tif (document.selection) {\n\t\t\t\t\t// Timeout neccessary for IE9\n\t\t\t\t\t_nextTick(function () {\n\t\t\t\t\t\tdocument.selection.empty();\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\twindow.getSelection().removeAllRanges();\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t}\n\t\t},\n\n\t\t_dragStarted: function (fallback, evt) {\n\t\t\tawaitingDragStarted = false;\n\t\t\tif (rootEl && dragEl) {\n\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t_on(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t\t_on(document, 'dragover', _checkAlignment);\n\t\t\t\t}\n\t\t\t\tvar options = this.options;\n\n\t\t\t\t// Apply effect\n\t\t\t\t!fallback && _toggleClass(dragEl, options.dragClass, false);\n\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\n\t\t\t\t// In case dragging an animated element\n\t\t\t\t_css(dragEl, 'transform', '');\n\n\t\t\t\tSortable.active = this;\n\n\t\t\t\tfallback && this._appendGhost();\n\n\t\t\t\t// Drag start event\n\t\t\t\t_dispatchEvent(this, rootEl, 'start', dragEl, rootEl, rootEl, oldIndex, undefined, oldDraggableIndex, undefined, evt);\n\t\t\t} else {\n\t\t\t\tthis._nulling();\n\t\t\t}\n\t\t},\n\n\t\t_emulateDragOver: function (forAutoScroll) {\n\t\t\tif (touchEvt) {\n\t\t\t\tif (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY && !forAutoScroll) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._lastX = touchEvt.clientX;\n\t\t\t\tthis._lastY = touchEvt.clientY;\n\n\t\t\t\t_hideGhostForTarget();\n\n\t\t\t\tvar target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\tvar parent = target;\n\n\t\t\t\twhile (target && target.shadowRoot) {\n\t\t\t\t\ttarget = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n\t\t\t\t\tif (target === parent) break;\n\t\t\t\t\tparent = target;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\tif (parent[expando]) {\n\t\t\t\t\t\t\tvar inserted;\n\n\t\t\t\t\t\t\tinserted = parent[expando]._onDragOver({\n\t\t\t\t\t\t\t\tclientX: touchEvt.clientX,\n\t\t\t\t\t\t\t\tclientY: touchEvt.clientY,\n\t\t\t\t\t\t\t\ttarget: target,\n\t\t\t\t\t\t\t\trootEl: parent\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif (inserted && !this.options.dragoverBubble) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttarget = parent; // store last element\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t\twhile (parent = parent.parentNode);\n\t\t\t\t}\n\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(touchEvt);\n\n\t\t\t\t_unhideGhostForTarget();\n\t\t\t}\n\t\t},\n\n\n\t\t_onTouchMove: function (/**TouchEvent*/evt, forAutoScroll) {\n\t\t\tif (tapEvt) {\n\t\t\t\tvar\toptions = this.options,\n\t\t\t\t\tfallbackTolerance = options.fallbackTolerance,\n\t\t\t\t\tfallbackOffset = options.fallbackOffset,\n\t\t\t\t\ttouch = evt.touches ? evt.touches[0] : evt,\n\t\t\t\t\tmatrix = ghostEl && _matrix(ghostEl),\n\t\t\t\t\tscaleX = ghostEl && matrix && matrix.a,\n\t\t\t\t\tscaleY = ghostEl && matrix && matrix.d,\n\t\t\t\t\trelativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && _getRelativeScrollOffset(ghostRelativeParent),\n\t\t\t\t\tdx = ((touch.clientX - tapEvt.clientX)\n\t\t\t\t\t\t\t+ fallbackOffset.x) / (scaleX || 1)\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0]) : 0) / (scaleX || 1),\n\t\t\t\t\tdy = ((touch.clientY - tapEvt.clientY)\n\t\t\t\t\t\t\t+ fallbackOffset.y) / (scaleY || 1)\n\t\t\t\t\t\t\t+ (relativeScrollOffset ? (relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1]) : 0) / (scaleY || 1),\n\t\t\t\t\ttranslate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\n\n\t\t\t\t// only set the status to dragging, when we are actually dragging\n\t\t\t\tif (!Sortable.active && !awaitingDragStarted) {\n\t\t\t\t\tif (fallbackTolerance &&\n\t\t\t\t\t\tmin(abs(touch.clientX - this._lastX), abs(touch.clientY - this._lastY)) < fallbackTolerance\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis._onDragStart(evt, true);\n\t\t\t\t}\n\n\t\t\t\t!forAutoScroll && this._handleAutoScroll(touch, true);\n\n\t\t\t\tmoved = true;\n\t\t\t\ttouchEvt = touch;\n\n\t\t\t\t_css(ghostEl, 'webkitTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'mozTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'msTransform', translate3d);\n\t\t\t\t_css(ghostEl, 'transform', translate3d);\n\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\t\t},\n\n\t\t_appendGhost: function () {\n\t\t\t// Bug if using scale(): https://stackoverflow.com/questions/2637058\n\t\t\t// Not being adjusted for\n\t\t\tif (!ghostEl) {\n\t\t\t\tvar container = this.options.fallbackOnBody ? document.body : rootEl,\n\t\t\t\t\trect = _getRect(dragEl, true, container, !PositionGhostAbsolutely),\n\t\t\t\t\tcss = _css(dragEl),\n\t\t\t\t\toptions = this.options;\n\n\t\t\t\t// Position absolutely\n\t\t\t\tif (PositionGhostAbsolutely) {\n\t\t\t\t\t// Get relatively positioned parent\n\t\t\t\t\tghostRelativeParent = container;\n\n\t\t\t\t\twhile (\n\t\t\t\t\t\t_css(ghostRelativeParent, 'position') === 'static' &&\n\t\t\t\t\t\t_css(ghostRelativeParent, 'transform') === 'none' &&\n\t\t\t\t\t\tghostRelativeParent !== document\n\t\t\t\t\t) {\n\t\t\t\t\t\tghostRelativeParent = ghostRelativeParent.parentNode;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document) {\n\t\t\t\t\t\tvar ghostRelativeParentRect = _getRect(ghostRelativeParent, true);\n\n\t\t\t\t\t\trect.top -= ghostRelativeParentRect.top;\n\t\t\t\t\t\trect.left -= ghostRelativeParentRect.left;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n\t\t\t\t\t\tif (ghostRelativeParent === document) ghostRelativeParent = _getWindowScrollingElement();\n\n\t\t\t\t\t\trect.top += ghostRelativeParent.scrollTop;\n\t\t\t\t\t\trect.left += ghostRelativeParent.scrollLeft;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tghostRelativeParent = _getWindowScrollingElement();\n\t\t\t\t\t}\n\t\t\t\t\tghostRelativeParentInitialScroll = _getRelativeScrollOffset(ghostRelativeParent);\n\t\t\t\t}\n\n\n\t\t\t\tghostEl = dragEl.cloneNode(true);\n\n\t\t\t\t_toggleClass(ghostEl, options.ghostClass, false);\n\t\t\t\t_toggleClass(ghostEl, options.fallbackClass, true);\n\t\t\t\t_toggleClass(ghostEl, options.dragClass, true);\n\n\t\t\t\t_css(ghostEl, 'box-sizing', 'border-box');\n\t\t\t\t_css(ghostEl, 'margin', 0);\n\t\t\t\t_css(ghostEl, 'top', rect.top);\n\t\t\t\t_css(ghostEl, 'left', rect.left);\n\t\t\t\t_css(ghostEl, 'width', rect.width);\n\t\t\t\t_css(ghostEl, 'height', rect.height);\n\t\t\t\t_css(ghostEl, 'opacity', '0.8');\n\t\t\t\t_css(ghostEl, 'position', (PositionGhostAbsolutely ? 'absolute' : 'fixed'));\n\t\t\t\t_css(ghostEl, 'zIndex', '100000');\n\t\t\t\t_css(ghostEl, 'pointerEvents', 'none');\n\n\t\t\t\tcontainer.appendChild(ghostEl);\n\t\t\t}\n\t\t},\n\n\t\t_onDragStart: function (/**Event*/evt, /**boolean*/fallback) {\n\t\t\tvar _this = this;\n\t\t\tvar dataTransfer = evt.dataTransfer;\n\t\t\tvar options = _this.options;\n\n\t\t\t// Setup clone\n\t\t\tcloneEl = _clone(dragEl);\n\n\t\t\tcloneEl.draggable = false;\n\t\t\tcloneEl.style['will-change'] = '';\n\n\t\t\tthis._hideClone();\n\n\t\t\t_toggleClass(cloneEl, _this.options.chosenClass, false);\n\n\n\t\t\t// #1143: IFrame support workaround\n\t\t\t_this._cloneId = _nextTick(function () {\n\t\t\t\tif (!_this.options.removeCloneOnHide) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t}\n\t\t\t\t_dispatchEvent(_this, rootEl, 'clone', dragEl);\n\t\t\t});\n\n\n\t\t\t!fallback && _toggleClass(dragEl, options.dragClass, true);\n\n\t\t\t// Set proper drop events\n\t\t\tif (fallback) {\n\t\t\t\tignoreNextClick = true;\n\t\t\t\t_this._loopId = setInterval(_this._emulateDragOver, 50);\n\t\t\t} else {\n\t\t\t\t// Undo what was set in _prepareDragStart before drag started\n\t\t\t\t_off(document, 'mouseup', _this._onDrop);\n\t\t\t\t_off(document, 'touchend', _this._onDrop);\n\t\t\t\t_off(document, 'touchcancel', _this._onDrop);\n\n\t\t\t\tif (dataTransfer) {\n\t\t\t\t\tdataTransfer.effectAllowed = 'move';\n\t\t\t\t\toptions.setData && options.setData.call(_this, dataTransfer, dragEl);\n\t\t\t\t}\n\n\t\t\t\t_on(document, 'drop', _this);\n\n\t\t\t\t// #1276 fix:\n\t\t\t\t_css(dragEl, 'transform', 'translateZ(0)');\n\t\t\t}\n\n\t\t\tawaitingDragStarted = true;\n\n\t\t\t_this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n\t\t\t_on(document, 'selectstart', _this);\n\t\t\tif (Safari) {\n\t\t\t\t_css(document.body, 'user-select', 'none');\n\t\t\t}\n\t\t},\n\n\n\t\t// Returns true - if no further action is needed (either inserted or another condition)\n\t\t_onDragOver: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\ttarget = evt.target,\n\t\t\t\tdragRect,\n\t\t\t\ttargetRect,\n\t\t\t\trevert,\n\t\t\t\toptions = this.options,\n\t\t\t\tgroup = options.group,\n\t\t\t\tactiveSortable = Sortable.active,\n\t\t\t\tisOwner = (activeGroup === group),\n\t\t\t\tcanSort = options.sort,\n\t\t\t\t_this = this;\n\n\t\t\tif (_silent) return;\n\n\t\t\t// Return invocation when dragEl is inserted (or completed)\n\t\t\tfunction completed(insertion) {\n\t\t\t\tif (insertion) {\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(_this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (activeSortable) {\n\t\t\t\t\t\t// Set ghost class to new sortable's ghost class\n\t\t\t\t\t\t_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n\t\t\t\t\t\t_toggleClass(dragEl, options.ghostClass, true);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (putSortable !== _this && _this !== Sortable.active) {\n\t\t\t\t\t\tputSortable = _this;\n\t\t\t\t\t} else if (_this === Sortable.active) {\n\t\t\t\t\t\tputSortable = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Animation\n\t\t\t\t\tdragRect && _this._animate(dragRect, dragEl);\n\t\t\t\t\ttarget && targetRect && _this._animate(targetRect, target);\n\t\t\t\t}\n\n\n\t\t\t\t// Null lastTarget if it is not inside a previously swapped element\n\t\t\t\tif ((target === dragEl && !dragEl.animated) || (target === el && !target.animated)) {\n\t\t\t\t\tlastTarget = null;\n\t\t\t\t}\n\n\t\t\t\t// no bubbling and not fallback\n\t\t\t\tif (!options.dragoverBubble && !evt.rootEl && target !== document) {\n\t\t\t\t\t_this._handleAutoScroll(evt);\n\t\t\t\t\tdragEl.parentNode[expando]._computeIsAligned(evt);\n\n\t\t\t\t\t// Do not detect for empty insert if already inserted\n\t\t\t\t\t!insertion && nearestEmptyInsertDetectEvent(evt);\n\t\t\t\t}\n\n\t\t\t\t!options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Call when dragEl has been inserted\n\t\t\tfunction changed() {\n\t\t\t\t_dispatchEvent(_this, rootEl, 'change', target, el, rootEl, oldIndex, _index(dragEl), oldDraggableIndex, _index(dragEl, options.draggable), evt);\n\t\t\t}\n\n\n\t\t\tif (evt.preventDefault !== void 0) {\n\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t}\n\n\n\t\t\tmoved = true;\n\n\t\t\ttarget = _closest(target, options.draggable, el, true);\n\n\t\t\t// target is dragEl or target is animated\n\t\t\tif (dragEl.contains(evt.target) || target.animated) {\n\t\t\t\treturn completed(false);\n\t\t\t}\n\n\t\t\tif (target !== dragEl) {\n\t\t\t\tignoreNextClick = false;\n\t\t\t}\n\n\t\t\tif (activeSortable && !options.disabled &&\n\t\t\t\t(isOwner\n\t\t\t\t\t? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n\t\t\t\t\t: (\n\t\t\t\t\t\tputSortable === this ||\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\t(this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) &&\n\t\t\t\t\t\t\tgroup.checkPut(this, activeSortable, dragEl, evt)\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tvar axis = this._getDirection(evt, target);\n\n\t\t\t\tdragRect = _getRect(dragEl);\n\n\t\t\t\tif (revert) {\n\t\t\t\t\tthis._hideClone();\n\t\t\t\t\tparentEl = rootEl; // actualization\n\n\t\t\t\t\tif (nextEl) {\n\t\t\t\t\t\trootEl.insertBefore(dragEl, nextEl);\n\t\t\t\t\t} else {\n\t\t\t\t\t\trootEl.appendChild(dragEl);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn completed(true);\n\t\t\t\t}\n\n\t\t\t\tvar elLastChild = _lastChild(el);\n\n\t\t\t\tif (!elLastChild || _ghostIsLast(evt, axis, el) && !elLastChild.animated) {\n\t\t\t\t\t// assign target only if condition is true\n\t\t\t\t\tif (elLastChild && el === evt.target) {\n\t\t\t\t\t\ttarget = elLastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target) {\n\t\t\t\t\t\ttargetRect = _getRect(target);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\tparentEl = el; // actualization\n\t\t\t\t\t\trealDragElRect = null;\n\n\t\t\t\t\t\tchanged();\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (target && target !== dragEl && target.parentNode === el) {\n\t\t\t\t\tvar direction = 0,\n\t\t\t\t\t\ttargetBeforeFirstSwap,\n\t\t\t\t\t\taligned = target.sortableMouseAligned,\n\t\t\t\t\t\tdifferentLevel = dragEl.parentNode !== el,\n\t\t\t\t\t\tside1 = axis === 'vertical' ? 'top' : 'left',\n\t\t\t\t\t\tscrolledPastTop = _isScrolledPast(target, 'top') || _isScrolledPast(dragEl, 'top'),\n\t\t\t\t\t\tscrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n\n\t\t\t\t\tif (lastTarget !== target) {\n\t\t\t\t\t\tlastMode = null;\n\t\t\t\t\t\ttargetBeforeFirstSwap = _getRect(target)[side1];\n\t\t\t\t\t\tpastFirstInvertThresh = false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reference: https://www.lucidchart.com/documents/view/10fa0e93-e362-4126-aca2-b709ee56bd8b/0\n\t\t\t\t\tif (\n\t\t\t\t\t\t_isElInRowColumn(dragEl, target, axis) && aligned ||\n\t\t\t\t\t\tdifferentLevel ||\n\t\t\t\t\t\tscrolledPastTop ||\n\t\t\t\t\t\toptions.invertSwap ||\n\t\t\t\t\t\tlastMode === 'insert' ||\n\t\t\t\t\t\t// Needed, in the case that we are inside target and inserted because not aligned... aligned will stay false while inside\n\t\t\t\t\t\t// and lastMode will change to 'insert', but we must swap\n\t\t\t\t\t\tlastMode === 'swap'\n\t\t\t\t\t) {\n\t\t\t\t\t\t// New target that we will be inside\n\t\t\t\t\t\tif (lastMode !== 'swap') {\n\t\t\t\t\t\t\tisCircumstantialInvert = options.invertSwap || differentLevel;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdirection = _getSwapDirection(evt, target, axis,\n\t\t\t\t\t\t\toptions.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold,\n\t\t\t\t\t\t\tisCircumstantialInvert,\n\t\t\t\t\t\t\tlastTarget === target);\n\t\t\t\t\t\tlastMode = 'swap';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Insert at position\n\t\t\t\t\t\tdirection = _getInsertDirection(target);\n\t\t\t\t\t\tlastMode = 'insert';\n\t\t\t\t\t}\n\t\t\t\t\tif (direction === 0) return completed(false);\n\n\t\t\t\t\trealDragElRect = null;\n\t\t\t\t\tlastTarget = target;\n\n\t\t\t\t\tlastDirection = direction;\n\n\t\t\t\t\ttargetRect = _getRect(target);\n\n\t\t\t\t\tvar nextSibling = target.nextElementSibling,\n\t\t\t\t\t\tafter = false;\n\n\t\t\t\t\tafter = direction === 1;\n\n\t\t\t\t\tvar moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n\t\t\t\t\tif (moveVector !== false) {\n\t\t\t\t\t\tif (moveVector === 1 || moveVector === -1) {\n\t\t\t\t\t\t\tafter = (moveVector === 1);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_silent = true;\n\t\t\t\t\t\tsetTimeout(_unsilent, 30);\n\n\t\t\t\t\t\tif (isOwner) {\n\t\t\t\t\t\t\tactiveSortable._hideClone();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tactiveSortable._showClone(this);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (after && !nextSibling) {\n\t\t\t\t\t\t\tel.appendChild(dragEl);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttarget.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Undo chrome's scroll adjustment\n\t\t\t\t\t\tif (scrolledPastTop) {\n\t\t\t\t\t\t\t_scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tparentEl = dragEl.parentNode; // actualization\n\n\t\t\t\t\t\t// must be done before animation\n\t\t\t\t\t\tif (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n\t\t\t\t\t\t\ttargetMoveDistance = abs(targetBeforeFirstSwap - _getRect(target)[side1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanged();\n\n\t\t\t\t\t\treturn completed(true);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (el.contains(dragEl)) {\n\t\t\t\t\treturn completed(false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t},\n\n\t\t_animate: function (prevRect, target) {\n\t\t\tvar ms = this.options.animation;\n\n\t\t\tif (ms) {\n\t\t\t\tvar currentRect = _getRect(target);\n\n\t\t\t\tif (target === dragEl) {\n\t\t\t\t\trealDragElRect = currentRect;\n\t\t\t\t}\n\n\t\t\t\tif (prevRect.nodeType === 1) {\n\t\t\t\t\tprevRect = _getRect(prevRect);\n\t\t\t\t}\n\n\t\t\t\t// Check if actually moving position\n\t\t\t\tif ((prevRect.left + prevRect.width / 2) !== (currentRect.left + currentRect.width / 2)\n\t\t\t\t\t|| (prevRect.top + prevRect.height / 2) !== (currentRect.top + currentRect.height / 2)\n\t\t\t\t) {\n\t\t\t\t\tvar matrix = _matrix(this.el),\n\t\t\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\t\t\t_css(target, 'transition', 'none');\n\t\t\t\t\t_css(target, 'transform', 'translate3d('\n\t\t\t\t\t\t+ (prevRect.left - currentRect.left) / (scaleX ? scaleX : 1) + 'px,'\n\t\t\t\t\t\t+ (prevRect.top - currentRect.top) / (scaleY ? scaleY : 1) + 'px,0)'\n\t\t\t\t\t);\n\n\t\t\t\t\tthis._repaint(target);\n\t\t\t\t\t_css(target, 'transition', 'transform ' + ms + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n\t\t\t\t\t_css(target, 'transform', 'translate3d(0,0,0)');\n\t\t\t\t}\n\n\t\t\t\t(typeof target.animated === 'number') && clearTimeout(target.animated);\n\t\t\t\ttarget.animated = setTimeout(function () {\n\t\t\t\t\t_css(target, 'transition', '');\n\t\t\t\t\t_css(target, 'transform', '');\n\t\t\t\t\ttarget.animated = false;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t},\n\n\t\t_repaint: function(target) {\n\t\t\treturn target.offsetWidth;\n\t\t},\n\n\t\t_offMoveEvents: function() {\n\t\t\t_off(document, 'touchmove', this._onTouchMove);\n\t\t\t_off(document, 'pointermove', this._onTouchMove);\n\t\t\t_off(document, 'dragover', nearestEmptyInsertDetectEvent);\n\t\t\t_off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n\t\t\t_off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n\t\t},\n\n\t\t_offUpEvents: function () {\n\t\t\tvar ownerDocument = this.el.ownerDocument;\n\n\t\t\t_off(ownerDocument, 'mouseup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchend', this._onDrop);\n\t\t\t_off(ownerDocument, 'pointerup', this._onDrop);\n\t\t\t_off(ownerDocument, 'touchcancel', this._onDrop);\n\t\t\t_off(document, 'selectstart', this);\n\t\t},\n\n\t\t_onDrop: function (/**Event*/evt) {\n\t\t\tvar el = this.el,\n\t\t\t\toptions = this.options;\n\t\t\tawaitingDragStarted = false;\n\t\t\tscrolling = false;\n\t\t\tisCircumstantialInvert = false;\n\t\t\tpastFirstInvertThresh = false;\n\n\t\t\tclearInterval(this._loopId);\n\n\t\t\tclearInterval(pointerElemChangedInterval);\n\t\t\t_clearAutoScrolls();\n\t\t\t_cancelThrottle();\n\n\t\t\tclearTimeout(this._dragStartTimer);\n\n\t\t\t_cancelNextTick(this._cloneId);\n\t\t\t_cancelNextTick(this._dragStartId);\n\n\t\t\t// Unbind events\n\t\t\t_off(document, 'mousemove', this._onTouchMove);\n\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(document, 'drop', this);\n\t\t\t\t_off(el, 'dragstart', this._onDragStart);\n\t\t\t\t_off(document, 'dragover', this._handleAutoScroll);\n\t\t\t\t_off(document, 'dragover', _checkAlignment);\n\t\t\t}\n\n\t\t\tif (Safari) {\n\t\t\t\t_css(document.body, 'user-select', '');\n\t\t\t}\n\n\t\t\tthis._offMoveEvents();\n\t\t\tthis._offUpEvents();\n\n\t\t\tif (evt) {\n\t\t\t\tif (moved) {\n\t\t\t\t\tevt.cancelable && evt.preventDefault();\n\t\t\t\t\t!options.dropBubble && evt.stopPropagation();\n\t\t\t\t}\n\n\t\t\t\tghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n\t\t\t\tif (rootEl === parentEl || (putSortable && putSortable.lastPutMode !== 'clone')) {\n\t\t\t\t\t// Remove clone\n\t\t\t\t\tcloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (dragEl) {\n\t\t\t\t\tif (this.nativeDraggable) {\n\t\t\t\t\t\t_off(dragEl, 'dragend', this);\n\t\t\t\t\t}\n\n\t\t\t\t\t_disableDraggable(dragEl);\n\t\t\t\t\tdragEl.style['will-change'] = '';\n\n\t\t\t\t\t// Remove class's\n\t\t\t\t\t_toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n\t\t\t\t\t_toggleClass(dragEl, this.options.chosenClass, false);\n\n\t\t\t\t\t// Drag stop event\n\t\t\t\t\t_dispatchEvent(this, rootEl, 'unchoose', dragEl, parentEl, rootEl, oldIndex, null, oldDraggableIndex, null, evt);\n\n\t\t\t\t\tif (rootEl !== parentEl) {\n\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t// Add event\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'add', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// Remove event\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'remove', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t\t// drag from one list and drop into another\n\t\t\t\t\t\t\t_dispatchEvent(null, parentEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tputSortable && putSortable.save();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (dragEl.nextSibling !== nextEl) {\n\t\t\t\t\t\t\t// Get the index of the dragged element within its parent\n\t\t\t\t\t\t\tnewIndex = _index(dragEl);\n\t\t\t\t\t\t\tnewDraggableIndex = _index(dragEl, options.draggable);\n\n\t\t\t\t\t\t\tif (newIndex >= 0) {\n\t\t\t\t\t\t\t\t// drag & drop within the same list\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'update', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'sort', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (Sortable.active) {\n\t\t\t\t\t\t/* jshint eqnull:true */\n\t\t\t\t\t\tif (newIndex == null || newIndex === -1) {\n\t\t\t\t\t\t\tnewIndex = oldIndex;\n\t\t\t\t\t\t\tnewDraggableIndex = oldDraggableIndex;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_dispatchEvent(this, rootEl, 'end', dragEl, parentEl, rootEl, oldIndex, newIndex, oldDraggableIndex, newDraggableIndex, evt);\n\n\t\t\t\t\t\t// Save sorting\n\t\t\t\t\t\tthis.save();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t\tthis._nulling();\n\t\t},\n\n\t\t_nulling: function() {\n\t\t\trootEl =\n\t\t\tdragEl =\n\t\t\tparentEl =\n\t\t\tghostEl =\n\t\t\tnextEl =\n\t\t\tcloneEl =\n\t\t\tlastDownEl =\n\n\t\t\tscrollEl =\n\t\t\tscrollParentEl =\n\t\t\tautoScrolls.length =\n\n\t\t\tpointerElemChangedInterval =\n\t\t\tlastPointerElemX =\n\t\t\tlastPointerElemY =\n\n\t\t\ttapEvt =\n\t\t\ttouchEvt =\n\n\t\t\tmoved =\n\t\t\tnewIndex =\n\t\t\toldIndex =\n\n\t\t\tlastTarget =\n\t\t\tlastDirection =\n\n\t\t\trealDragElRect =\n\n\t\t\tputSortable =\n\t\t\tactiveGroup =\n\t\t\tSortable.active = null;\n\n\t\t\tsavedInputChecked.forEach(function (el) {\n\t\t\t\tel.checked = true;\n\t\t\t});\n\n\t\t\tsavedInputChecked.length = 0;\n\t\t},\n\n\t\thandleEvent: function (/**Event*/evt) {\n\t\t\tswitch (evt.type) {\n\t\t\t\tcase 'drop':\n\t\t\t\tcase 'dragend':\n\t\t\t\t\tthis._onDrop(evt);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'dragenter':\n\t\t\t\tcase 'dragover':\n\t\t\t\t\tif (dragEl) {\n\t\t\t\t\t\tthis._onDragOver(evt);\n\t\t\t\t\t\t_globalDragOver(evt);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'selectstart':\n\t\t\t\t\tevt.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Serializes the item into an array of string.\n\t\t * @returns {String[]}\n\t\t */\n\t\ttoArray: function () {\n\t\t\tvar order = [],\n\t\t\t\tel,\n\t\t\t\tchildren = this.el.children,\n\t\t\t\ti = 0,\n\t\t\t\tn = children.length,\n\t\t\t\toptions = this.options;\n\n\t\t\tfor (; i < n; i++) {\n\t\t\t\tel = children[i];\n\t\t\t\tif (_closest(el, options.draggable, this.el, false)) {\n\t\t\t\t\torder.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn order;\n\t\t},\n\n\n\t\t/**\n\t\t * Sorts the elements according to the array.\n\t\t * @param  {String[]}  order  order of the items\n\t\t */\n\t\tsort: function (order) {\n\t\t\tvar items = {}, rootEl = this.el;\n\n\t\t\tthis.toArray().forEach(function (id, i) {\n\t\t\t\tvar el = rootEl.children[i];\n\n\t\t\t\tif (_closest(el, this.options.draggable, rootEl, false)) {\n\t\t\t\t\titems[id] = el;\n\t\t\t\t}\n\t\t\t}, this);\n\n\t\t\torder.forEach(function (id) {\n\t\t\t\tif (items[id]) {\n\t\t\t\t\trootEl.removeChild(items[id]);\n\t\t\t\t\trootEl.appendChild(items[id]);\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\n\n\t\t/**\n\t\t * Save the current sorting\n\t\t */\n\t\tsave: function () {\n\t\t\tvar store = this.options.store;\n\t\t\tstore && store.set && store.set(this);\n\t\t},\n\n\n\t\t/**\n\t\t * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\t\t * @param   {HTMLElement}  el\n\t\t * @param   {String}       [selector]  default: `options.draggable`\n\t\t * @returns {HTMLElement|null}\n\t\t */\n\t\tclosest: function (el, selector) {\n\t\t\treturn _closest(el, selector || this.options.draggable, this.el, false);\n\t\t},\n\n\n\t\t/**\n\t\t * Set/get option\n\t\t * @param   {string} name\n\t\t * @param   {*}      [value]\n\t\t * @returns {*}\n\t\t */\n\t\toption: function (name, value) {\n\t\t\tvar options = this.options;\n\n\t\t\tif (value === void 0) {\n\t\t\t\treturn options[name];\n\t\t\t} else {\n\t\t\t\toptions[name] = value;\n\n\t\t\t\tif (name === 'group') {\n\t\t\t\t\t_prepareGroup(options);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\n\t\t/**\n\t\t * Destroy\n\t\t */\n\t\tdestroy: function () {\n\t\t\tvar el = this.el;\n\n\t\t\tel[expando] = null;\n\n\t\t\t_off(el, 'mousedown', this._onTapStart);\n\t\t\t_off(el, 'touchstart', this._onTapStart);\n\t\t\t_off(el, 'pointerdown', this._onTapStart);\n\n\t\t\tif (this.nativeDraggable) {\n\t\t\t\t_off(el, 'dragover', this);\n\t\t\t\t_off(el, 'dragenter', this);\n\t\t\t}\n\t\t\t// Remove draggable attributes\n\t\t\tArray.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n\t\t\t\tel.removeAttribute('draggable');\n\t\t\t});\n\n\t\t\tthis._onDrop();\n\n\t\t\tsortables.splice(sortables.indexOf(this.el), 1);\n\n\t\t\tthis.el = el = null;\n\t\t},\n\n\t\t_hideClone: function() {\n\t\t\tif (!cloneEl.cloneHidden) {\n\t\t\t\t_css(cloneEl, 'display', 'none');\n\t\t\t\tcloneEl.cloneHidden = true;\n\t\t\t\tif (cloneEl.parentNode && this.options.removeCloneOnHide) {\n\t\t\t\t\tcloneEl.parentNode.removeChild(cloneEl);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t_showClone: function(putSortable) {\n\t\t\tif (putSortable.lastPutMode !== 'clone') {\n\t\t\t\tthis._hideClone();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (cloneEl.cloneHidden) {\n\t\t\t\t// show clone at dragEl or original position\n\t\t\t\tif (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, dragEl);\n\t\t\t\t} else if (nextEl) {\n\t\t\t\t\trootEl.insertBefore(cloneEl, nextEl);\n\t\t\t\t} else {\n\t\t\t\t\trootEl.appendChild(cloneEl);\n\t\t\t\t}\n\n\t\t\t\tif (this.options.group.revertClone) {\n\t\t\t\t\tthis._animate(dragEl, cloneEl);\n\t\t\t\t}\n\t\t\t\t_css(cloneEl, 'display', '');\n\t\t\t\tcloneEl.cloneHidden = false;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx, includeCTX) {\n\t\tif (el) {\n\t\t\tctx = ctx || document;\n\n\t\t\tdo {\n\t\t\t\tif (\n\t\t\t\t\tselector != null &&\n\t\t\t\t\t(\n\t\t\t\t\t\tselector[0] === '>' ?\n\t\t\t\t\t\tel.parentNode === ctx && _matches(el, selector) :\n\t\t\t\t\t\t_matches(el, selector)\n\t\t\t\t\t) ||\n\t\t\t\t\tincludeCTX && el === ctx\n\t\t\t\t) {\n\t\t\t\t\treturn el;\n\t\t\t\t}\n\n\t\t\t\tif (el === ctx) break;\n\t\t\t\t/* jshint boss:true */\n\t\t\t} while (el = _getParentOrHost(el));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\n\tfunction _getParentOrHost(el) {\n\t\treturn (el.host && el !== document && el.host.nodeType)\n\t\t\t? el.host\n\t\t\t: el.parentNode;\n\t}\n\n\n\tfunction _globalDragOver(/**Event*/evt) {\n\t\tif (evt.dataTransfer) {\n\t\t\tevt.dataTransfer.dropEffect = 'move';\n\t\t}\n\t\tevt.cancelable && evt.preventDefault();\n\t}\n\n\n\tfunction _on(el, event, fn) {\n\t\tel.addEventListener(event, fn, IE11OrLess ? false : captureMode);\n\t}\n\n\n\tfunction _off(el, event, fn) {\n\t\tel.removeEventListener(event, fn, IE11OrLess ? false : captureMode);\n\t}\n\n\n\tfunction _toggleClass(el, name, state) {\n\t\tif (el && name) {\n\t\t\tif (el.classList) {\n\t\t\t\tel.classList[state ? 'add' : 'remove'](name);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n\t\t\t\tel.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n\t\t\t}\n\t\t}\n\t}\n\n\n\tfunction _css(el, prop, val) {\n\t\tvar style = el && el.style;\n\n\t\tif (style) {\n\t\t\tif (val === void 0) {\n\t\t\t\tif (document.defaultView && document.defaultView.getComputedStyle) {\n\t\t\t\t\tval = document.defaultView.getComputedStyle(el, '');\n\t\t\t\t}\n\t\t\t\telse if (el.currentStyle) {\n\t\t\t\t\tval = el.currentStyle;\n\t\t\t\t}\n\n\t\t\t\treturn prop === void 0 ? val : val[prop];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (!(prop in style) && prop.indexOf('webkit') === -1) {\n\t\t\t\t\tprop = '-webkit-' + prop;\n\t\t\t\t}\n\n\t\t\t\tstyle[prop] = val + (typeof val === 'string' ? '' : 'px');\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _matrix(el) {\n\t\tvar appliedTransforms = '';\n\t\tdo {\n\t\t\tvar transform = _css(el, 'transform');\n\n\t\t\tif (transform && transform !== 'none') {\n\t\t\t\tappliedTransforms = transform + ' ' + appliedTransforms;\n\t\t\t}\n\t\t\t/* jshint boss:true */\n\t\t} while (el = el.parentNode);\n\n\t\tif (window.DOMMatrix) {\n\t\t\treturn new DOMMatrix(appliedTransforms);\n\t\t} else if (window.WebKitCSSMatrix) {\n\t\t\treturn new WebKitCSSMatrix(appliedTransforms);\n\t\t} else if (window.CSSMatrix) {\n\t\t\treturn new CSSMatrix(appliedTransforms);\n\t\t}\n\t}\n\n\n\tfunction _find(ctx, tagName, iterator) {\n\t\tif (ctx) {\n\t\t\tvar list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\n\n\t\t\tif (iterator) {\n\t\t\t\tfor (; i < n; i++) {\n\t\t\t\t\titerator(list[i], i);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\n\tfunction _dispatchEvent(\n\t\tsortable, rootEl, name,\n\t\ttargetEl, toEl, fromEl,\n\t\tstartIndex, newIndex,\n\t\tstartDraggableIndex, newDraggableIndex,\n\t\toriginalEvt\n\t) {\n\t\tsortable = (sortable || rootEl[expando]);\n\t\tvar evt,\n\t\t\toptions = sortable.options,\n\t\t\tonName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\n\t\t// Support for new CustomEvent feature\n\t\tif (window.CustomEvent && !IE11OrLess && !Edge) {\n\t\t\tevt = new CustomEvent(name, {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true\n\t\t\t});\n\t\t} else {\n\t\t\tevt = document.createEvent('Event');\n\t\t\tevt.initEvent(name, true, true);\n\t\t}\n\n\t\tevt.to = toEl || rootEl;\n\t\tevt.from = fromEl || rootEl;\n\t\tevt.item = targetEl || rootEl;\n\t\tevt.clone = cloneEl;\n\n\t\tevt.oldIndex = startIndex;\n\t\tevt.newIndex = newIndex;\n\n\t\tevt.oldDraggableIndex = startDraggableIndex;\n\t\tevt.newDraggableIndex = newDraggableIndex;\n\n\t\tevt.originalEvent = originalEvt;\n\t\tevt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n\t\tif (rootEl) {\n\t\t\trootEl.dispatchEvent(evt);\n\t\t}\n\n\t\tif (options[onName]) {\n\t\t\toptions[onName].call(sortable, evt);\n\t\t}\n\t}\n\n\n\tfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvt, willInsertAfter) {\n\t\tvar evt,\n\t\t\tsortable = fromEl[expando],\n\t\t\tonMoveFn = sortable.options.onMove,\n\t\t\tretVal;\n\t\t// Support for new CustomEvent feature\n\t\tif (window.CustomEvent && !IE11OrLess && !Edge) {\n\t\t\tevt = new CustomEvent('move', {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: true\n\t\t\t});\n\t\t} else {\n\t\t\tevt = document.createEvent('Event');\n\t\t\tevt.initEvent('move', true, true);\n\t\t}\n\n\t\tevt.to = toEl;\n\t\tevt.from = fromEl;\n\t\tevt.dragged = dragEl;\n\t\tevt.draggedRect = dragRect;\n\t\tevt.related = targetEl || toEl;\n\t\tevt.relatedRect = targetRect || _getRect(toEl);\n\t\tevt.willInsertAfter = willInsertAfter;\n\n\t\tevt.originalEvent = originalEvt;\n\n\t\tfromEl.dispatchEvent(evt);\n\n\t\tif (onMoveFn) {\n\t\t\tretVal = onMoveFn.call(sortable, evt, originalEvt);\n\t\t}\n\n\t\treturn retVal;\n\t}\n\n\tfunction _disableDraggable(el) {\n\t\tel.draggable = false;\n\t}\n\n\tfunction _unsilent() {\n\t\t_silent = false;\n\t}\n\n\t/**\n\t * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n\t * and non-draggable elements\n\t * @param  {HTMLElement} el       The parent element\n\t * @param  {Number} childNum      The index of the child\n\t * @param  {Object} options       Parent Sortable's options\n\t * @return {HTMLElement}          The child at index childNum, or null if not found\n\t */\n\tfunction _getChild(el, childNum, options) {\n\t\tvar currentChild = 0,\n\t\t\ti = 0,\n\t\t\tchildren = el.children;\n\n\t\twhile (i < children.length) {\n\t\t\tif (\n\t\t\t\tchildren[i].style.display !== 'none' &&\n\t\t\t\tchildren[i] !== ghostEl &&\n\t\t\t\tchildren[i] !== dragEl &&\n\t\t\t\t_closest(children[i], options.draggable, el, false)\n\t\t\t) {\n\t\t\t\tif (currentChild === childNum) {\n\t\t\t\t\treturn children[i];\n\t\t\t\t}\n\t\t\t\tcurrentChild++;\n\t\t\t}\n\n\t\t\ti++;\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n\t * @param  {HTMLElement} el       Parent element\n\t * @return {HTMLElement}          The last child, ignoring ghostEl\n\t */\n\tfunction _lastChild(el) {\n\t\tvar last = el.lastElementChild;\n\n\t\twhile (last && (last === ghostEl || _css(last, 'display') === 'none')) {\n\t\t\tlast = last.previousElementSibling;\n\t\t}\n\n\t\treturn last || null;\n\t}\n\n\tfunction _ghostIsLast(evt, axis, el) {\n\t\tvar elRect = _getRect(_lastChild(el)),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\tmouseOnOppAxis = axis === 'vertical' ? evt.clientX : evt.clientY,\n\t\t\ttargetS2 = axis === 'vertical' ? elRect.bottom : elRect.right,\n\t\t\ttargetS1Opp = axis === 'vertical' ? elRect.left : elRect.top,\n\t\t\ttargetS2Opp = axis === 'vertical' ? elRect.right : elRect.bottom,\n\t\t\tspacer = 10;\n\n\t\treturn (\n\t\t\taxis === 'vertical' ?\n\t\t\t\t(mouseOnOppAxis > targetS2Opp + spacer || mouseOnOppAxis <= targetS2Opp && mouseOnAxis > targetS2 && mouseOnOppAxis >= targetS1Opp) :\n\t\t\t\t(mouseOnAxis > targetS2 && mouseOnOppAxis > targetS1Opp || mouseOnAxis <= targetS2 && mouseOnOppAxis > targetS2Opp + spacer)\n\t\t);\n\t}\n\n\tfunction _getSwapDirection(evt, target, axis, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n\t\tvar targetRect = _getRect(target),\n\t\t\tmouseOnAxis = axis === 'vertical' ? evt.clientY : evt.clientX,\n\t\t\ttargetLength = axis === 'vertical' ? targetRect.height : targetRect.width,\n\t\t\ttargetS1 = axis === 'vertical' ? targetRect.top : targetRect.left,\n\t\t\ttargetS2 = axis === 'vertical' ? targetRect.bottom : targetRect.right,\n\t\t\tdragRect = _getRect(dragEl),\n\t\t\tinvert = false;\n\n\n\t\tif (!invertSwap) {\n\t\t\t// Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n\t\t\tif (isLastTarget && targetMoveDistance < targetLength * swapThreshold) { // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n\t\t\t\t// check if past first invert threshold on side opposite of lastDirection\n\t\t\t\tif (!pastFirstInvertThresh &&\n\t\t\t\t\t(lastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t\t{\n\t\t\t\t\t// past first invert threshold, do not restrict inverted threshold to dragEl shadow\n\t\t\t\t\tpastFirstInvertThresh = true;\n\t\t\t\t}\n\n\t\t\t\tif (!pastFirstInvertThresh) {\n\t\t\t\t\tvar dragS1 = axis === 'vertical' ? dragRect.top : dragRect.left,\n\t\t\t\t\t\tdragS2 = axis === 'vertical' ? dragRect.bottom : dragRect.right;\n\t\t\t\t\t// dragEl shadow (target move distance shadow)\n\t\t\t\t\tif (\n\t\t\t\t\t\tlastDirection === 1 ?\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n\t\t\t\t\t\t) :\n\t\t\t\t\t\t(\n\t\t\t\t\t\t\tmouseOnAxis > targetS2 - targetMoveDistance\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t\t{\n\t\t\t\t\t\treturn lastDirection * -1;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tinvert = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Regular\n\t\t\t\tif (\n\t\t\t\t\tmouseOnAxis > targetS1 + (targetLength * (1 - swapThreshold) / 2) &&\n\t\t\t\t\tmouseOnAxis < targetS2 - (targetLength * (1 - swapThreshold) / 2)\n\t\t\t\t) {\n\t\t\t\t\treturn _getInsertDirection(target);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinvert = invert || invertSwap;\n\n\t\tif (invert) {\n\t\t\t// Invert of regular\n\t\t\tif (\n\t\t\t\tmouseOnAxis < targetS1 + (targetLength * invertedSwapThreshold / 2) ||\n\t\t\t\tmouseOnAxis > targetS2 - (targetLength * invertedSwapThreshold / 2)\n\t\t\t)\n\t\t\t{\n\t\t\t\treturn ((mouseOnAxis > targetS1 + targetLength / 2) ? 1 : -1);\n\t\t\t}\n\t\t}\n\n\t\treturn 0;\n\t}\n\n\t/**\n\t * Gets the direction dragEl must be swapped relative to target in order to make it\n\t * seem that dragEl has been \"inserted\" into that element's position\n\t * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n\t * @return {Number}                   Direction dragEl must be swapped\n\t */\n\tfunction _getInsertDirection(target) {\n\t\tvar dragElIndex = _index(dragEl),\n\t\t\ttargetIndex = _index(target);\n\n\t\tif (dragElIndex < targetIndex) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\n\n\t/**\n\t * Generate id\n\t * @param   {HTMLElement} el\n\t * @returns {String}\n\t * @private\n\t */\n\tfunction _generateId(el) {\n\t\tvar str = el.tagName + el.className + el.src + el.href + el.textContent,\n\t\t\ti = str.length,\n\t\t\tsum = 0;\n\n\t\twhile (i--) {\n\t\t\tsum += str.charCodeAt(i);\n\t\t}\n\n\t\treturn sum.toString(36);\n\t}\n\n\t/**\n\t * Returns the index of an element within its parent for a selected set of\n\t * elements\n\t * @param  {HTMLElement} el\n\t * @param  {selector} selector\n\t * @return {number}\n\t */\n\tfunction _index(el, selector) {\n\t\tvar index = 0;\n\n\t\tif (!el || !el.parentNode) {\n\t\t\treturn -1;\n\t\t}\n\n\t\twhile (el && (el = el.previousElementSibling)) {\n\t\t\tif ((el.nodeName.toUpperCase() !== 'TEMPLATE') && el !== cloneEl && (!selector || _matches(el, selector))) {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\treturn index;\n\t}\n\n\tfunction _matches(/**HTMLElement*/el, /**String*/selector) {\n\t\tif (!selector) return;\n\n\t\tselector[0] === '>' && (selector = selector.substring(1));\n\n\t\tif (el) {\n\t\t\ttry {\n\t\t\t\tif (el.matches) {\n\t\t\t\t\treturn el.matches(selector);\n\t\t\t\t} else if (el.msMatchesSelector) {\n\t\t\t\t\treturn el.msMatchesSelector(selector);\n\t\t\t\t} else if (el.webkitMatchesSelector) {\n\t\t\t\t\treturn el.webkitMatchesSelector(selector);\n\t\t\t\t}\n\t\t\t} catch(_) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tvar _throttleTimeout;\n\tfunction _throttle(callback, ms) {\n\t\treturn function () {\n\t\t\tif (!_throttleTimeout) {\n\t\t\t\tvar args = arguments,\n\t\t\t\t\t_this = this;\n\n\t\t\t\t_throttleTimeout = setTimeout(function () {\n\t\t\t\t\tif (args.length === 1) {\n\t\t\t\t\t\tcallback.call(_this, args[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcallback.apply(_this, args);\n\t\t\t\t\t}\n\n\t\t\t\t\t_throttleTimeout = void 0;\n\t\t\t\t}, ms);\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction _cancelThrottle() {\n\t\tclearTimeout(_throttleTimeout);\n\t\t_throttleTimeout = void 0;\n\t}\n\n\tfunction _extend(dst, src) {\n\t\tif (dst && src) {\n\t\t\tfor (var key in src) {\n\t\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\t\tdst[key] = src[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\n\tfunction _clone(el) {\n\t\tif (Polymer && Polymer.dom) {\n\t\t\treturn Polymer.dom(el).cloneNode(true);\n\t\t}\n\t\telse if ($) {\n\t\t\treturn $(el).clone(true)[0];\n\t\t}\n\t\telse {\n\t\t\treturn el.cloneNode(true);\n\t\t}\n\t}\n\n\tfunction _saveInputCheckedState(root) {\n\t\tsavedInputChecked.length = 0;\n\n\t\tvar inputs = root.getElementsByTagName('input');\n\t\tvar idx = inputs.length;\n\n\t\twhile (idx--) {\n\t\t\tvar el = inputs[idx];\n\t\t\tel.checked && savedInputChecked.push(el);\n\t\t}\n\t}\n\n\tfunction _nextTick(fn) {\n\t\treturn setTimeout(fn, 0);\n\t}\n\n\tfunction _cancelNextTick(id) {\n\t\treturn clearTimeout(id);\n\t}\n\n\n\t/**\n\t * Returns the \"bounding client rect\" of given element\n\t * @param  {HTMLElement} el                The element whose boundingClientRect is wanted\n\t * @param  {[HTMLElement]} container       the parent the element will be placed in\n\t * @param  {[Boolean]} adjustForTransform  Whether the rect should compensate for parent's transform\n\t * @return {Object}                        The boundingClientRect of el\n\t */\n\tfunction _getRect(el, adjustForTransform, container, adjustForFixed) {\n\t\tif (!el.getBoundingClientRect && el !== win) return;\n\n\t\tvar elRect,\n\t\t\ttop,\n\t\t\tleft,\n\t\t\tbottom,\n\t\t\tright,\n\t\t\theight,\n\t\t\twidth;\n\n\t\tif (el !== win && el !== _getWindowScrollingElement()) {\n\t\t\telRect = el.getBoundingClientRect();\n\t\t\ttop = elRect.top;\n\t\t\tleft = elRect.left;\n\t\t\tbottom = elRect.bottom;\n\t\t\tright = elRect.right;\n\t\t\theight = elRect.height;\n\t\t\twidth = elRect.width;\n\t\t} else {\n\t\t\ttop = 0;\n\t\t\tleft = 0;\n\t\t\tbottom = window.innerHeight;\n\t\t\tright = window.innerWidth;\n\t\t\theight = window.innerHeight;\n\t\t\twidth = window.innerWidth;\n\t\t}\n\n\t\tif (adjustForFixed && el !== win) {\n\t\t\t// Adjust for translate()\n\t\t\tcontainer = container || el.parentNode;\n\n\t\t\t// solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n\t\t\t// Not needed on <= IE11\n\t\t\tif (!IE11OrLess) {\n\t\t\t\tdo {\n\t\t\t\t\tif (container && container.getBoundingClientRect && _css(container, 'transform') !== 'none') {\n\t\t\t\t\t\tvar containerRect = container.getBoundingClientRect();\n\n\t\t\t\t\t\t// Set relative to edges of padding box of container\n\t\t\t\t\t\ttop -= containerRect.top + parseInt(_css(container, 'border-top-width'));\n\t\t\t\t\t\tleft -= containerRect.left + parseInt(_css(container, 'border-left-width'));\n\t\t\t\t\t\tbottom = top + elRect.height;\n\t\t\t\t\t\tright = left + elRect.width;\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\t/* jshint boss:true */\n\t\t\t\t} while (container = container.parentNode);\n\t\t\t}\n\t\t}\n\n\t\tif (adjustForTransform && el !== win) {\n\t\t\t// Adjust for scale()\n\t\t\tvar matrix = _matrix(container || el),\n\t\t\t\tscaleX = matrix && matrix.a,\n\t\t\t\tscaleY = matrix && matrix.d;\n\n\t\t\tif (matrix) {\n\t\t\t\ttop /= scaleY;\n\t\t\t\tleft /= scaleX;\n\n\t\t\t\twidth /= scaleX;\n\t\t\t\theight /= scaleY;\n\n\t\t\t\tbottom = top + height;\n\t\t\t\tright = left + width;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\ttop: top,\n\t\t\tleft: left,\n\t\t\tbottom: bottom,\n\t\t\tright: right,\n\t\t\twidth: width,\n\t\t\theight: height\n\t\t};\n\t}\n\n\n\t/**\n\t * Checks if a side of an element is scrolled past a side of it's parents\n\t * @param  {HTMLElement}  el       The element who's side being scrolled out of view is in question\n\t * @param  {String}       side     Side of the element in question ('top', 'left', 'right', 'bottom')\n\t * @return {HTMLElement}           The parent scroll element that the el's side is scrolled past, or null if there is no such element\n\t */\n\tfunction _isScrolledPast(el, side) {\n\t\tvar parent = _getParentAutoScrollElement(el, true),\n\t\t\telSide = _getRect(el)[side];\n\n\t\t/* jshint boss:true */\n\t\twhile (parent) {\n\t\t\tvar parentSide = _getRect(parent)[side],\n\t\t\t\tvisible;\n\n\t\t\tif (side === 'top' || side === 'left') {\n\t\t\t\tvisible = elSide >= parentSide;\n\t\t\t} else {\n\t\t\t\tvisible = elSide <= parentSide;\n\t\t\t}\n\n\t\t\tif (!visible) return parent;\n\n\t\t\tif (parent === _getWindowScrollingElement()) break;\n\n\t\t\tparent = _getParentAutoScrollElement(parent, false);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n\t * The value is returned in real pixels.\n\t * @param  {HTMLElement} el\n\t * @return {Array}             Offsets in the format of [left, top]\n\t */\n\tfunction _getRelativeScrollOffset(el) {\n\t\tvar offsetLeft = 0,\n\t\t\toffsetTop = 0,\n\t\t\twinScroller = _getWindowScrollingElement();\n\n\t\tif (el) {\n\t\t\tdo {\n\t\t\t\tvar matrix = _matrix(el),\n\t\t\t\t\tscaleX = matrix.a,\n\t\t\t\t\tscaleY = matrix.d;\n\n\t\t\t\toffsetLeft += el.scrollLeft * scaleX;\n\t\t\t\toffsetTop += el.scrollTop * scaleY;\n\t\t\t} while (el !== winScroller && (el = el.parentNode));\n\t\t}\n\n\t\treturn [offsetLeft, offsetTop];\n\t}\n\n\t// Fixed #973:\n\t_on(document, 'touchmove', function(evt) {\n\t\tif ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n\t\t\tevt.preventDefault();\n\t\t}\n\t});\n\n\n\t// Export utils\n\tSortable.utils = {\n\t\ton: _on,\n\t\toff: _off,\n\t\tcss: _css,\n\t\tfind: _find,\n\t\tis: function (el, selector) {\n\t\t\treturn !!_closest(el, selector, el, false);\n\t\t},\n\t\textend: _extend,\n\t\tthrottle: _throttle,\n\t\tclosest: _closest,\n\t\ttoggleClass: _toggleClass,\n\t\tclone: _clone,\n\t\tindex: _index,\n\t\tnextTick: _nextTick,\n\t\tcancelNextTick: _cancelNextTick,\n\t\tdetectDirection: _detectDirection,\n\t\tgetChild: _getChild\n\t};\n\n\n\t/**\n\t * Create sortable instance\n\t * @param {HTMLElement}  el\n\t * @param {Object}      [options]\n\t */\n\tSortable.create = function (el, options) {\n\t\treturn new Sortable(el, options);\n\t};\n\n\n\t// Export\n\tSortable.version = '1.9.0';\n\n\treturn skylark.attach(\"itg.Sortable\",Sortable);\n});\n\ndefine('skylark-sortable/main',[\r\n\t\"./Sortable\"\r\n],function(Sortable){\r\n\treturn Sortable;\r\n});\ndefine('skylark-sortable', ['skylark-sortable/main'], function (main) { return main; });\n\n"]}